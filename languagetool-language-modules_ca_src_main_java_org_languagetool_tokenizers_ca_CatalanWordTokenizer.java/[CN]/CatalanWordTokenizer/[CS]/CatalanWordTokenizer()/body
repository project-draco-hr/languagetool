{
  if (speller == null) {
    if (JLanguageTool.getDataBroker().resourceExists(DICT_FILENAME)) {
      try {
        speller=new MorfologikSpeller(DICT_FILENAME);
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
  patterns[0]=Pattern.compile("^([lnmtsd]')([^'\\-]*)$",Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);
  patterns[1]=Pattern.compile("^(qui-sap-lo|qui-sap-la|qui-sap-los|qui-sap-les)$",Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);
  patterns[2]=Pattern.compile("^([lnmtsd]')(.{2,})" + PF + PF+ PF+ "$",Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);
  patterns[3]=Pattern.compile("^(.{2,})" + PF + PF+ PF+ "$",Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);
  patterns[4]=Pattern.compile("^([lnmtsd]')(.{2,})" + PF + PF+ "$",Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);
  patterns[5]=Pattern.compile("^(.{2,})" + PF + PF+ "$",Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);
  patterns[6]=Pattern.compile("^([lnmtsd]')(.{2,})" + PF + "$",Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);
  patterns[7]=Pattern.compile("^(.{2,})" + PF + "$",Pattern.UNICODE_CASE);
  patterns[8]=Pattern.compile("^([lnmtsd]')(.*)$",Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);
  patterns[9]=Pattern.compile("^(a|de|pe)(ls?)$",Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);
  patterns[10]=Pattern.compile("^(ca)(n)$",Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);
}
