{
  final List<Rule> oldRules=getRules(new File("tools/ltdiff/old"));
  final List<Rule> newRules=getRules(new File("tools/ltdiff/new"));
  final List<Rule> modifiedRules=new ArrayList<>();
  Collections.sort(oldRules);
  Collections.sort(newRules);
  final FileWriter fileWriter=new FileWriter("changes_" + lang + ".html");
  final BufferedWriter out=new BufferedWriter(fileWriter);
  for (  Rule newRule1 : newRules) {
    boolean found=false;
    for (int j=0; j < oldRules.size() && !found; j++) {
      if (newRule1.id.equals(oldRules.get(j).id) || newRule1.name.equals(oldRules.get(j).name)) {
        found=true;
        if (newRule1.numberOfExamples() > oldRules.get(j).numberOfExamples()) {
          final Rule r=newRule1;
          for (int k=0; k < r.correct.size(); k++) {
            for (int l=0; l < oldRules.get(j).correct.size() && r.correct.size() > 0; l++) {
              if (r.correct.get(k).equals(oldRules.get(j).correct.get(l))) {
                r.correct.remove(k);
                if (k > 0)                 k--;
              }
            }
          }
          for (int k=0; k < r.incorrect.size(); k++) {
            for (int l=0; l < oldRules.get(j).incorrect.size() && r.incorrect.size() > 0; l++) {
              if (r.incorrect.get(k).equals(oldRules.get(j).incorrect.get(l))) {
                r.incorrect.remove(k);
                if (k > 0)                 k--;
              }
            }
          }
          r.removeCorrectExamplesWithRelatedIncorrectExample();
          modifiedRules.add(r);
        }
      }
    }
    if (!found) {
      out.write("<tr class=\"new\"><td>4NEWRULE</td><td>" + newRule1.name + newRule1.getExamples(false)+ "</td></tr>\n");
    }
  }
  for (  Rule modifiedRule : modifiedRules) {
    out.write("<tr class=\"modified\"><td>6IMPROVEDRULE</td><td>" + modifiedRule.name + modifiedRule.getExamples(true)+ "</td></tr>\n");
  }
  for (  Rule oldRule : oldRules) {
    boolean found=false;
    for (    Rule newRule : newRules) {
      if (newRule.id.equals(oldRule.id) || newRule.name.equals(oldRule.name)) {
        found=true;
      }
    }
    if (!found && !oldRule.name.contains("<")) {
      out.write("<tr class=\"removed\"><td>5REMOVEDRULE</td><td>" + oldRule.name + "</td></tr>\n");
    }
  }
  out.close();
}
