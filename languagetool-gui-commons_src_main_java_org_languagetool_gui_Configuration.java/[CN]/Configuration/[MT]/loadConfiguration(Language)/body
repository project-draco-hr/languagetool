{
  final String qualifier=getQualifier(lang);
  try (FileInputStream fis=new FileInputStream(configFile)){
    final Properties props=new Properties();
    props.load(fis);
    disabledRuleIds.addAll(getListFromProperties(props,DISABLED_RULES_CONFIG_KEY + qualifier));
    enabledRuleIds.addAll(getListFromProperties(props,ENABLED_RULES_CONFIG_KEY + qualifier));
    disabledCategoryNames.addAll(getListFromProperties(props,DISABLED_CATEGORIES_CONFIG_KEY + qualifier));
    final String languageStr=(String)props.get(LANGUAGE_CONFIG_KEY);
    if (languageStr != null) {
      language=Language.getLanguageForShortName(languageStr);
    }
    final String motherTongueStr=(String)props.get(MOTHER_TONGUE_CONFIG_KEY);
    if (motherTongueStr != null && !motherTongueStr.equals("xx")) {
      motherTongue=Language.getLanguageForShortName(motherTongueStr);
    }
    autoDetect="true".equals(props.get(AUTO_DETECT_CONFIG_KEY));
    guiConfig="true".equals(props.get(USE_GUI_CONFIG_KEY));
    runServer="true".equals(props.get(SERVER_RUN_CONFIG_KEY));
    final String serverPortString=(String)props.get(SERVER_PORT_CONFIG_KEY);
    if (serverPortString != null) {
      serverPort=Integer.parseInt(serverPortString);
    }
    final String extRules=(String)props.get(EXTERNAL_RULE_DIRECTORY);
    if (extRules != null) {
      externalRuleDirectory=extRules;
    }
    loadConfigForOtherLanguages(lang,props);
  }
 catch (  final FileNotFoundException e) {
  }
}
