{
  List<RuleMatch> ruleMatches=new ArrayList<>();
  AnalyzedTokenReadings[] tokens=sentence.getTokensWithoutWhitespace();
  for (  AnalyzedTokenReadings token : tokens) {
    String word=token.getToken();
    boolean isName=word.length() >= minLength && token.hasPartialPosTag("EIG:") && !token.hasPartialPosTag(":COU");
    if (isName && StringTools.startsWithUppercase(word)) {
      String similarName=similarName(word);
      if (similarName != null) {
        String msg="'" + word + "' ??hnelt dem vorher benutzten '"+ similarName+ "', handelt es sich evtl. um einen Tippfehler?";
        RuleMatch ruleMatch=new RuleMatch(this,token.getStartPos(),token.getEndPos(),msg);
        ruleMatch.setSuggestedReplacement(similarName);
        ruleMatches.add(ruleMatch);
      }
      namesSoFar.add(word);
    }
  }
  return toRuleMatchArray(ruleMatches);
}
