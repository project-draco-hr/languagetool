{
  List<Rule> rules=getRules(lang);
  int sentenceCount=0;
  int errorFoundCount=0;
  System.out.println("Starting test for " + lang.getName() + " on "+ urlPrefix);
  System.out.println("Wait time between HTTP requests: " + WAIT_TIME_MILLIS + "ms");
  System.out.println("Starting test on " + rules.size() + " rules");
  for (  Rule rule : rules) {
    if (rule.isDefaultOff()) {
      System.out.println("Skipping rule that is off by default: " + rule.getId());
      continue;
    }
    List<IncorrectExample> incorrectExamples=rule.getIncorrectExamples();
    System.out.println("\n" + rule.getId() + ":");
    if (incorrectExamples.size() == 0) {
      System.out.println(" (no examples)");
      continue;
    }
    for (    IncorrectExample example : incorrectExamples) {
      boolean match=queryAtDServer(example);
      sentenceCount++;
      if (match) {
        errorFoundCount++;
      }
      String marker=match ? "+" : "-";
      System.out.println("  [" + marker + "] "+ example.getExample().replace("<marker>","<m>").replace("</marker>","</m>"));
      Thread.sleep(WAIT_TIME_MILLIS);
    }
  }
  System.out.println("\nDone.");
  System.out.println("Sentence count: " + sentenceCount);
  float percentage=(float)errorFoundCount / sentenceCount * 100;
  System.out.printf("Expected errors found: " + errorFoundCount + " (%.2f%%)\n",percentage);
}
