{
  final Language lang=getCurrentLanguage();
  if (StringTools.isEmpty(textArea.getText().trim())) {
    textArea.setText(messages.getString("enterText2"));
  }
 else {
    final String langName;
    if (lang.isExternal()) {
      langName=lang.getTranslatedName(messages) + EXTERNAL_LANGUAGE_SUFFIX;
    }
 else {
      langName=lang.getTranslatedName(messages);
    }
    new Thread(){
      public void run(){
        if (!isAlreadyChecking) {
          isAlreadyChecking=true;
          setWaitCursor();
          checkTextButton.setEnabled(false);
          try {
            final String startCheckText=HTML_GREY_FONT_START + Tools.makeTexti18n(messages,"startChecking",new Object[]{langName}) + "..."+ HTML_FONT_END;
            resultArea.setText(startCheckText);
            resultArea.repaint();
            try {
              final JLanguageTool langTool=getCurrentLanguageTool(lang);
              final long startTime=System.currentTimeMillis();
              ruleMatches=langTool.check(textArea.getText());
              resultArea.setStartText(startCheckText);
              resultArea.setInputText(textArea.getText());
              resultArea.setRuleMatches(ruleMatches);
              resultArea.setRunTime(System.currentTimeMillis() - startTime);
              resultArea.setLanguageTool(langTool);
              resultArea.displayResult();
            }
 catch (            final Exception e) {
              final String error="<br><br><b><font color=\"red\">" + org.languagetool.tools.Tools.getFullStackTrace(e).replace("\n","<br/>") + "</font></b><br>";
              resultArea.displayText(error);
            }
          }
  finally {
            checkTextButton.setEnabled(true);
            unsetWaitCursor();
            isAlreadyChecking=false;
          }
        }
      }
    }
.start();
  }
}
