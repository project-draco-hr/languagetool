{
  final StringWriter sw=new StringWriter();
  try {
    final Transformer t=TransformerFactory.newInstance().newTransformer();
    t.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,"yes");
    t.transform(new DOMSource(node),new StreamResult(sw));
  }
 catch (  TransformerException e) {
    throw new RuntimeException(e);
  }
  final String xml=sw.toString().replace("<token","\n    <token").replace("<and","\n    <and").replace("</and>","\n    </and>").replace("<phraseref","\n    <phraseref").replace("<antipattern","\n  <antipattern").replace("<pattern","\n  <pattern").replace("</pattern","\n  </pattern").replace("</antipattern","\n  </antipattern").replace("</rule>","\n</rule>").replace("<message","\n  <message").replace("<short","\n  <short").replace("<url","\n  <url").replace("<example","\n  <example").replace("</suggestion><suggestion>","</suggestion>\n  <suggestion>").replace("</message><suggestion>","</message>\n  <suggestion>");
  return xml;
}
