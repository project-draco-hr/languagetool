{
  final CheckWikipediaDump prg=new CheckWikipediaDump();
  ensureCorrectUsageOrExit(args);
  File propFile=null;
  if (!"-".equals(args[0])) {
    propFile=new File(args[0]);
    if (!propFile.exists() || propFile.isDirectory()) {
      throw new IOException("File not found or isn't a file: " + propFile.getAbsolutePath());
    }
  }
  final String languageCode=args[2];
  final Set<String> disabledRuleIds=new HashSet<String>();
  if (!"-".equals(args[1])) {
    final File disabledRulesPropFile=new File(args[1]);
    if (!disabledRulesPropFile.exists() || disabledRulesPropFile.isDirectory()) {
      throw new IOException("File not found or isn't a file: " + disabledRulesPropFile.getAbsolutePath());
    }
    final Properties disabledRules=new Properties();
    disabledRules.load(new FileInputStream(disabledRulesPropFile));
    addDisabledRules("all",disabledRuleIds,disabledRules);
    addDisabledRules(languageCode,disabledRuleIds,disabledRules);
  }
  final int maxArticles=Integer.parseInt(args[5]);
  final int maxErrors=Integer.parseInt(args[6]);
  String[] ruleIds=null;
  if (!"-".equals(args[4])) {
    ruleIds=args[4].split(",");
  }
  prg.run(propFile,disabledRuleIds,languageCode,args[3],ruleIds,maxArticles,maxErrors);
}
