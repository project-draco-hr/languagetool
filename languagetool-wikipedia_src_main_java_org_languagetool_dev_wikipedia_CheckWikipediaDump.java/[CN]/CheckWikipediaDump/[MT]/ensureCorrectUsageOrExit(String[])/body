{
  Options options=new Options();
  options.addOption(OptionBuilder.withLongOpt("language").withArgName("code").hasArg().withDescription("language code like 'en' or 'de'").isRequired().create("l"));
  options.addOption(OptionBuilder.withLongOpt("db-properties").withArgName("file").hasArg().withDescription("A file to set database access properties. If not set, the output will be written to STDOUT. " + "The file needs to set dbDriver (fully qualified driver class), dbUrl ('jdbc:...'), dbUser, and dbPassword.").create("d"));
  options.addOption(OptionBuilder.withLongOpt("rule-properties").withArgName("file").hasArg().withDescription("A file to set rules which should be disabled per language (e.g. en=RULE1,RULE2 or all=RULE3,RULE4)").create());
  options.addOption(OptionBuilder.withLongOpt("rule-ids").withArgName("id").hasArg().withDescription("comma-separated list of rule-ids to activate").create("r"));
  options.addOption(OptionBuilder.withLongOpt("file").withArgName("xmlfile").hasArg().withDescription("an unpacked Wikipedia XML dump; dumps are available from http://dumps.wikimedia.org/backup-index.html").isRequired().create("f"));
  options.addOption(OptionBuilder.withLongOpt("max-articles").withArgName("number").hasArg().withDescription("maximum number of articles to check").create());
  options.addOption(OptionBuilder.withLongOpt("max-errors").withArgName("number").hasArg().withDescription("maximum number of errors, stop when finding more").create());
  try {
    CommandLineParser parser=new GnuParser();
    return parser.parse(options,args);
  }
 catch (  org.apache.commons.cli.ParseException e) {
    System.err.println("Error: " + e.getMessage());
    HelpFormatter formatter=new HelpFormatter();
    formatter.setWidth(80);
    formatter.setSyntaxPrefix("Usage: ");
    formatter.printHelp(CheckWikipediaDump.class.getSimpleName() + " [OPTION]... --file <xmlfile> --language <code>",options);
    System.exit(1);
  }
  return null;
}
