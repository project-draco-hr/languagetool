{
  int maxCoverage=0;
  int coverage=0;
  long firstWordCount=lm.getCount(context.get(0));
  maxCoverage++;
  if (firstWordCount == 0) {
    debug("    # zero matches for '%s'\n",context.get(0));
  }
 else {
    coverage++;
  }
  double p=(double)(firstWordCount + 1) / (totalTokenCount + 1);
  debug("    P for %s: %.20f\n",context.get(0),p);
  for (int i=2; i <= context.size(); i++) {
    List<String> subList=context.subList(0,i);
    long phraseCount=lm.getCount(subList);
    double thisP=(double)(phraseCount + 1) / (firstWordCount + 1);
    maxCoverage++;
    debug("    P for " + subList + ": %.20f\n",thisP);
    if (phraseCount == 0) {
      debug("    # zero matches for '%s'\n",subList);
    }
 else {
      coverage++;
    }
    p*=thisP;
  }
  debug("  " + StringTools.listToString(context," ") + " => %.20f\n",p);
  return new Probability(p,(float)coverage / maxCoverage);
}
