{
  List<GoogleToken> tokens=getGoogleTokens(sentence.getText());
  List<RuleMatch> matches=new ArrayList<>();
  int pos=0;
  for (  GoogleToken googleToken : tokens) {
    String token=googleToken.token;
    ConfusionSet confusionSet=wordToSet.get(token);
    boolean uppercase=false;
    if (confusionSet == null && token.length() > 0 && Character.isUpperCase(token.charAt(0))) {
      confusionSet=wordToSet.get(StringTools.lowercaseFirstChar(token));
      uppercase=true;
    }
    boolean isEasilyConfused=confusionSet != null;
    if (isEasilyConfused) {
      Set<ConfusionString> set=uppercase ? confusionSet.getUppercaseFirstCharSet() : confusionSet.getSet();
      ConfusionString betterAlternative=getBetterAlternativeOrNull(tokens.get(pos),tokens,set,confusionSet.getFactor());
      if (betterAlternative != null) {
        String message=getMessage(betterAlternative.getString(),betterAlternative.getDescription());
        RuleMatch match=new RuleMatch(this,googleToken.startPos,googleToken.endPos,message);
        match.setSuggestedReplacement(betterAlternative.getString());
        matches.add(match);
      }
    }
    pos++;
  }
  return matches.toArray(new RuleMatch[matches.size()]);
}
