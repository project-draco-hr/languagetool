{
  List<String> res=new ArrayList<String>();
  try {
    int suggestionsCount=0;
    PointerByReference suggestions=new PointerByReference();
    final byte[] wordAsBytes=stringToBytes(word);
    if (wordAsBytes.length == 0 && word.length() > 0) {
      return res;
    }
    suggestionsCount=hsl.Hunspell_suggest(hunspellDict,suggestions,stringToBytes(word));
    if (suggestionsCount == 0) {
      return res;
    }
    Pointer[] pointerArray=suggestions.getValue().getPointerArray(0,suggestionsCount);
    for (int i=0; i < suggestionsCount; i++) {
      long len=pointerArray[i].indexOf(0,(byte)0);
      if (len != -1) {
        if (len > Integer.MAX_VALUE) {
          throw new RuntimeException("String improperly terminated: " + len);
        }
        byte[] data=pointerArray[i].getByteArray(0,(int)len);
        ByteBuffer bb1=ByteBuffer.allocate((int)len);
        bb1.put(data);
        bb1.limit((int)len);
        bb1.flip();
        CharBuffer ch=decoder.decode(bb1);
        res.add(ch.toString());
      }
    }
  }
 catch (  UnsupportedEncodingException ex) {
  }
  return res;
}
