{
  final List<RuleMatch> ruleMatches=new ArrayList<>();
  final AnalyzedTokenReadings[] tokens=text.getTokensWithoutWhitespace();
  String prevToken="";
  int prevPos=0;
  for (int i=1; i < tokens.length; i++) {
    String token=tokens[i].getToken();
    boolean doesRequireEl=false;
    token=token.replaceAll("[^a-z??????????????A-Z??????????????0-9\\.']","");
    if (StringTools.isEmpty(token)) {
      continue;
    }
    if (requiresEl.contains(token.toLowerCase()) || requiresEl.contains(token)) {
      doesRequireEl=true;
    }
    if (prevToken.equals("La") && token.equals("Haya")) {
      doesRequireEl=false;
    }
    String msg=null;
    String replacement=null;
    if (prevToken.equalsIgnoreCase("la") && doesRequireEl) {
      replacement="el";
      if (prevToken.equals("La")) {
        replacement="El";
      }
    }
 else     if (prevToken.equalsIgnoreCase("una") && doesRequireEl) {
      replacement="un";
      if (prevToken.equals("Una")) {
        replacement="Un";
      }
    }
 else     if (prevToken.equalsIgnoreCase("alguna") && doesRequireEl) {
      replacement="alg\u00fan";
      if (prevToken.equals("Alguna")) {
        replacement="Alg\u00fan";
      }
    }
 else     if (prevToken.equalsIgnoreCase("ninguna") && doesRequireEl) {
      replacement="ning\u00fan";
      if (prevToken.equals("Ninguna")) {
        replacement="Ning\u00fan";
      }
    }
    msg="Use <suggestion>" + replacement + "</suggestion> en lugar de '"+ prevToken+ "' si la siguiente "+ "palabra comienza por 'a' o 'ha' t\u00f3nicas, por ejemplo 'el hampa', "+ "'un agua'";
    if (replacement != null) {
      final RuleMatch ruleMatch=new RuleMatch(this,prevPos,prevPos + prevToken.length(),msg,"Art\u00edculo incorrecto");
      ruleMatches.add(ruleMatch);
    }
    if (tokens[i].hasPosTag("DA0FS0") || tokens[i].hasPosTag("DI0FS0")) {
      prevToken=token;
      prevPos=tokens[i].getStartPos();
    }
 else {
      prevToken="";
    }
  }
  return toRuleMatchArray(ruleMatches);
}
