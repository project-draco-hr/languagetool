{
  String errorMessage=errorMsg;
  int matchCounter=0;
  final int[] numbersToMatches=new int[errorMsg.length()];
  boolean newWay=false;
  int errLen=errorMessage.length();
  int errMarker=errorMessage.indexOf('\\');
  boolean numberFollows=false;
  if (errMarker > 0 && errMarker < errLen - 1) {
    numberFollows=StringTools.isPositiveNumber(errorMessage.charAt(errMarker + 1));
  }
  while (errMarker > 0 && numberFollows) {
    final int ind=errorMessage.indexOf('\\');
    if (ind > 0 && StringTools.isPositiveNumber(errorMessage.charAt(ind + 1))) {
      int numLen=1;
      while (ind + numLen < errorMessage.length() && StringTools.isPositiveNumber(errorMessage.charAt(ind + numLen))) {
        numLen++;
      }
      final int j=Integer.parseInt(errorMessage.substring(ind + 1,ind + numLen)) - 1;
      int repTokenPos=0;
      for (int l=0; l <= j; l++) {
        repTokenPos+=positions[l];
      }
      if (suggestionMatches != null) {
        if (matchCounter < suggestionMatches.size()) {
          numbersToMatches[j]=matchCounter;
          if (suggestionMatches.get(matchCounter) != null) {
            final String[] matches=concatMatches(matchCounter,j,firstMatchTok + repTokenPos,toks);
            final String leftSide=errorMessage.substring(0,ind);
            final String rightSide=errorMessage.substring(ind + numLen);
            if (matches.length == 1) {
              errorMessage=leftSide + matches[0] + rightSide;
            }
 else {
              errorMessage=formatMultipleSynthesis(matches,leftSide,rightSide);
            }
            matchCounter++;
            newWay=true;
          }
        }
 else {
          suggestionMatches.add(suggestionMatches.get(numbersToMatches[j]));
        }
      }
      if (!newWay) {
        errorMessage=errorMessage.replace("\\" + (j + 1),toks[firstMatchTok + repTokenPos - 1].getToken());
      }
    }
    errMarker=errorMessage.indexOf('\\');
    numberFollows=false;
    errLen=errorMessage.length();
    if (errMarker > 0 && errMarker < errLen - 1) {
      numberFollows=StringTools.isPositiveNumber(errorMessage.charAt(errMarker + 1));
    }
  }
  return errorMessage;
}
