{
  String errorMessage="";
  String suggestionLeft="";
  String suggestionRight="";
  String rightSideNew=rightSide;
  final int sPos=leftSide.lastIndexOf(SUGG_TAG);
  if (sPos > 0) {
    suggestionLeft=leftSide.substring(sPos + SUGG_TAG.length());
  }
  if (StringTools.isEmpty(suggestionLeft)) {
    errorMessage=leftSide;
  }
 else {
    errorMessage=leftSide.substring(0,leftSide.lastIndexOf(SUGG_TAG)) + SUGG_TAG;
  }
  final int rPos=rightSide.indexOf("</suggestion>");
  if (rPos > 0) {
    suggestionRight=rightSide.substring(0,rPos);
  }
  if (!StringTools.isEmpty(suggestionRight)) {
    rightSideNew=rightSide.substring(rightSide.indexOf("</suggestion>"));
  }
  final int lastLeftSugEnd=leftSide.indexOf("</suggestion>");
  final int lastLeftSugStart=leftSide.lastIndexOf(SUGG_TAG);
  final StringBuilder sb=new StringBuilder();
  sb.append(errorMessage);
  for (int z=0; z < matches.length; z++) {
    sb.append(suggestionLeft);
    sb.append(matches[z]);
    sb.append(suggestionRight);
    if ((z < matches.length - 1) && lastLeftSugEnd < lastLeftSugStart) {
      sb.append("</suggestion>, ");
      sb.append(SUGG_TAG);
    }
  }
  sb.append(rightSideNew);
  return sb.toString();
}
