{
  List elements=new ArrayList();
  pattern=pattern.replaceAll("[\\(\\)]","");
  String[] parts=pattern.split("\\s+");
  for (int i=0; i < parts.length; i++) {
    String element=parts[i];
    boolean negation=false;
    if (element.startsWith("^")) {
      negation=true;
      element=element.substring(1);
    }
    if ((element.startsWith("\"") && !element.endsWith("\"")) || (element.endsWith("\"") && !element.startsWith("\""))) {
      throw new IllegalArgumentException("Invalid pattern '" + pattern + "': unbalanced quote");
    }
    if (element.startsWith("\"") && element.endsWith("\"")) {
      element=element.substring(1,element.length() - 1);
      String tokenParts[]=element.split("\\|");
      StringElement stringElement=new StringElement(tokenParts,caseSensitive,false);
      stringElement.setNegation(negation);
      elements.add(stringElement);
    }
 else     if (Character.isUpperCase(element.charAt(0))) {
      String tokenParts[];
      String exceptions[]=null;
      POSElement posElement;
      if (element.indexOf("^") != -1) {
        tokenParts=element.substring(0,element.indexOf("^")).split("\\|");
        exceptions=element.substring(element.indexOf("^") + 1).split("\\|");
      }
 else {
        tokenParts=element.split("\\|");
      }
      posElement=new POSElement(tokenParts,caseSensitive,true,exceptions);
      posElement.setNegation(negation);
      elements.add(posElement);
    }
 else {
      throw new IllegalArgumentException("Unknown type " + element + " in pattern: "+ pattern);
    }
  }
  return (Element[])elements.toArray(new Element[0]);
}
