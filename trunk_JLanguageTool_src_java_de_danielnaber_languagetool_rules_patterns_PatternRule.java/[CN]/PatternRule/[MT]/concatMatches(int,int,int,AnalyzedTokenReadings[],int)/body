{
  String[] finalMatch=null;
  if (suggestionMatches.get(start) != null) {
    final int len=phraseLen(index);
    if (len == 1) {
      final int skippedTokens=nextTokenPos - tokenIndex;
      suggestionMatches.get(start).setToken(tokens,tokenIndex - 1,skippedTokens);
      suggestionMatches.get(start).setSynthesizer(language.getSynthesizer());
      finalMatch=suggestionMatches.get(start).toFinalString();
    }
 else {
      final List<String[]> matchList=new ArrayList<String[]>();
      for (int i=0; i < len; i++) {
        final int skippedTokens=nextTokenPos - (tokenIndex + i);
        suggestionMatches.get(start).setToken(tokens,tokenIndex - 1 + i,skippedTokens);
        suggestionMatches.get(start).setSynthesizer(language.getSynthesizer());
        matchList.add(suggestionMatches.get(start).toFinalString());
      }
      return combineLists(matchList.toArray(new String[matchList.size()][]),new String[matchList.size()],0,language);
    }
  }
  return finalMatch;
}
