{
  HTTPServer server=new HTTPServer();
  try {
    server.run();
    RemoteLanguageTool lt=new RemoteLanguageTool(new URL(serverUrl));
    assertThat(lt.check("This is a correct sentence.","en").getMatches().size(),is(0));
    assertThat(lt.check("Sentence wiht a typo not detected.","en").getMatches().size(),is(0));
    assertThat(lt.check("Sentence wiht a typo detected.","en-US").getMatches().size(),is(1));
    assertThat(lt.check("A sentence with a error.","en").getMatches().size(),is(1));
    RemoteResult result1=lt.check("A sentence with a error, and and another one","en");
    assertThat(result1.getLanguage(),is("English"));
    assertThat(result1.getLanguageCode(),is("en"));
    assertThat(result1.getRemoteServer().getSoftware(),is("LanguageTool"));
    assertNotNull(result1.getRemoteServer().getVersion());
    assertNotNull(result1.getRemoteServer().getBuildDate());
    assertThat(result1.getMatches().size(),is(2));
    assertThat(result1.getMatches().get(0).getRuleId(),is("EN_A_VS_AN"));
    assertThat(result1.getMatches().get(1).getRuleId(),is("ENGLISH_WORD_REPEAT_RULE"));
    RemoteResult result2=lt.checkWithLanguageGuessing("Ein Satz in Deutsch, mit etwas mehr Text, damit es auch geht.","en");
    assertThat(result2.getLanguage(),is("German (Germany)"));
    assertThat(result2.getLanguageCode(),is("de-DE"));
    RemoteResult result3=lt.checkWithLanguageGuessing("x","fr");
    assertThat(result3.getLanguage(),is("French"));
    assertThat(result3.getLanguageCode(),is("fr"));
    try {
      System.err.println("=== Testing invalid language code - ignore the following exception: ===");
      lt.check("foo","xy");
      fail();
    }
 catch (    RuntimeException e) {
      assertTrue(e.getMessage().contains("is not a language code known to LanguageTool"));
    }
  }
  finally {
    server.stop();
  }
}
