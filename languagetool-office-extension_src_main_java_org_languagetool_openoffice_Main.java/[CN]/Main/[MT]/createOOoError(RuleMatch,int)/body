{
  final SingleProofreadingError aError=new SingleProofreadingError();
  aError.nErrorType=com.sun.star.text.TextMarkupType.PROOFREADING;
  final String comment=myMatch.getMessage().replaceAll("<suggestion>","\"").replaceAll("</suggestion>","\"").replaceAll("([\r]*\n)"," ");
  aError.aFullComment=comment;
  if (!StringTools.isEmpty(myMatch.getShortMessage())) {
    aError.aShortComment=myMatch.getShortMessage();
  }
 else {
    aError.aShortComment=aError.aFullComment;
  }
  aError.aShortComment=org.languagetool.gui.Tools.shortenComment(aError.aShortComment);
  aError.aSuggestions=myMatch.getSuggestedReplacements().toArray(new String[myMatch.getSuggestedReplacements().size()]);
  aError.nErrorStart=myMatch.getFromPos() + startIndex;
  aError.nErrorLength=myMatch.getToPos() - myMatch.getFromPos();
  aError.aRuleIdentifier=myMatch.getRule().getId();
  if (myMatch.getRule().getUrl() != null) {
    aError.aProperties=new PropertyValue[]{new PropertyValue("FullCommentURL",-1,myMatch.getRule().getUrl().toString(),PropertyState.DIRECT_VALUE)};
  }
 else {
    aError.aProperties=new PropertyValue[0];
  }
  return aError;
}
