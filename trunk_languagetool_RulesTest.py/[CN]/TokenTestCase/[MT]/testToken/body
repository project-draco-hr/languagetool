def testToken(self):
    token = Rules.Token('NN')
    self.assertEqual(token.token, 'NN')
    assert (not token.negation)
    assert token.is_tag
    assert (not token.is_word)
    assert (not token.is_chunk)
    assert token.simple_token
    token = Rules.Token('"word"')
    self.assertEqual(token.token, 'word')
    assert (not token.negation)
    assert (not token.is_tag)
    assert token.is_word
    assert (not token.is_chunk)
    assert token.simple_token
    token = Rules.Token('^(NN)')
    self.assertEqual(token.token, '(NN)')
    assert token.negation
    assert token.is_tag
    assert (not token.is_word)
    assert (not token.is_chunk)
    assert (not token.simple_token)
    token = Rules.Token('^"word"')
    self.assertEqual(token.token, 'word')
    assert token.negation
    assert (not token.is_tag)
    assert token.is_word
    assert (not token.is_chunk)
    assert token.simple_token
    token = Rules.Token('_NP')
    self.assertEqual(token.token, 'NP')
    assert (not token.negation)
    assert (not token.is_tag)
    assert (not token.is_word)
    assert token.is_chunk
    assert token.simple_token
    token = Rules.Token('(AA|BB|CC)')
    self.assertEqual(token.token, '(AA|BB|CC)')
    assert (not token.negation)
    assert token.is_tag
    assert (not token.is_word)
    assert (not token.is_chunk)
    assert (not token.simple_token)
    return
