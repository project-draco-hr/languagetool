{
  List ruleMatches=new ArrayList();
  AnalyzedToken[] tokens=text.getTokens();
  String prevToken="";
  int pos=0;
  int prevPos=0;
  for (int i=0; i < tokens.length; i++) {
    String token=tokens[i].getToken();
    pos+=token.length();
    String msg=null;
    int fixPos=0;
    if (token.trim().equals("") && prevToken.trim().equals("(")) {
      msg="Don't put a space after the opening parenthesis.";
    }
 else     if (token.trim().equals(")") && prevToken.trim().equals("")) {
      msg="Don't put a space before the closing parenthesis.";
      fixPos=-1;
    }
 else     if (token.trim().equals(",") && prevToken.trim().equals("")) {
      msg="Put a space after the comma, but not before the comma.";
      fixPos=-1;
    }
    if (msg != null) {
      RuleMatch ruleMatch=new RuleMatch(this,prevPos + fixPos,prevPos + fixPos + prevToken.length(),msg);
      ruleMatches.add(ruleMatch);
    }
    prevToken=token;
    prevPos=pos;
  }
  return toRuleMatchArray(ruleMatches);
}
