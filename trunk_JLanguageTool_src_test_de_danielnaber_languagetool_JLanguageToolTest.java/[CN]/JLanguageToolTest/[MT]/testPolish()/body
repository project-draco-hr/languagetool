{
  JLanguageTool tool=new JLanguageTool(Language.POLISH);
  assertEquals("[PL]",Arrays.toString(Language.POLISH.getCountryVariants()));
  List<RuleMatch> matches=tool.check("To jest ca??kowicie prawid??owe zdanie.");
  assertEquals(0,matches.size());
  matches=tool.check("To jest jest problem.");
  assertEquals(1,matches.size());
  matches=tool.check("By?? on bowiem pi??knym strzelcem bowiem.");
  assertEquals(0,matches.size());
  tool.enableDefaultOffRule("PL_WORD_REPEAT");
  matches=tool.check("By?? on bowiem pi??knym strzelcem bowiem.");
  assertEquals(1,matches.size());
  tool.activateDefaultPatternRules();
  matches=tool.check("Premier drapie si?? w ucho co i rusz.");
  assertEquals(1,matches.size());
  matches=tool.check("I can give you more a detailed description");
  assertEquals(0,matches.size());
  tool.setListUnknownWords(true);
  matches=tool.check("This is not a Polish text.");
  assertEquals(0,matches.size());
  assertEquals("[Polish, This, is]",tool.getUnknownWords().toString());
  matches=tool.check("To jest tekst.\nTest 1. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(16,matches.get(0).getColumn());
  matches=tool.check("To jest tekst. \nTest 1. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(16,matches.get(0).getColumn());
  matches=tool.check("To jest tekst. Test 1. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(30,matches.get(0).getColumn());
  final Language lang=Language.POLISH;
  lang.getSentenceTokenizer().setSingleLineBreaksMarksParagraph(true);
  tool=new JLanguageTool(lang);
  tool.activateDefaultPatternRules();
  matches=tool.check("To jest tekst.\nTest 1. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(16,matches.get(0).getColumn());
  matches=tool.check("To jest tekst. \nTest 1. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(16,matches.get(0).getColumn());
  matches=tool.check("To jest tekst. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(23,matches.get(0).getColumn());
}
