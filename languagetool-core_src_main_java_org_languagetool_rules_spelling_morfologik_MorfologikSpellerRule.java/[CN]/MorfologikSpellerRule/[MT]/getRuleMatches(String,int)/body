{
  List<RuleMatch> ruleMatches=new ArrayList<>();
  if (isMisspelled(speller1,word) || isProhibited(word)) {
    RuleMatch ruleMatch=new RuleMatch(this,startPos,startPos + word.length(),messages.getString("spelling"),messages.getString("desc_spelling_short"));
    List<String> suggestions=speller1.getSuggestions(word);
    if (suggestions.size() == 0 && word.length() >= 5) {
      suggestions.addAll(speller2.getSuggestions(word));
    }
    suggestions.addAll(0,getAdditionalTopSuggestions(suggestions,word));
    suggestions.addAll(getAdditionalSuggestions(suggestions,word));
    if (!suggestions.isEmpty()) {
      filterSuggestions(suggestions);
      ruleMatch.setSuggestedReplacements(orderSuggestions(suggestions,word));
    }
    ruleMatches.add(ruleMatch);
  }
  return ruleMatches;
}
