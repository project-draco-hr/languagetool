{
  TestTools.myAssert("??-??-??","??-??-??/[null]null",tokenizer,tagger);
  TestTools.myAssert("100-??????????????","100-??????????????/[100-????????????]adj:m:v_dav|100-??????????????/[100-????????????]adj:m:v_mis|100-??????????????/[100-????????????]adj:n:v_dav|100-??????????????/[100-????????????]adj:n:v_mis",tokenizer,tagger);
  TestTools.myAssert("100-??","100-??/[100-??]adj:f:v_dav:&numr|100-??/[100-??]adj:f:v_mis:&numr|100-??/[100-??]adj:m:v_naz:&numr|100-??/[100-??]adj:m:v_zna:rinanim:&numr",tokenizer,tagger);
  TestTools.myAssert("50-??","50-??/[50-??]adj:p:v_mis:&numr|50-??/[50-??]adj:p:v_rod:&numr|50-??/[50-??]adj:p:v_zna:&numr",tokenizer,tagger);
  TestTools.myAssert("11-????","11-????/[11-??]adj:f:v_zna:&numr",tokenizer,tagger);
  TestTools.myAssert("????-??????????????????","????-??????????????????/[????-??????????????????]adv",tokenizer,tagger);
  TestTools.myAssert("????-??????????????????","????-??????????????????/[????-??????????????????]adv",tokenizer,tagger);
  TestTools.myAssert("??????????-????","??????????-????/[????????????]verb:imperf:impr:s:2",tokenizer,tagger);
  TestTools.myAssert("????????????????-????","????????????????-????/[????????????????]verb:rev:imperf:impr:p:2",tokenizer,tagger);
  TestTools.myAssert("??????-????????","??????-????????/[??????-????????]adj:m:v_naz:&pron:dem|??????-????????/[??????-????????]adj:m:v_zna:rinanim:&pron:dem",tokenizer,tagger);
  TestTools.myAssert("????????-????????","????????-????????/[????????]verb:imperf:futr:s:3",tokenizer,tagger);
  TestTools.myAssert("????????-????","????????-????/[????????]adj:m:v_naz:&pron:dem|????????-????/[????????]adj:m:v_zna:rinanim:&pron:dem",tokenizer,tagger);
  TestTools.myAssert("??????????????-????","??????????????-????/[??????????????]adj:m:v_naz:&pron:dem:rare|??????????????-????/[??????????????]adj:m:v_zna:rinanim:&pron:dem:rare",tokenizer,tagger);
  TestTools.myAssert("??????-????","??????-????/[??????]intj|??????-????/[??????]part",tokenizer,tagger);
  TestTools.myAssert("????????-????","????????-????/[????????]predic",tokenizer,tagger);
  TestTools.myAssert("??????-????","??????-????/[??????]intj",tokenizer,tagger);
  TestTools.myAssert("????????-????","????????-????/[????????]intj",tokenizer,tagger);
  TestTools.myAssert("????????-????","????????-????/[????????]adv:compb",tokenizer,tagger);
}
