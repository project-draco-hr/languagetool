{
  long startTime=System.currentTimeMillis();
  Language language=new English();
  JLanguageTool lt=new JLanguageTool(language);
  System.out.println("Creating index for " + language + "...");
  int ruleCount=createIndex(lt);
  System.out.println("Index created with " + ruleCount + " rules");
  int ruleCounter=0;
  int ruleProblems=0;
  int exceptionCount=0;
  List<Rule> rules=lt.getAllActiveRules();
  for (  Rule rule : rules) {
    if (rule instanceof PatternRule && !rule.isDefaultOff()) {
      PatternRule patternRule=(PatternRule)rule;
      try {
        ruleCounter++;
        SearcherResult searcherResult=errorSearcher.findRuleMatchesOnIndex(patternRule,language);
        List<MatchingSentence> matchingSentences=searcherResult.getMatchingSentences();
        boolean foundExpectedMatch=false;
        for (        MatchingSentence matchingSentence : matchingSentences) {
          List<RuleMatch> ruleMatches=matchingSentence.getRuleMatches();
          List<String> ruleMatchIds=getRuleMatchIds(ruleMatches);
          if (ruleMatchIds.contains(patternRule.getFullId())) {
            foundExpectedMatch=true;
            break;
          }
        }
        if (!foundExpectedMatch) {
          System.out.println("Error: No match found for " + patternRule);
          System.out.println("Query      : " + searcherResult.getRelaxedQuery().toString(FIELD_NAME_LOWERCASE));
          System.out.println("Default field: " + FIELD_NAME_LOWERCASE);
          System.out.println("Lucene Hits: " + searcherResult.getLuceneMatchCount());
          System.out.println("Matches    : " + matchingSentences);
          System.out.println("Examples   : " + rule.getIncorrectExamples());
          System.out.println();
          ruleProblems++;
        }
 else {
        }
      }
 catch (      UnsupportedPatternRuleException e) {
        System.out.println("UnsupportedPatternRuleException searching for rule " + patternRule.getFullId() + ": "+ e.getMessage());
        ruleProblems++;
      }
catch (      Exception e) {
        System.out.println("Exception searching for rule " + patternRule.getFullId() + ": "+ e.getMessage());
        e.printStackTrace(System.out);
        exceptionCount++;
      }
    }
  }
  System.out.println(language + ": problems: " + ruleProblems+ ", total rules: "+ ruleCounter);
  System.out.println(language + ": exceptions: " + exceptionCount+ " (including timeouts)");
  System.out.println("Total time: " + (System.currentTimeMillis() - startTime) + "ms");
}
