{
  final long startTime=System.currentTimeMillis();
  final Language language=new English();
  final JLanguageTool lt=new JLanguageTool(language);
  lt.activateDefaultPatternRules();
  System.out.println("Creating index for " + language + "...");
  final int ruleCount=createIndex(lt);
  System.out.println("Index created with " + ruleCount + " rules");
  int ruleCounter=0;
  int ruleProblems=0;
  int exceptionCount=0;
  final DirectoryReader reader=DirectoryReader.open(directory);
  try {
    final List<Rule> rules=lt.getAllActiveRules();
    for (    Rule rule : rules) {
      if (rule instanceof PatternRule && !rule.isDefaultOff()) {
        final PatternRule patternRule=(PatternRule)rule;
        try {
          ruleCounter++;
          final SearcherResult searcherResult=errorSearcher.findRuleMatchesOnIndex(patternRule,language);
          final List<MatchingSentence> matchingSentences=searcherResult.getMatchingSentences();
          boolean foundExpectedMatch=false;
          for (          MatchingSentence matchingSentence : matchingSentences) {
            final List<RuleMatch> ruleMatches=matchingSentence.getRuleMatches();
            final List<String> ruleMatchIds=getRuleMatchIds(ruleMatches);
            if (ruleMatchIds.contains(getFullId(patternRule))) {
              foundExpectedMatch=true;
              break;
            }
          }
          if (!foundExpectedMatch) {
            System.out.println("Error: No match found for " + patternRule);
            System.out.println("Query   : " + searcherResult.getRelaxedQuery().toString(FIELD_NAME_LOWERCASE));
            System.out.println("Matches : " + matchingSentences);
            System.out.println("Examples: " + rule.getIncorrectExamples());
            System.out.println();
            ruleProblems++;
          }
 else {
          }
        }
 catch (        UnsupportedPatternRuleException e) {
          System.out.println("UnsupportedPatternRuleException searching for rule " + getFullId(patternRule) + ": "+ e.getMessage());
          ruleProblems++;
        }
catch (        Exception e) {
          System.out.println("Exception searching for rule " + getFullId(patternRule) + ": "+ e.getMessage());
          e.printStackTrace(System.out);
          exceptionCount++;
        }
      }
    }
  }
  finally {
    reader.close();
  }
  System.out.println(language + ": problems: " + ruleProblems+ ", total rules: "+ ruleCounter);
  System.out.println(language + ": exceptions: " + exceptionCount+ " (including timeouts)");
  System.out.println("Total time: " + (System.currentTimeMillis() - startTime) + "ms");
}
