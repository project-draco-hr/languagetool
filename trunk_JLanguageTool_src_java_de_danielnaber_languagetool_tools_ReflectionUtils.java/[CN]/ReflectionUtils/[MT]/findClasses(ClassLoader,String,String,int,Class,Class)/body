{
  List<Class> foundClasses=new ArrayList<Class>();
  try {
    String packagePath=packageName.replace('.','/');
    Enumeration<URL> resources_=classLoader.getResources(packagePath);
    Set<URI> uniqResources=new HashSet<URI>();
    for (; resources_.hasMoreElements(); ) {
      URL resource=resources_.nextElement();
      uniqResources.add(resource.toURI());
    }
    for (    URI resource : uniqResources) {
      if (resource.toURL().getProtocol().startsWith("jar")) {
        if (resource.getPath().contains("LanguageTool.uno.jar")) {
          continue;
        }
        findClassesInJar(packageName,classNameRegEx,subdirLevel,classExtends,interfaceImplements,foundClasses,resource.toURL());
      }
 else {
        findClassesInDirectory(classLoader,packageName,classNameRegEx,subdirLevel,classExtends,interfaceImplements,foundClasses,resource.toURL());
      }
    }
  }
 catch (  Exception ex) {
    throw new ClassNotFoundException("Loading rules failed: " + ex.getMessage(),ex);
  }
  return foundClasses.toArray(new Class[0]);
}
