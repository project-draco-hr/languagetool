{
  GermanTagger tagger=new GermanTagger();
  AnalyzedTokenReadings aToken=tagger.lookup("Haus");
  assertEquals("Haus[Haus/SUB:AKK:SIN:NEU, Haus/SUB:DAT:SIN:NEU, Haus/SUB:NOM:SIN:NEU]",toSortedString(aToken));
  assertEquals("Haus",aToken.getReadings().get(0).getLemma());
  assertEquals("Haus",aToken.getReadings().get(1).getLemma());
  assertEquals("Haus",aToken.getReadings().get(2).getLemma());
  AnalyzedTokenReadings aToken2=tagger.lookup("Hauses");
  assertEquals("Hauses[Haus/SUB:GEN:SIN:NEU]",toSortedString(aToken2));
  assertEquals("Haus",aToken2.getReadings().get(0).getLemma());
  assertNull(tagger.lookup("hauses"));
  assertNull(tagger.lookup("Gro??"));
  assertEquals("Lieblingsbuchstabe[Lieblingsbuchstabe/SUB:NOM:SIN:MAS]",toSortedString(tagger.lookup("Lieblingsbuchstabe")));
  AnalyzedTokenReadings aToken3=tagger.lookup("gro??er");
  assertEquals("gro??er[gro??/ADJ:DAT:SIN:FEM:GRU:SOL, gro??/ADJ:GEN:PLU:FEM:GRU:SOL, gro??/ADJ:GEN:PLU:MAS:GRU:SOL, " + "gro??/ADJ:GEN:PLU:NEU:GRU:SOL, gro??/ADJ:GEN:SIN:FEM:GRU:SOL, gro??/ADJ:NOM:SIN:MAS:GRU:IND, " + "gro??/ADJ:NOM:SIN:MAS:GRU:SOL]",toSortedString(tagger.lookup("gro??er")));
  assertEquals("gro??",aToken3.getReadings().get(0).getLemma());
  AnalyzedTokenReadings aToken4=tagger.lookup("Interessen");
  assertEquals("Interessen[Interesse/SUB:AKK:PLU:NEU, Interesse/SUB:DAT:PLU:NEU, " + "Interesse/SUB:GEN:PLU:NEU, Interesse/SUB:NOM:PLU:NEU]",toSortedString(aToken4));
  assertEquals("Interesse",aToken4.getReadings().get(0).getLemma());
  assertEquals("Interesse",aToken4.getReadings().get(1).getLemma());
  assertEquals("Interesse",aToken4.getReadings().get(2).getLemma());
  assertEquals("Interesse",aToken4.getReadings().get(3).getLemma());
  AnalyzedTokenReadings aToken5=tagger.lookup("Donaudampfschiff");
  assertEquals("Donaudampfschiff[Donaudampfschiff/SUB:AKK:SIN:NEU, Donaudampfschiff/SUB:DAT:SIN:NEU, " + "Donaudampfschiff/SUB:NOM:SIN:NEU]",toSortedString(aToken5));
  assertEquals("Donaudampfschiff",aToken5.getReadings().get(0).getLemma());
  assertEquals("Donaudampfschiff",aToken5.getReadings().get(1).getLemma());
  AnalyzedTokenReadings aToken6=tagger.lookup("H??userk??mpfe");
  assertEquals("H??userk??mpfe[H??userkampf/SUB:AKK:PLU:MAS, H??userkampf/SUB:GEN:PLU:MAS, H??userkampf/SUB:NOM:PLU:MAS]",toSortedString(aToken6));
  assertEquals("H??userkampf",aToken6.getReadings().get(0).getLemma());
  assertEquals("H??userkampf",aToken6.getReadings().get(1).getLemma());
  assertEquals("H??userkampf",aToken6.getReadings().get(2).getLemma());
  AnalyzedTokenReadings aToken7=tagger.lookup("H??userkampfes");
  assertEquals("H??userkampfes[H??userkampf/SUB:GEN:SIN:MAS]",toSortedString(aToken7));
  assertEquals("H??userkampf",aToken7.getReadings().get(0).getLemma());
  AnalyzedTokenReadings aToken8=tagger.lookup("H??userkampfs");
  assertEquals("H??userkampfs[H??userkampf/SUB:GEN:SIN:MAS]",toSortedString(aToken8));
  assertEquals("H??userkampf",aToken8.getReadings().get(0).getLemma());
  AnalyzedTokenReadings aToken9=tagger.lookup("Lieblingsfarben");
  assertEquals("Lieblingsfarben[Lieblingsfarbe/SUB:AKK:PLU:FEM, Lieblingsfarbe/SUB:DAT:PLU:FEM, " + "Lieblingsfarbe/SUB:GEN:PLU:FEM, Lieblingsfarbe/SUB:NOM:PLU:FEM]",toSortedString(aToken9));
  assertEquals("Lieblingsfarbe",aToken9.getReadings().get(0).getLemma());
  AnalyzedTokenReadings aToken10=tagger.lookup("Autolieblingsfarben");
  assertEquals("Autolieblingsfarben[Autolieblingsfarbe/SUB:AKK:PLU:FEM, Autolieblingsfarbe/SUB:DAT:PLU:FEM, " + "Autolieblingsfarbe/SUB:GEN:PLU:FEM, Autolieblingsfarbe/SUB:NOM:PLU:FEM]",toSortedString(aToken10));
  assertEquals("Autolieblingsfarbe",aToken10.getReadings().get(0).getLemma());
  AnalyzedTokenReadings aToken11=tagger.lookup("??brigbleibst");
  assertEquals("??brigbleibst[??brigbleiben/VER:2:SIN:PR??:NON:NEB]",toSortedString(aToken11));
  assertEquals("??brigbleiben",aToken11.getReadings().get(0).getLemma());
}
