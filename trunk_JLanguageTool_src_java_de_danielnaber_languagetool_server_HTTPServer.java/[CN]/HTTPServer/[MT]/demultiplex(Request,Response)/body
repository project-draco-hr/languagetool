{
synchronized (instances) {
    final long timeStart=System.currentTimeMillis();
    String text=null;
    try {
      if (StringTools.isEmpty(connRequest.getLocation())) {
        connResponse.setStatus(403);
        throw new RuntimeException("Error: Access to " + connRequest.getLocation() + " denied");
      }
      if (allowedIPs.contains(connRequest.getIPAddressString())) {
        fixRequestParamMap(connRequest);
        if (connRequest.getLocation().endsWith("/Languages")) {
          connResponse.setHeaderLine(ProtocolResponseHeader.Content_Type,"text/xml");
          connResponse.setHeaderLine(ProtocolResponseHeader.Content_Encoding,"UTF-8");
          return getSupportedLanguagesAsXML();
        }
        final String langParam=connRequest.getParamOrNull("language");
        if (langParam == null)         throw new IllegalArgumentException("Missing 'language' parameter");
        final Language lang=Language.getLanguageForShortName(langParam);
        if (lang == null)         throw new IllegalArgumentException("Unknown language '" + langParam + "'");
        final String motherTongueParam=connRequest.getParamOrNull("motherTongue");
        Language motherTongue=null;
        if (null != motherTongueParam)         motherTongue=Language.getLanguageForShortName(motherTongueParam);
        final JLanguageTool lt=getLanguageToolInstance(lang,motherTongue);
        text=connRequest.getParamOrNull("text");
        if (text == null)         throw new IllegalArgumentException("Missing 'text' parameter");
        print("Checking " + text.length() + " characters of text, language "+ langParam);
        final List<RuleMatch> matches=lt.check(text);
        connResponse.setHeaderLine(ProtocolResponseHeader.Content_Type,"text/xml");
        connResponse.setHeaderLine(ProtocolResponseHeader.Content_Encoding,"UTF-8");
        final String response=StringTools.ruleMatchesToXML(matches,text,CONTEXT_SIZE,StringTools.XmlPrintMode.NORMAL_XML);
        print("Check done in " + (System.currentTimeMillis() - timeStart) + "ms");
        return response;
      }
      connResponse.setStatus(403);
      throw new RuntimeException("Error: Access from " + connRequest.getIPAddressString() + " denied");
    }
 catch (    Exception e) {
      if (verbose)       print("Exceptions was caused by this text: " + text);
      e.printStackTrace();
      connResponse.setStatus(500);
      return "Error: " + StringTools.escapeXML(e.toString());
    }
  }
}
