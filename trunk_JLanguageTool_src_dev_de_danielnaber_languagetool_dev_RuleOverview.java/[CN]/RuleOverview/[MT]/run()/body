{
  System.out.println("<b>Rules in LanguageTool " + JLanguageTool.VERSION + "</b><br />");
  System.out.println("Date: " + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "<br /><br />\n");
  System.out.println("<table>");
  System.out.println("<tr>");
  System.out.println("  <th></th>");
  System.out.println("  <th align=\"right\">XML rules</th>");
  System.out.println("  <th>&nbsp;&nbsp;</th>");
  System.out.println("  <th align=\"right\">Java rules</th>");
  System.out.println("  <th>&nbsp;&nbsp;</th>");
  System.out.println("  <th align=\"right\">" + "<a href=\"http://languagetool.cvs.sourceforge.net/*checkout*/languagetool/" + "JLanguageTool/src/rules/false-friends.xml\">False friends</a></th>");
  System.out.println("  <th>&nbsp;&nbsp;</th>");
  System.out.println("  <th align=\"left\">Rule Maintainers</th>");
  System.out.println("</tr>");
  final List<String> sortedLanguages=new ArrayList<String>();
  for (  Language element : Language.LANGUAGES) {
    if (element == Language.DEMO) {
      continue;
    }
    sortedLanguages.add(element.getName());
  }
  Collections.sort(sortedLanguages);
  final String ffFile="/rules" + File.separator + "false-friends.xml";
  final java.net.URL ffurl=this.getClass().getResource(ffFile);
  String ffRules=StringTools.readFile(Tools.getStream(ffFile));
  ffRules=ffRules.replaceAll("(?s)<!--.*?-->","");
  ffRules=ffRules.replaceAll("(?s)<rules.*?>","");
  for (  final String langName : sortedLanguages) {
    final Language lang=Language.getLanguageForName(langName);
    System.out.print("<tr>");
    System.out.print("<td>" + lang.getName() + "</td>");
    final String xmlFile="/rules" + File.separator + lang.getShortName()+ File.separator+ "grammar.xml";
    final java.net.URL url=this.getClass().getResource(xmlFile);
    if (url == null) {
      System.out.println("<td align=\"right\">0</td>");
    }
 else {
      String xmlRules=StringTools.readFile(Tools.getStream(xmlFile));
      xmlRules=xmlRules.replaceAll("(?s)<!--.*?-->","");
      xmlRules=xmlRules.replaceAll("(?s)<rules.*?>","");
      int pos=0;
      int count=0;
      while (pos != -1) {
        pos=xmlRules.indexOf("<rule ",pos + 1);
        if (pos == -1) {
          break;
        }
        count++;
      }
      pos=0;
      int countInRulegroup=0;
      while (pos != -1) {
        pos=xmlRules.indexOf("<rule>",pos + 1);
        if (pos == -1) {
          break;
        }
        countInRulegroup++;
      }
      System.out.print("<td align=\"right\">" + (count + countInRulegroup) + " (<a href=\"http://languagetool.cvs.sourceforge.net/*checkout*/languagetool/"+ "JLanguageTool/src/rules/"+ lang.getShortName()+ "/grammar.xml\">show</a>)"+ "</td>");
    }
    System.out.print("<td></td>");
    final File dir=new File("src/java/de/danielnaber/languagetool/rules/" + lang.getShortName());
    if (!dir.exists()) {
      System.out.print("<td align=\"right\">0</td>");
    }
 else {
      final File[] javaRules=dir.listFiles(new JavaFilter());
      final int javaCount=javaRules.length - 1;
      System.out.print("<td align=\"right\">" + javaCount + "</td>");
    }
    System.out.println("<td></td>");
    if (ffurl == null) {
      System.out.println("<td align=\"right\">0</td>");
    }
 else {
      int pos=0;
      int count=0;
      while (pos != -1) {
        pos=ffRules.indexOf("<pattern lang=\"" + lang.getShortName(),pos + 1);
        if (pos == -1) {
          break;
        }
        count++;
      }
      System.out.print("<td align=\"right\">" + (count) + "</td>");
      System.out.print("<td></td>");
      StringBuilder maintainerInfo=new StringBuilder();
      if (lang.getMaintainers() != null) {
        for (        Contributor contributor : lang.getMaintainers()) {
          if (!maintainerInfo.toString().equals("")) {
            maintainerInfo.append(", ");
          }
          if (contributor.getUrl() != null) {
            maintainerInfo.append("<a href=\"");
            maintainerInfo.append(contributor.getUrl());
            maintainerInfo.append("\">");
          }
          maintainerInfo.append(contributor.getName());
          if (contributor.getUrl() != null) {
            maintainerInfo.append("</a>");
          }
          if (contributor.getRemark() != null) {
            maintainerInfo.append("&nbsp;(" + contributor.getRemark() + ")");
          }
        }
      }
      System.out.print("<td align=\"left\">" + maintainerInfo.toString() + "</td>");
    }
    System.out.println("</tr>");
  }
  System.out.println("</table>");
}
