{
  if (e.getActionCommand().equals(openText)) {
    prg.loadFile();
  }
 else   if (e.getActionCommand().equals(quitText)) {
    prg.quit();
  }
 else   if (e.getActionCommand().equals(writeText)) {
    try {
      prg.writeRulesToFile();
    }
 catch (    IOException ex) {
      ex.printStackTrace();
    }
  }
 else   if (e.getActionCommand().equals(nextRuleText)) {
    prg.nextRule();
  }
 else   if (e.getActionCommand().equals(prevRuleText)) {
    prg.prevRule();
  }
 else   if (e.getActionCommand().equals(saveRuleText)) {
    prg.clickSaveButton();
  }
 else   if (e.getActionCommand().equals(showRulesText)) {
    prg.showAllRules();
  }
 else   if (e.getActionCommand().equals(showCoveringRulesText)) {
    prg.displayCoveringRules();
  }
 else   if (e.getActionCommand().equals(aboutText)) {
    prg.displayAboutDialog();
  }
 else   if (e.getActionCommand().equals(cutText)) {
    prg.cutSelectedText();
  }
 else   if (e.getActionCommand().equals(copyText)) {
    prg.copySelectedText();
  }
 else   if (e.getActionCommand().equals(pasteText)) {
    prg.pasteText();
  }
 else   if (e.getActionCommand().equals(removeCoveringRulesText)) {
    prg.removeCoveringRules();
  }
 else   if (e.getActionCommand().equals(removeWarningsText)) {
    prg.removeWarnings();
  }
 else   if (e.getActionCommand().equals(showOriginalFileText)) {
    prg.showOriginalRuleFile();
  }
 else   if (e.getActionCommand().equals(allRulesExclusiveText)) {
    prg.makeAllRulesExclusive();
  }
 else {
    throw new IllegalArgumentException("Unknown action " + e);
  }
}
