{
  final List<Language> languages=new ArrayList<Language>();
  final Set<String> languageClassNames=new HashSet<String>();
  try {
    final Enumeration<URL> propertyFiles=Language.class.getClassLoader().getResources(PROPERTIES_PATH);
    while (propertyFiles.hasMoreElements()) {
      final URL url=propertyFiles.nextElement();
      final InputStream inputStream=url.openStream();
      try {
        final MultiKeyProperties props=new MultiKeyProperties(inputStream);
        final List<String> classNamesStr=props.getProperty(PROPERTIES_KEY);
        if (classNamesStr == null) {
          throw new RuntimeException("Key '" + PROPERTIES_KEY + "' not found in "+ url);
        }
        for (        String classNames : classNamesStr) {
          final String[] classNamesSplit=classNames.split("\\s*,\\s*");
          for (          String className : classNamesSplit) {
            if (languageClassNames.contains(className)) {
              continue;
            }
            languages.add(createLanguageObjects(url,className));
            languageClassNames.add(className);
          }
        }
      }
  finally {
        inputStream.close();
      }
    }
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  languages.add(DEMO);
  return languages.toArray(new Language[languages.size()]);
}
