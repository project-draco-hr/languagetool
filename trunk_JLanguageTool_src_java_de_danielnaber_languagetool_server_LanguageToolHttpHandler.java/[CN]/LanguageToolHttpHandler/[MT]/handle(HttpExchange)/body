{
  final URI requestedUri=httpExchange.getRequestURI();
  final Map<String,String> parameters=getRequestQuery(httpExchange,requestedUri);
  final long timeStart=System.currentTimeMillis();
  String text=null;
  try {
    if (StringTools.isEmpty(requestedUri.getRawPath())) {
      httpExchange.sendResponseHeaders(HttpURLConnection.HTTP_FORBIDDEN,0);
      throw new RuntimeException("Error: Access to " + requestedUri.getPath() + " denied");
    }
    if (ALLOWED_IPS.contains(httpExchange.getRemoteAddress().getAddress().toString())) {
      if (requestedUri.getRawPath().endsWith("/Languages")) {
        printListOfLanguages(httpExchange);
      }
 else {
        text=parameters.get("text");
        if (text == null) {
          throw new IllegalArgumentException("Missing 'text' parameter");
        }
        checkText(text,httpExchange,parameters);
      }
    }
 else {
      httpExchange.sendResponseHeaders(HttpURLConnection.HTTP_FORBIDDEN,0);
      throw new RuntimeException("Error: Access from " + httpExchange.getRemoteAddress().toString() + " denied");
    }
  }
 catch (  Exception e) {
    if (verbose) {
      print("Exception was caused by this text: " + text);
    }
    e.printStackTrace();
    final String response="Error: " + StringTools.escapeXML(Tools.getFullStackTrace(e));
    httpExchange.sendResponseHeaders(HttpURLConnection.HTTP_INTERNAL_ERROR,response.getBytes().length);
    httpExchange.getResponseBody().write(response.getBytes());
    httpExchange.close();
  }
  print("Check done in " + (System.currentTimeMillis() - timeStart) + "ms");
}
