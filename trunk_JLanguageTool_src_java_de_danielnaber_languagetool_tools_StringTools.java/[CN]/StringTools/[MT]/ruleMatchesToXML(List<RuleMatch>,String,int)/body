{
  final StringBuilder xml=new StringBuilder();
  xml.append("<?xml version=\"1.0\" encoding=\"" + System.getProperty("file.encoding") + "\"?>\n");
  xml.append("<matches>\n");
  int i=1;
  for (  final RuleMatch match : ruleMatches) {
    xml.append("<error" + " fromy=\"" + match.getLine() + "\""+ " fromx=\""+ match.getColumn()+ "\""+ " toy=\""+ match.getEndLine()+ "\""+ " tox=\""+ match.getEndColumn()+ "\""+ " ruleId=\""+ match.getRule().getId()+ "\"");
    final String msg=match.getMessage().replaceAll("</?suggestion>","'");
    xml.append(" msg=\"" + escapeXMLForAPIOutput(msg) + "\"");
    final String START_MARKER="__languagetool_start_marker";
    String context=Tools.getContext(match.getFromPos(),match.getToPos(),text,contextSize,START_MARKER,"",true);
    xml.append(" replacements=\"" + escapeXMLForAPIOutput(listToString(match.getSuggestedReplacements(),"#")) + "\"");
    final int contextOffset=context.indexOf(START_MARKER);
    context=context.replaceFirst(START_MARKER,"");
    context=context.replaceAll("[\n\r]"," ");
    xml.append(" context=\"" + context + "\"");
    xml.append(" contextoffset=\"" + contextOffset + "\"");
    xml.append(" errorlength=\"" + (match.getToPos() - match.getFromPos()) + "\"");
    xml.append("/>\n");
    i++;
  }
  xml.append("</matches>\n");
  return xml.toString();
}
