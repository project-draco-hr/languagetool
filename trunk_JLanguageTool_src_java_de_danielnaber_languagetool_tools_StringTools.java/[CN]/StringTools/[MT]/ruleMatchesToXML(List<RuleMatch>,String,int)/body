{
  StringBuilder xml=new StringBuilder();
  xml.append("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n");
  xml.append("<matches>\n");
  int i=1;
  for (  RuleMatch match : ruleMatches) {
    xml.append("<error" + " fromy=\"" + (match.getLine() + 1) + "\""+ " fromx=\""+ (match.getColumn() + 1)+ "\""+ " toy=\""+ (match.getEndLine() + 1)+ "\""+ " tox=\""+ match.getEndColumn()+ "\""+ " ruleId=\""+ match.getRule().getId()+ "\"");
    String msg=match.getMessage().replaceAll("</?suggestion>","'");
    xml.append(" msg=\"" + escapeXMLForAPIOutput(msg) + "\"");
    final String START_MARKER="__languagetoo_start_marker";
    String context=Tools.getContext(match.getFromPos(),match.getToPos(),escapeXML(text),contextSize,START_MARKER,"");
    xml.append(" replacements=\"" + escapeXMLForAPIOutput(listToString(match.getSuggestedReplacements(),"#")) + "\"");
    int contextOffset=context.indexOf(START_MARKER);
    context=context.replaceFirst(START_MARKER,"");
    xml.append(" context=\"" + escapeXMLForAPIOutput(context) + "\"");
    xml.append(" contextoffset=\"" + contextOffset + "\"");
    xml.append(" errorlength=\"" + (match.getToPos() - match.getFromPos()) + "\"");
    xml.append("/>\n");
    i++;
  }
  xml.append("</matches>\n");
  return xml.toString();
}
