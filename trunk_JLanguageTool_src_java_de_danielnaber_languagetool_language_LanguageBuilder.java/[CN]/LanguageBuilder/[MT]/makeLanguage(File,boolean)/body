{
  if (file == null) {
    throw new NullPointerException("file argument cannot be null");
  }
  if (!file.getName().endsWith(".xml")) {
    throw new RuleFilenameException(file);
  }
  final String[] parts=file.getName().split("-");
  if (parts.length != 3 || !parts[0].equals("rules") || parts[1].length() != 2) {
    throw new RuleFilenameException(file);
  }
  final Language newLanguage=new Language(){
    @Override public Locale getLocale(){
      return new Locale(getShortName());
    }
    @Override public Contributor[] getMaintainers(){
      return null;
    }
    @Override public String getShortName(){
      return parts[1];
    }
    @Override public String[] getCountryVariants(){
      return new String[]{""};
    }
    @Override public String getName(){
      return parts[2].replace(".xml","");
    }
    @Override public List<Class<? extends Rule>> getRelevantRules(){
      return Collections.emptyList();
    }
    @Override public String getRuleFileName(){
      return file.getAbsolutePath();
    }
    @Override public boolean isExternal(){
      return isAdditional;
    }
  }
;
  return newLanguage;
}
