{
  ArrayList<List<Token>> list=new ArrayList<>();
  final List<Token> firstList=new ArrayList<>();
  list.add(firstList);
  int i;
  for (i=0; i < tokens.size(); i++) {
    if (isOrCompatible(tokens.get(i))) {
      firstList.add(tokens.get(i));
    }
 else {
      list.remove(firstList);
      Iterable<CgSet> newSets=splitCgSet(tokens.get(i).target);
      for (      CgSet set : newSets) {
        Token newToken=new Token(tokens.get(i));
        newToken.target=expandSetSets(set);
        newToken.postags=newToken.target.getPostagsString();
        newToken.baseforms=newToken.target.getSingleTagBaseformsString();
        newToken.surfaceforms=newToken.target.getSingleTagSurfaceformsString();
        newToken.compositeTags=newToken.target.getCompositeTags();
        List<Token> newList=new ArrayList<>();
        for (        Token token : firstList) {
          newList.add(new Token(token));
        }
        newList.add(newToken);
        list.add(newList);
      }
      break;
    }
  }
  for (int j=i + 1; j < tokens.size(); j++) {
    for (int k=0; k < list.size(); k++) {
      List<Token> insideList=list.get(k);
      insideList.add(tokens.get(j));
      list.set(k,insideList);
    }
  }
  return list;
}
