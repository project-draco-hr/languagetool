{
  final List<String> tokens=tokenizer.tokenize(input);
  final List<String> noWhitespaceTokens=new ArrayList<String>();
  for (  final String token : tokens) {
    if (isWord(token)) {
      noWhitespaceTokens.add(token);
    }
  }
  final List<AnalyzedTokenReadings> output=tagger.tag(noWhitespaceTokens);
  final StringBuilder outputStr=new StringBuilder();
  for (final Iterator<AnalyzedTokenReadings> iter=output.iterator(); iter.hasNext(); ) {
    final AnalyzedTokenReadings token=iter.next();
    final int readingsNumber=token.getReadingsLength();
    final List<String> readings=new ArrayList<String>();
    for (int j=0; j < readingsNumber; j++) {
      final StringBuilder readingStr=new StringBuilder();
      readingStr.append(token.getAnalyzedToken(j).getToken());
      readingStr.append("/[");
      readingStr.append(token.getAnalyzedToken(j).getLemma());
      readingStr.append(']');
      readingStr.append(token.getAnalyzedToken(j).getPOSTag());
      readings.add(readingStr.toString());
    }
    Collections.sort(readings);
    outputStr.append(StringTools.listToString(readings,"|"));
    if (iter.hasNext()) {
      outputStr.append(" -- ");
    }
  }
  Assert.assertEquals(expected,outputStr.toString());
}
