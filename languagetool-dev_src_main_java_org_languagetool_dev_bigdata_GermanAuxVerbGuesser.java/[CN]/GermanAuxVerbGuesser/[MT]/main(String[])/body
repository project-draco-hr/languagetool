{
  if (args.length != 2) {
    System.out.println("Usage: " + GermanAuxVerbGuesser.class.getName() + " <ngramDataIndex> <lemmaFile>");
    System.out.println("   <lemmaFile> is a text file with 'participle2 \\t lemma' per line, e.g. 'getrunken \t trinken'");
    System.exit(1);
  }
  String indexTopDir=args[0];
  List<String> lines=Files.readAllLines(Paths.get(args[1]));
  int match=0;
  int noMatch=0;
  int unambiguous=0;
  try (LuceneLanguageModel lm=new LuceneLanguageModel(new File(indexTopDir))){
    for (    String line : lines) {
      String pa2=line.split("\t")[0];
      String lemma=line.split("\t")[1];
      long haben=countHaben(lm,pa2,lemma);
      long sein=countSein(lm,pa2,lemma);
      System.out.println(lemma + ": haben: " + haben+ ", sein: "+ sein);
      if (haben == 0 && sein == 0) {
        noMatch++;
      }
 else {
        if (haben == 0 && sein > 0 || haben > 0 && sein == 0) {
          unambiguous++;
        }
        match++;
      }
    }
  }
   System.out.println("match: " + match);
  System.out.println("noMatch: " + noMatch);
  System.out.println("----");
  System.out.println("unambiguous: " + unambiguous);
}
