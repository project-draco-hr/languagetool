{
  Language lang=Languages.getLanguageForShortName(langCode);
  MultiThreadedJLanguageTool languageTool=new MultiThreadedJLanguageTool(lang);
  if (languageModelDir != null) {
    languageTool.activateLanguageModelRules(languageModelDir);
  }
  if (ruleIds != null) {
    enableOnlySpecifiedRules(ruleIds,languageTool);
  }
 else {
    applyRuleDeactivation(languageTool,disabledRules);
  }
  if (filter != null) {
    System.out.println("*** NOTE: only sentences that match regular expression '" + filter + "' will be checked");
  }
  activateAdditionalCategories(additionalCategoryIds,languageTool);
  disableSpellingRules(languageTool);
  System.out.println("Working on: " + StringUtils.join(fileNames,", "));
  System.out.println("Sentence limit: " + (maxSentences > 0 ? maxSentences : "no limit"));
  System.out.println("Error limit: " + (maxErrors > 0 ? maxErrors : "no limit"));
  ResultHandler resultHandler=null;
  int ruleMatchCount=0;
  int sentenceCount=0;
  try {
    if (propFile != null) {
      resultHandler=new DatabaseHandler(propFile,maxSentences,maxErrors);
    }
 else {
      resultHandler=new StdoutHandler(maxSentences,maxErrors);
    }
    MixingSentenceSource mixingSource=MixingSentenceSource.create(fileNames,lang,filter);
    while (mixingSource.hasNext()) {
      Sentence sentence=mixingSource.next();
      try {
        List<RuleMatch> matches=languageTool.check(sentence.getText());
        resultHandler.handleResult(sentence,matches,lang);
        sentenceCount++;
        if (sentenceCount % 5000 == 0) {
          System.err.printf("%s sentences checked...\n",NumberFormat.getNumberInstance(Locale.US).format(sentenceCount));
        }
        ruleMatchCount+=matches.size();
      }
 catch (      DocumentLimitReachedException|ErrorLimitReachedException e) {
        throw e;
      }
catch (      Exception e) {
        throw new RuntimeException("Check failed on sentence: " + StringUtils.abbreviate(sentence.getText(),250),e);
      }
    }
  }
 catch (  DocumentLimitReachedException|ErrorLimitReachedException e) {
    System.out.println(getClass().getSimpleName() + ": " + e);
  }
 finally {
    languageTool.shutdown();
    if (resultHandler != null) {
      float matchesPerSentence=(float)ruleMatchCount / sentenceCount;
      System.out.printf(lang + ": %d total matches\n",ruleMatchCount);
      System.out.printf(lang + ": ??%.2f rule matches per sentence\n",matchesPerSentence);
      try {
        resultHandler.close();
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
}
