{
  if (url == null) {
    return url;
  }
  final String originalURLProtocol=url.getProtocol();
  if (!"jar".equalsIgnoreCase(originalURLProtocol)) {
    return url;
  }
  final String originalURLString=url.toString();
  final int bangSlashIndex=originalURLString.indexOf("!/");
  if (bangSlashIndex > -1) {
    return url;
  }
  final String originalURLPath=url.getPath();
  final URLConnection urlConnection;
  try {
    urlConnection=url.openConnection();
    if (urlConnection == null) {
      throw new IOException("urlConnection is null");
    }
  }
 catch (  IOException e) {
    return url;
  }
  final Permission urlConnectionPermission;
  try {
    urlConnectionPermission=urlConnection.getPermission();
    if (urlConnectionPermission == null) {
      throw new IOException("urlConnectionPermission is null");
    }
  }
 catch (  IOException e) {
    return url;
  }
  final String urlConnectionPermissionName=urlConnectionPermission.getName();
  if (urlConnectionPermissionName == null) {
    return url;
  }
  final File file=new File(urlConnectionPermissionName);
  if (!file.exists()) {
    return url;
  }
  try {
    final String newURLStr="jar:" + file.toURI().toURL().toExternalForm() + "!/"+ originalURLPath;
    return new URL(newURLStr);
  }
 catch (  MalformedURLException e) {
    return url;
  }
}
