{
  final List<String> replacements=match.getSuggestedReplacements();
  final List<String> newTexts=new ArrayList<String>();
  final Location fromPosLocation=textMapping.getOriginalTextPositionFor(match.getFromPos() + 1);
  final Location toPosLocation=textMapping.getOriginalTextPositionFor(match.getToPos() + 1);
  final int fromPos=LocationHelper.absolutePositionFor(fromPosLocation,originalText);
  final int toPos=LocationHelper.absolutePositionFor(toPosLocation,originalText);
  final int contextSize=5;
  for (  String replacement : replacements) {
    final String errorText=textMapping.getPlainText().substring(match.getFromPos(),match.getToPos());
    final int contextFrom=Math.max(fromPos - contextSize,0);
    final int contextTo=Math.min(toPos + contextSize,originalText.length());
    final String newText=originalText.substring(0,contextFrom) + originalText.substring(contextFrom,contextTo).replace(errorText,replacement) + originalText.substring(contextTo);
    newTexts.add(newText);
  }
  return newTexts;
}
