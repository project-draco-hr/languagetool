{
  assertGood("Ihre Lider sind entz??ndet.");
  assertGood("Er hat entz??ndete Lider.");
  assertGood("Wir singen gemeinsam Lieder.");
  assertGood("Lieder singen wir.");
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Lider singen wir."))[0].getFromPos());
  assertEquals(11,rule.match(langTool.getAnalyzedSentence("Ihre Lieder sind entz??ndet."))[0].getToPos());
  assertEquals("Lider",rule.match(langTool.getAnalyzedSentence("Er hat entz??ndete Lieder."))[0].getSuggestedReplacements().get(0));
  assertEquals("Lieder",rule.match(langTool.getAnalyzedSentence("Wir singen gemeinsam Lider."))[0].getSuggestedReplacements().get(0));
  assertGood("Ich soll Bilder einer M??hle malen.");
  assertGood("Ich male ein Bild einer M??hle.");
  assertGood("Das Bild zeigt eine mahlende M??hle.");
  assertGood("Eine mahlende M??hle zeigt das Bild.");
  assertGood("Wenn du mal etwas Mehl brauchst, kannst du zu mir kommen.");
  assertBad("Weizen ausmalen.");
  assertBad("Ich mahle das Bild aus.");
  assertBad("Eine M??hle wird zum Malen verwendet.");
  assertBad("Das gemalene Korn aus der M??hle ist gut.");
  assertBad("Zum Malen verwendet man eine M??hle.");
  assertBad("Du musst das Bild ausmahlen.");
  assertBad("Wir haben das im Kunstunterricht gemahlt.");
  assertBad("Er hat ein sch??nes Selbstportr??t gemahlt.");
  assertEquals("gemahlen",rule.match(langTool.getAnalyzedSentence("Das Korn wird in den M??hlen gemalen."))[0].getSuggestedReplacements().get(0));
  assertEquals("malten",rule.match(langTool.getAnalyzedSentence("Wir mahlten im Kunstunterricht."))[0].getSuggestedReplacements().get(0));
  assertGood("Er verzieht keine Miene.");
  assertGood("Er verzieht keine Miene.");
  assertGood("Die Explosion der Mine.");
  assertGood("Die Mine ist explodiert.");
  assertGood("Er versucht, keine Miene zu verziehen.");
  assertGood("Sie sollen weiter Minen eingesetzt haben.");
  assertGood("Er verzieht sich nach Bekanntgabe der Mineral??lsteuerverordnung.");
  assertBad("Er verzieht keine Mine.");
  assertBad("Mit unbewegter Mine.");
  assertBad("Er setzt eine kalte Mine auf.");
  assertBad("Er sagt, die unterirdische Miene sei zusammengest??rzt.");
  assertBad("Die Miene ist eingest??rzt.");
  assertBad("Die Sprengung mit Mienen ist toll.");
  assertBad("Der Bleistift hat eine Miene.");
  assertBad("Die Mienen sind gestern Abend explodiert.");
  assertBad("Die Miene des Kugelschreibers ist leer.");
  assertEquals("Minen",rule.match(langTool.getAnalyzedSentence("Er hat das mit den Mienen weggesprengt."))[0].getSuggestedReplacements().get(0));
  assertEquals("Miene",rule.match(langTool.getAnalyzedSentence("Er versucht, keine Mine zu verziehen."))[0].getSuggestedReplacements().get(0));
  assertGood("Die Seiten des Buches sind beschrieben.");
  assertGood("Dieses Buch ??ber die Gitarre hat nur sechs Seiten.");
  assertGood("Diese Gitarre hat sechs Saiten.");
  assertGood("Die UNO muss andere Saiten aufziehen.");
  assertGood("Eine Gitarre hat Saiten, aber keine Seiten.");
  assertGood("Die Saiten des Violoncellos sind kurz.");
  assertGood("Dieses Buch ??ber die Gitarre hat nur sechs Seiten.");
  assertGood("Eine Seite und eine scharfe Suppe.");
  assertBad("Die Saiten des Buches sind beschrieben.");
  assertBad("Die Seiten des Klaviers werden angeschlagen.");
  assertBad("Die Seiten der Kurzhalsgeige sind gerissen.");
  assertBad("Die Seiten des Kontrabasses sind gerissen.");
  assertBad("Bei der UNO m??ssen andere Seiten aufgezogen werden.");
  assertBad("Die Seiten des Violoncellos sind kurz.");
  assertEquals("Saite",rule.match(langTool.getAnalyzedSentence("Die E-Gitarre hat eine sechste Seite."))[0].getSuggestedReplacements().get(0));
  assertEquals("Seiten",rule.match(langTool.getAnalyzedSentence("Dieses Buch hat sechs Saiten."))[0].getSuggestedReplacements().get(0));
}
