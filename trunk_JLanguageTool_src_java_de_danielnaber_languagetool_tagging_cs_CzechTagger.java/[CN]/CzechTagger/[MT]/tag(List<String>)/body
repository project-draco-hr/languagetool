{
  String[] taggerTokens;
  List<AnalyzedTokenReadings> tokenReadings=new ArrayList<AnalyzedTokenReadings>();
  int pos=0;
  if (morfologik == null) {
    morfologik=new Lametyzator(this.getClass().getResourceAsStream(RESOURCE_FILENAME),"iso8859-2",'+',true,true);
  }
  for (Iterator<String> iter=sentenceTokens.iterator(); iter.hasNext(); ) {
    String word=iter.next();
    List<AnalyzedToken> l=new ArrayList<AnalyzedToken>();
    String[] lowerTaggerTokens=null;
    taggerTokens=morfologik.stemAndForm(word);
    if (!word.equals(word.toLowerCase())) {
      lowerTaggerTokens=morfologik.stemAndForm(word.toLowerCase());
    }
    if (taggerTokens != null) {
      int i=0;
      while (i < taggerTokens.length) {
        String lemma=taggerTokens[i];
        String[] tagsArr=taggerTokens[i + 1].split("\\+");
        for (        String currTag : tagsArr)         l.add(new AnalyzedToken(word,currTag,lemma));
        i+=2;
      }
    }
    if (lowerTaggerTokens != null) {
      int i=0;
      while (i < lowerTaggerTokens.length) {
        String lemma=lowerTaggerTokens[i];
        String[] tagsArr=lowerTaggerTokens[i + 1].split("\\+");
        for (        String currTag : tagsArr)         l.add(new AnalyzedToken(word,currTag,lemma));
        i+=2;
      }
    }
    if (lowerTaggerTokens == null && taggerTokens == null) {
      l.add(new AnalyzedToken(word,null,pos));
    }
    pos+=word.length();
    tokenReadings.add(new AnalyzedTokenReadings((AnalyzedToken[])l.toArray(new AnalyzedToken[0])));
  }
  return tokenReadings;
}
