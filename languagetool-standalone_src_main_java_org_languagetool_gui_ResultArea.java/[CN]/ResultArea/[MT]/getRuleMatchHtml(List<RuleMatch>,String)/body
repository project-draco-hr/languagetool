{
  ContextTools contextTools=new ContextTools();
  StringBuilder sb=new StringBuilder(200);
  if (ltSupport.getLanguage().getMaintainedState() != LanguageMaintainedState.ActivelyMaintained) {
    sb.append("<p><b>").append(messages.getString("unsupportedWarning")).append("</b></p>\n");
  }
 else {
    sb.append(EMPTY_PARA);
  }
  setMain(sb.toString());
  sb.setLength(0);
  int i=0;
  for (  RuleMatch match : ruleMatches) {
    sb.append("<p>");
    String output=org.languagetool.tools.Tools.i18n(messages,"result1",i + 1,match.getLine() + 1,match.getColumn());
    sb.append(output);
    String msg=match.getMessage().replaceAll("<suggestion>","<b>").replaceAll("</suggestion>","</b>").replaceAll("<old>","<b>").replaceAll("</old>","</b>");
    sb.append("<b>").append(messages.getString("errorMessage")).append("</b> ");
    sb.append(msg);
    RuleLink ruleLink=RuleLink.buildDeactivationLink(match.getRule());
    sb.append(" <a href=\"").append(ruleLink).append("\">").append(messages.getString("deactivateRule")).append("</a><br>\n");
    if (match.getSuggestedReplacements().size() > 0) {
      String replacement=String.join("; ",match.getSuggestedReplacements());
      sb.append("<b>").append(messages.getString("correctionMessage")).append("</b> ").append(replacement).append("<br>\n");
    }
    if (ITSIssueType.Misspelling == match.getRule().getLocQualityIssueType()) {
      contextTools.setErrorMarkerStart(SPELL_ERROR_MARKER_START);
    }
 else {
      contextTools.setErrorMarkerStart(LT_ERROR_MARKER_START);
    }
    String context=contextTools.getContext(match.getFromPos(),match.getToPos(),text);
    sb.append("<b>").append(messages.getString("errorContext")).append("</b> ").append(context);
    if (match.getRule().getUrl() != null && Desktop.isDesktopSupported()) {
      sb.append("<br>\n");
      sb.append("<b>").append(messages.getString("moreInfo")).append("</b> <a href=\"");
      String url=match.getRule().getUrl().toString();
      sb.append(url);
      String shortUrl=StringUtils.abbreviate(url,60);
      sb.append("\">").append(shortUrl).append("</a>\n");
    }
    sb.append("</p>");
    i++;
    appendMain(sb.toString());
    sb.setLength(0);
  }
  sb.append("<p class=\"grayed\">");
  sb.append(getDisabledRulesHtml());
  String checkDone=org.languagetool.tools.Tools.i18n(messages,"checkDone",ruleMatches.size(),runTime);
  sb.append("<br>\n").append(checkDone);
  sb.append("<br>\n").append(messages.getString("makeLanguageToolBetter"));
  sb.append("<br>\n");
  sb.append("</p>");
  appendMain(sb.toString());
}
