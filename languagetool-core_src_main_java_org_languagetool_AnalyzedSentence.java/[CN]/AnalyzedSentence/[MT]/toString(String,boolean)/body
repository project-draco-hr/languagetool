{
  final StringBuilder sb=new StringBuilder();
  for (  final AnalyzedTokenReadings element : tokens) {
    if (!element.isWhitespace()) {
      sb.append(element.getToken());
      sb.append('[');
    }
    Iterator<AnalyzedToken> iterator=element.iterator();
    while (iterator.hasNext()) {
      final AnalyzedToken token=iterator.next();
      final String posTag=token.getPOSTag();
      if (element.isSentenceStart()) {
        sb.append("<S>");
      }
 else       if (JLanguageTool.SENTENCE_END_TAGNAME.equals(token.getPOSTag())) {
        sb.append("</S>");
      }
 else       if (JLanguageTool.PARAGRAPH_END_TAGNAME.equals(token.getPOSTag())) {
        sb.append("<P/>");
      }
 else       if (posTag == null && !(element.getClass().getName().equals("org.languagetool.tagging.de.AnalyzedGermanTokenReadings"))) {
        sb.append(token.getToken());
      }
 else {
        if (!element.isWhitespace()) {
          if (includeChunks) {
            sb.append(token.toFullString());
          }
 else {
            sb.append(token.toString());
          }
          if (iterator.hasNext()) {
            sb.append(readingDelimiter);
          }
        }
      }
    }
    if (!element.isWhitespace()) {
      sb.append(']');
    }
 else {
      sb.append(' ');
    }
  }
  return sb.toString();
}
