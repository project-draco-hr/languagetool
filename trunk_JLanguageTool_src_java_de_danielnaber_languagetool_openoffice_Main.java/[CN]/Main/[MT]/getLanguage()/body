{
  if (xTextDoc == null) {
    return Language.ENGLISH;
  }
  Locale charLocale;
  try {
    final XModel model=(XModel)UnoRuntime.queryInterface(XModel.class,xComponent);
    final XTextViewCursorSupplier xViewCursorSupplier=(XTextViewCursorSupplier)UnoRuntime.queryInterface(XTextViewCursorSupplier.class,model.getCurrentController());
    final XTextViewCursor xCursor=xViewCursorSupplier.getViewCursor();
    final XPropertySet xCursorProps=(XPropertySet)UnoRuntime.queryInterface(XPropertySet.class,xCursor);
    charLocale=(Locale)xCursorProps.getPropertyValue("CharLocale");
    boolean langIsSupported=false;
    for (    Language element : Language.LANGUAGES) {
      if (element.getShortName().equals(charLocale.Language)) {
        langIsSupported=true;
        break;
      }
    }
    if (!langIsSupported) {
      JOptionPane.showMessageDialog(null,"Error: Sorry, the document language '" + charLocale.Language + "' is not supported by LanguageTool.");
      return null;
    }
  }
 catch (  final UnknownPropertyException e) {
    throw new RuntimeException(e);
  }
catch (  final WrappedTargetException e) {
    throw new RuntimeException(e);
  }
  return Language.getLanguageForShortName(charLocale.Language);
}
