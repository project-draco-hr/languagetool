{
  if (!StringTools.isEmpty(paraText)) {
    if (hasLocale(locale)) {
      if (!Language.getLanguageForShortName(locale.Language).equals(docLanguage) || langTool == null || recheck) {
        docLanguage=Language.getLanguageForShortName(locale.Language);
        if (docLanguage == null) {
          return paRes;
        }
        try {
          langTool=new JLanguageTool(docLanguage,config.getMotherTongue());
          langTool.activateDefaultPatternRules();
          langTool.activateDefaultFalseFriendRules();
          recheck=false;
        }
 catch (        final Throwable t) {
          showError(t);
        }
      }
      if (config.getDisabledRuleIds() != null) {
        for (        final String id : config.getDisabledRuleIds()) {
          langTool.disableRule(id);
        }
      }
      final Set<String> disabledCategories=config.getDisabledCategoryNames();
      if (disabledCategories != null) {
        for (        final String categoryName : disabledCategories) {
          langTool.disableCategory(categoryName);
        }
      }
      try {
        int index=paraText.length();
        if (paRes.nBehindEndOfSentencePosition < paraText.length()) {
          index=paRes.nBehindEndOfSentencePosition - paRes.nStartOfNextSentencePosition;
        }
        final List<String> sentences=langTool.sentenceTokenize(paraText.substring(paRes.nStartOfSentencePosition,index));
        paRes.nStartOfNextSentencePosition=paRes.nBehindEndOfSentencePosition + 1;
        if (!sentences.isEmpty()) {
          final List<RuleMatch> ruleMatches=langTool.check(sentences.get(0));
          prevRuleMatches=ruleMatches;
          if (!ruleMatches.isEmpty()) {
            final SingleProofreadingError[] errorArray=new SingleProofreadingError[ruleMatches.size()];
            int i=0;
            for (            final RuleMatch myRuleMatch : ruleMatches) {
              errorArray[i]=createOOoError(locale,myRuleMatch,paRes.nStartOfSentencePosition);
              i++;
            }
            Arrays.sort(errorArray,new ErrorPositionComparator());
            paRes.aErrors=errorArray;
          }
        }
      }
 catch (      final Throwable t) {
        showError(t);
        paRes.nBehindEndOfSentencePosition=paraText.length();
      }
    }
  }
  return paRes;
}
