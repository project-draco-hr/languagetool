{
  PatternRule pr;
  RuleMatch[] matches;
  pr=makePatternRule("\"one\" ^\"two\"");
  matches=pr.match(langTool.getAnalyzedSentence("Here's one two."));
  assertEquals(0,matches.length);
  matches=pr.match(langTool.getAnalyzedSentence("Here's one four."));
  assertEquals(1,matches.length);
  pr=makePatternRule("\"one\" ^\"two|three\"");
  matches=pr.match(langTool.getAnalyzedSentence("Here's one two."));
  assertEquals(0,matches.length);
  matches=pr.match(langTool.getAnalyzedSentence("Here's one three."));
  assertEquals(0,matches.length);
  matches=pr.match(langTool.getAnalyzedSentence("Here's one four."));
  assertEquals(1,matches.length);
  pr=makePatternRule("SENT_START ^\"One\"");
  matches=pr.match(langTool.getAnalyzedSentence("One two."));
  assertEquals(0,matches.length);
  matches=pr.match(langTool.getAnalyzedSentence("Two three."));
  assertEquals(1,matches.length);
  pr=makePatternRule("\"One\" ^CD");
  matches=pr.match(langTool.getAnalyzedSentence("One two."));
  assertEquals(0,matches.length);
  matches=pr.match(langTool.getAnalyzedSentence("One walk."));
  assertEquals(1,matches.length);
  pr=makePatternRule("CD^one \"foo\"");
  matches=pr.match(langTool.getAnalyzedSentence("One foo."));
  assertEquals(0,matches.length);
  matches=pr.match(langTool.getAnalyzedSentence("Two foo."));
  assertEquals(1,matches.length);
  pr=makePatternRule("CD^one|three|five \"foo\"");
  matches=pr.match(langTool.getAnalyzedSentence("One foo."));
  assertEquals(0,matches.length);
  matches=pr.match(langTool.getAnalyzedSentence("Three foo."));
  assertEquals(0,matches.length);
  matches=pr.match(langTool.getAnalyzedSentence("Five foo."));
  assertEquals(0,matches.length);
  matches=pr.match(langTool.getAnalyzedSentence("Eight foo."));
  assertEquals(1,matches.length);
  pr=makePatternRule("CD^one \"foo\"",true);
  matches=pr.match(langTool.getAnalyzedSentence("One foo."));
  assertEquals(1,matches.length);
  matches=pr.match(langTool.getAnalyzedSentence("the one foo."));
  assertEquals(0,matches.length);
}
