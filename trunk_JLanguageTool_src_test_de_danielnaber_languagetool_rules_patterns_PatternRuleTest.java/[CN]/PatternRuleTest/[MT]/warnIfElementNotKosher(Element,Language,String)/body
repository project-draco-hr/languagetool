{
  if (!element.isRegularExpression() && (PROBABLE_REGEX.matcher(element.getString()).find())) {
    System.err.println("The " + lang.toString() + " rule: "+ ruleId+ " contains element "+ "\""+ element+ "\" that is not marked as regular expression"+ " but probably is one.");
  }
  if (element.isRegularExpression() && "".equals(element.getString())) {
    System.err.println("The " + lang.toString() + " rule: "+ ruleId+ " contains an empty string element "+ "\""+ element+ "\" that is marked as regular expression (don't look at the POS tag, it might be OK).");
  }
 else   if (element.isRegularExpression() && !PROBABLE_REGEX.matcher(element.getString()).find()) {
    System.err.println("The " + lang.toString() + " rule: "+ ruleId+ " contains element "+ "\""+ element+ "\" that is marked as regular expression"+ " but probably is not one.");
  }
  if (element.isInflected() && "".equals(element.getString())) {
    System.err.println("The " + lang.toString() + " rule: "+ ruleId+ " contains element "+ "\""+ element+ "\" that is marked as inflected"+ " but is empty, so the attribute is redundant.");
  }
  if (element.isRegularExpression() && !element.getCaseSensitive()) {
    Matcher matcher=CASE_REGEX.matcher(element.getString());
    if (matcher.find()) {
      final String letter1=matcher.group(1);
      final String letter2=matcher.group(2);
      if (!letter1.equals(letter2) && letter1.toLowerCase().equals(letter2.toLowerCase())) {
        System.err.println("The " + lang.toString() + " rule: "+ ruleId+ " contains regexp part ["+ letter1+ letter2+ "] which is useless without case_sensitive=\"yes\".");
      }
    }
  }
  if (element.isRegularExpression() && element.getString().contains("|")) {
    final String[] groups=element.getString().split("\\)");
    final boolean caseSensitive=element.getCaseSensitive();
    for (    final String group : groups) {
      final String[] alt=group.split("\\|");
      final Set<String> partSet=new HashSet<String>();
      final Set<String> partSetNoCase=new HashSet<String>();
      for (      String part : alt) {
        String partNoCase=caseSensitive ? part : part.toLowerCase();
        if (partSetNoCase.contains(partNoCase)) {
          if (partSet.contains(part)) {
            System.err.println("The " + lang.toString() + " rule : "+ ruleId+ " contains duplicated disjunction part ("+ part+ ") within the element "+ "\""+ element+ "\".");
          }
 else {
            System.err.println("The " + lang.toString() + " rule : "+ ruleId+ " contains duplicated non case sensitive disjunction part ("+ part+ ") within the element "+ "\""+ element+ "\". Did you "+ "forget case_sensitive=\"yes\"?");
          }
        }
        partSetNoCase.add(partNoCase);
        partSet.add(part);
      }
    }
  }
}
