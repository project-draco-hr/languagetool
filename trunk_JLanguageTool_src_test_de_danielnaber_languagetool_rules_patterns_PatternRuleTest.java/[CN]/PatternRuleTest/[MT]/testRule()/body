{
  PatternRule pr;
  RuleMatch[] matches;
  pr=new PatternRule("ID1",Language.ENGLISH,"\"one\"","test rule");
  matches=pr.match(TestTools.getAnaylzedText("A non-matching sentence."));
  assertEquals(0,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("A matching sentence with one match."));
  assertEquals(1,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("one one and one: three matches"));
  assertEquals(3,matches.length);
  pr=new PatternRule("ID1",Language.ENGLISH,"\"one\" \"two\"","test rule");
  matches=pr.match(TestTools.getAnaylzedText("this is one not two"));
  assertEquals(0,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("this is two one"));
  assertEquals(0,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("this is one two three"));
  assertEquals(1,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("one two"));
  assertEquals(1,matches.length);
  pr=new PatternRule("ID1",Language.ENGLISH,"\"one|foo|xxxx\" \"two\"","test rule");
  matches=pr.match(TestTools.getAnaylzedText("one foo three"));
  assertEquals(0,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("one two"));
  assertEquals(1,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("foo two"));
  assertEquals(1,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("one foo two"));
  assertEquals(1,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("y x z one two blah foo"));
  assertEquals(1,matches.length);
  pr=new PatternRule("ID1",Language.ENGLISH,"\"one|foo|xxxx\" \"two|yyy\"","test rule");
  matches=pr.match(TestTools.getAnaylzedText("one, yyy"));
  assertEquals(0,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("one yyy"));
  assertEquals(1,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("xxxx two"));
  assertEquals(1,matches.length);
  matches=pr.match(TestTools.getAnaylzedText("xxxx yyy"));
  assertEquals(1,matches.length);
}
