{
  final String nextTerm=nextToken.getToken();
  if (nextTerm.endsWith("er") && tokens.length > tokenPos + 1 && !ER_TO_BE_IGNORED.contains(nextTerm)) {
    final AnalyzedTokenReadings nextNextToken=tokens[tokenPos + 1];
    final GermanTagger tagger=(GermanTagger)language.getTagger();
    try {
      final AnalyzedTokenReadings nextATR=tagger.lookup(nextTerm.substring(0,nextTerm.length() - 2));
      final AnalyzedTokenReadings nextNextATR=tagger.lookup(nextNextToken.getToken());
      if ("M??nchner".equals(nextTerm) || (nextATR != null && (GermanHelper.hasReadingOfType(nextATR,POSType.PROPER_NOUN) || GermanHelper.hasReadingOfType(nextATR,POSType.NOMEN) && nextNextATR != null && GermanHelper.hasReadingOfType(nextNextATR,POSType.NOMEN)))) {
        final AnalyzedToken[] adjReadings=new AnalyzedToken[ADJ_READINGS.length];
        for (int j=0; j < ADJ_READINGS.length; j++) {
          adjReadings[j]=new AnalyzedToken(nextTerm,ADJ_READINGS[j],null);
        }
        nextToken=new AnalyzedTokenReadings(adjReadings,nextToken.getStartPos());
      }
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
  return nextToken;
}
