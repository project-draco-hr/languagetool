{
  if (NUMBER.matcher(word).matches()) {
    List<AnalyzedToken> additionalTaggedTokens=new ArrayList<>();
    additionalTaggedTokens.add(new AnalyzedToken(word,IPOSTag.number.getText(),word));
    return additionalTaggedTokens;
  }
  if (TIME.matcher(word).matches()) {
    List<AnalyzedToken> additionalTaggedTokens=new ArrayList<>();
    additionalTaggedTokens.add(new AnalyzedToken(word,IPOSTag.time.getText(),word));
    return additionalTaggedTokens;
  }
  if (DATE.matcher(word).matches()) {
    List<AnalyzedToken> additionalTaggedTokens=new ArrayList<>();
    additionalTaggedTokens.add(new AnalyzedToken(word,IPOSTag.date.getText(),word));
    return additionalTaggedTokens;
  }
  if (word.indexOf('-') != -1) {
    List<AnalyzedToken> guessedCompoundTags=compoundTagger.guessCompoundTag(word);
    return guessedCompoundTags;
  }
  return null;
}
