{
  RuleMatch[] ruleMatches=rule.match(langTool.getAnalyzedSentence(text));
  assertEquals(expectedErrors,ruleMatches.length);
  if (expSuggestions != null && expectedErrors != 1) {
    throw new RuntimeException("Sorry, test case can only check suggestion if there's one rule match");
  }
  if (expSuggestions != null) {
    RuleMatch ruleMatch=ruleMatches[0];
    assertEquals("Got these suggestions: " + ruleMatch.getSuggestedReplacements() + ", expected "+ expSuggestions.length,expSuggestions.length,ruleMatch.getSuggestedReplacements().size());
    int i=0;
    for (Iterator<String> iter=ruleMatch.getSuggestedReplacements().iterator(); iter.hasNext(); ) {
      String suggestion=iter.next();
      assertEquals(expSuggestions[i],suggestion);
      i++;
    }
  }
}
