{
  System.out.println("\nStatistics information for supported rule ratio of each language:");
  int successAll=0;
  int failAll=0;
  HashMap<String,Integer> messagesAll=new HashMap<String,Integer>();
  for (  Language language : Language.LANGUAGES) {
    final PatternRuleLoader ruleLoader=new PatternRuleLoader();
    final String name="/" + language.getShortName() + "/grammar.xml";
    final List<PatternRule> rules=ruleLoader.getRules(JLanguageTool.getDataBroker().getFromRulesDirAsStream(name),name);
    int success=0;
    int fail=0;
    HashMap<String,Integer> messages=new HashMap<String,Integer>();
    for (    PatternRule rule : rules) {
      try {
        PatternRuleQueryBuilder.buildQuery((PatternRule)rule,true);
        success++;
      }
 catch (      UnsupportedPatternRuleException e) {
        if (messages.get(e.getMessage()) == null) {
          messages.put(e.getMessage(),0);
        }
        messages.put(e.getMessage(),messages.get(e.getMessage()) + 1);
        fail++;
      }
    }
    System.out.println("\t" + language.getName() + " ratio: "+ (float)success / (success + fail) + " (failure:" + fail + ")");
    for (    Entry<String,Integer> entry : messages.entrySet()) {
      System.out.println("\t\t" + entry.getKey() + ": "+ entry.getValue());
    }
    successAll+=success;
    failAll+=fail;
  }
  System.out.println("All languages ratio: " + (float)successAll / (successAll + failAll) + " (failure:" + failAll + ")");
  for (  Entry<String,Integer> entry : messagesAll.entrySet()) {
    System.out.println("\t" + entry.getKey() + ": "+ entry.getValue());
  }
}
