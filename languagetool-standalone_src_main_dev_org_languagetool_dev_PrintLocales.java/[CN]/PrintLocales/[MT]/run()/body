{
  String locales="";
  for (  final Language element : Language.REAL_LANGUAGES) {
    String var;
    for (    final String variant : element.getCountryVariants()) {
      if (StringTools.isEmpty(variant)) {
        var="";
      }
 else {
        var="-" + variant;
      }
      if (!StringTools.isEmpty(locales)) {
        locales=locales + " " + element.getShortName()+ var;
      }
 else {
        locales=element.getShortName() + var;
      }
    }
  }
  final Properties checkPropLoc=new Properties();
  FileInputStream fIn=null;
  try {
    fIn=new FileInputStream(FILENAME);
    checkPropLoc.load(fIn);
  }
  finally {
    if (fIn != null)     fIn.close();
  }
  final String oldLocales=checkPropLoc.getProperty("countryvariants");
  if (!locales.equals(oldLocales)) {
    final Properties propLoc=new Properties();
    propLoc.setProperty("countryvariants",locales);
    FileOutputStream fOut=null;
    try {
      fOut=new FileOutputStream(FILENAME);
      propLoc.store(fOut,"Locales");
    }
  finally {
      if (fOut != null) {
        fOut.close();
      }
 else {
        System.err.println("Cannot save new locales!");
        System.exit(1);
      }
    }
  }
}
