{
  long startTime=System.currentTimeMillis();
  File defaultPatternFile=new File(JLanguageTool.RULES_DIR + File.separator + language.getShortName()+ File.separator+ JLanguageTool.PATTERN_FILE);
  List patternRules=new ArrayList();
  if (defaultPatternFile.exists()) {
    patternRules=lt.loadPatternRules(defaultPatternFile.getAbsolutePath());
  }
 else {
    System.err.println("Pattern file " + defaultPatternFile.getAbsolutePath() + " not found");
  }
  for (Iterator iter=patternRules.iterator(); iter.hasNext(); ) {
    Rule rule=(Rule)iter.next();
    lt.addRule(rule);
  }
  if (verbose)   lt.setOutput(System.err);
  String fileContents=readFile(filename);
  fileContents=filterXML(fileContents);
  List ruleMatches=lt.check(fileContents);
  long startTimeMatching=System.currentTimeMillis();
  int i=1;
  for (Iterator iter=ruleMatches.iterator(); iter.hasNext(); ) {
    RuleMatch match=(RuleMatch)iter.next();
    System.out.println(i + ".) Line " + (match.getLine() + 1)+ ", column "+ match.getColumn()+ ", Rule ID: "+ match.getRule().getId());
    String msg=match.getMessage();
    msg=msg.replaceAll("<i>","'");
    msg=msg.replaceAll("</i>","'");
    System.out.println("Message: " + msg);
    System.out.println(getContext(match.getFromPos(),match.getToPos(),fileContents));
    if (iter.hasNext())     System.out.println();
    i++;
  }
  long endTime=System.currentTimeMillis();
  System.out.println("Time: " + (endTime - startTime) + "ms (including "+ (endTime - startTimeMatching)+ "ms for rule matching)");
}
