{
  if (verbose) {
    lt.setOutput(System.err);
  }
  if (!apiFormat && !applySuggestions) {
    if ("-".equals(filename)) {
      System.out.println("Working on STDIN...");
    }
 else {
      System.out.println("Working on " + filename + "...");
    }
  }
  int runCount=1;
  final List<Rule> rules=lt.getAllRules();
  if (profileRules) {
    System.out.printf("Testing %d rules\n",rules.size());
    System.out.println("Rule ID\tTime\tSentences\tMatches\tSentences per sec.");
    runCount=rules.size();
  }
  InputStreamReader isr=null;
  BufferedReader br=null;
  int lineOffset=0;
  int tmpLineOffset=0;
  final List<String> unknownWords=new ArrayList<String>();
  StringBuilder sb=new StringBuilder();
  for (int ruleIndex=0; ruleIndex < runCount; ruleIndex++) {
    currentRule=rules.get(ruleIndex);
    int matches=0;
    long sentences=0;
    final long startTime=System.currentTimeMillis();
    try {
      isr=getInputStreamReader(filename,encoding,isr);
      br=new BufferedReader(isr);
      String line;
      while ((line=br.readLine()) != null) {
        sb.append(line);
        sb.append('\n');
        tmpLineOffset++;
        if (lt.getLanguage().getSentenceTokenizer().singleLineBreaksMarksPara()) {
          matches=handleLine(matches,lineOffset,sb);
          sentences+=lt.getSentenceCount();
          if (profileRules) {
            sentences+=lt.sentenceTokenize(sb.toString()).size();
          }
          if (listUnknownWords && !taggerOnly) {
            for (            String word : lt.getUnknownWords())             if (!unknownWords.contains(word)) {
              unknownWords.add(word);
            }
          }
          sb=new StringBuilder();
          lineOffset=tmpLineOffset;
        }
 else {
          if ("".equals(line) || sb.length() >= MAX_FILE_SIZE) {
            matches=handleLine(matches,lineOffset,sb);
            sentences+=lt.getSentenceCount();
            if (profileRules) {
              sentences+=lt.sentenceTokenize(sb.toString()).size();
            }
            if (listUnknownWords && !taggerOnly) {
              for (              String word : lt.getUnknownWords())               if (!unknownWords.contains(word)) {
                unknownWords.add(word);
              }
            }
            sb=new StringBuilder();
            lineOffset=tmpLineOffset;
          }
        }
      }
    }
  finally {
      if (sb.length() > 0) {
        matches=handleLine(matches,tmpLineOffset - 1,sb);
        sentences+=lt.getSentenceCount();
        if (profileRules) {
          sentences+=lt.sentenceTokenize(sb.toString()).size();
        }
        if (listUnknownWords && !taggerOnly) {
          for (          String word : lt.getUnknownWords())           if (!unknownWords.contains(word)) {
            unknownWords.add(word);
          }
        }
      }
      printTimingInformation(listUnknownWords,rules,unknownWords,ruleIndex,matches,sentences,startTime);
      if (br != null) {
        br.close();
      }
      if (isr != null) {
        isr.close();
      }
    }
  }
}
