{
  if (pos == null) {
    return null;
  }
  String posTag=pos;
  if (posTagRegExp) {
    if (possibleTags == null) {
      possibleTags=SynthesizerTools.loadWords(JLanguageTool.getDataBroker().getFromResourceDirAsStream(TAGS_FILE_NAME));
    }
    if (synthesizer == null) {
      final URL url=JLanguageTool.getDataBroker().getFromResourceDirAsUrl(RESOURCE_FILENAME);
      synthesizer=new DictionaryLookup(Dictionary.read(url));
    }
    final ArrayList<String> results=new ArrayList<String>();
    boolean isNegated=false;
    if (token.getPOSTag() != null) {
      isNegated=posTag.indexOf(NEGATION_TAG) > 0 || token.getPOSTag().indexOf(NEGATION_TAG) > 0 && !(posTag.indexOf(COMP_TAG) > 0) && !(posTag.indexOf(SUP_TAG) > 0);
    }
    if (isNegated) {
      posTag=posTag.replaceAll(NEGATION_TAG,POTENTIAL_NEGATION_TAG + "?");
    }
    final Pattern p=Pattern.compile(posTag.replace('+','|'));
    for (    final String tag : possibleTags) {
      final Matcher m=p.matcher(tag);
      if (m.matches()) {
        final List<String> wordForms=getWordForms(token,tag,isNegated);
        if (wordForms != null) {
          results.addAll(wordForms);
        }
      }
    }
    HashSet<String> hs=new HashSet<String>();
    hs.addAll(results);
    results.clear();
    results.addAll(hs);
    return results.toArray(new String[results.size()]);
  }
  return synthesize(token,posTag);
}
