{
  if (qName.equals("rule")) {
    final DisambiguationPatternRule rule=new DisambiguationPatternRule(id,name,language,elementList,disambiguatedPOS,posSelector);
    rule.setStartPositionCorrection(positionCorrection);
    rules.add(rule);
    if (elementList != null) {
      elementList.clear();
    }
    posSelector=null;
  }
 else   if (qName.equals("exception")) {
    inException=false;
    if (!exceptionSet) {
      tokenElement=new Element(elements.toString(),caseSensitive,stringRegExp,tokenInflected);
      exceptionSet=true;
    }
    tokenElement.setNegation(tokenNegated);
    if (!exceptions.toString().equals("")) {
      tokenElement.setStringException(exceptions.toString(),exceptionStringRegExp,exceptionStringInflected,exceptionStringNegation,exceptionValidNext,exceptionValidPrev);
    }
    if (exceptionPosToken != null) {
      tokenElement.setPosException(exceptionPosToken,exceptionPosRegExp,exceptionPosNegation,exceptionValidNext,exceptionValidPrev);
      exceptionPosToken=null;
    }
    resetException();
  }
 else   if (qName.equals("and")) {
    inAndGroup=false;
    andGroupCounter=0;
  }
 else   if (qName.equals("token")) {
    if (!exceptionSet || tokenElement == null) {
      tokenElement=new Element(elements.toString(),caseSensitive,stringRegExp,tokenInflected);
      tokenElement.setNegation(tokenNegated);
    }
 else {
      tokenElement.setStringElement(elements.toString());
    }
    if (skipPos != 0) {
      tokenElement.setSkipNext(skipPos);
      skipPos=0;
    }
    if (posToken != null) {
      tokenElement.setPosElement(posToken,posRegExp,posNegation);
      posToken=null;
    }
    if (tokenReference != null) {
      tokenElement.setMatch(tokenReference);
    }
    if (inAndGroup && andGroupCounter > 0) {
      elementList.get(elementList.size() - 1).setAndGroupElement(tokenElement);
    }
 else {
      elementList.add(tokenElement);
    }
    if (inAndGroup) {
      andGroupCounter++;
    }
    resetToken();
  }
 else   if (qName.equals("pattern")) {
    inPattern=false;
  }
 else   if (qName.equals("disambig")) {
    inDisamb=false;
  }
 else   if (qName.equals("rulegroup")) {
    inRuleGroup=false;
  }
}
