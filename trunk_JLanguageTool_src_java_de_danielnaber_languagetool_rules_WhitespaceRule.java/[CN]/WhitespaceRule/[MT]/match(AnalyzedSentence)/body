{
  final List<RuleMatch> ruleMatches=new ArrayList<RuleMatch>();
  final AnalyzedTokenReadings[] tokens=text.getTokens();
  boolean prevWhite=false;
  int prevLen=0;
  int prevPos=0;
  int i=1;
  while (i < tokens.length) {
    if (tokens[i].isWhitespace() && prevWhite) {
      final int pos=tokens[i].getStartPos();
      while (i < tokens.length && tokens[i].isWhitespace()) {
        prevLen+=tokens[i].getToken().length();
        i++;
      }
      final String msg=messages.getString("whitespace_repetition");
      final RuleMatch ruleMatch=new RuleMatch(this,prevPos,pos + prevLen - 1,msg);
      ruleMatch.setSuggestedReplacement(" ");
      ruleMatches.add(ruleMatch);
    }
    prevWhite=tokens[i].isWhitespace();
    prevLen=tokens[i].getToken().length();
    prevPos=tokens[i].getStartPos();
    i++;
  }
  return toRuleMatchArray(ruleMatches);
}
