{
  List<RuleMatch> ruleMatches=new ArrayList<>();
  AnalyzedTokenReadings[] tokens=sentence.getTokens();
  if (isFirstSentence) {
    isFirstSentence=false;
  }
 else {
    if (!prevSentenceEndsWithWhitespace && tokens.length > 1) {
      int startPos=0;
      String firstToken=tokens[1].getToken();
      int endPos=firstToken.length();
      RuleMatch ruleMatch=new RuleMatch(this,startPos,endPos,getMessage());
      ruleMatch.setSuggestedReplacement(" " + firstToken);
      ruleMatches.add(ruleMatch);
    }
  }
  if (tokens.length > 0) {
    String lastToken=tokens[tokens.length - 1].getToken();
    prevSentenceEndsWithWhitespace=lastToken.trim().isEmpty() && lastToken.length() == 1;
  }
  return toRuleMatchArray(ruleMatches);
}
