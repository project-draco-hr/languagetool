{
  super(messages);
  super.setCategory(new Category(messages.getString("category_misc")));
  setParagraphBackTrack(true);
  if (language.equals(Language.POLISH)) {
    startSymbols=PL_START_SYMBOLS;
    endSymbols=PL_END_SYMBOLS;
  }
 else   if (language.equals(Language.FRENCH)) {
    startSymbols=FR_START_SYMBOLS;
    endSymbols=FR_END_SYMBOLS;
  }
 else   if (language.equals(Language.ENGLISH)) {
    startSymbols=EN_START_SYMBOLS;
    endSymbols=EN_END_SYMBOLS;
  }
 else   if (language.equals(Language.GERMAN)) {
    startSymbols=DE_START_SYMBOLS;
    endSymbols=DE_END_SYMBOLS;
  }
 else   if (language.equals(Language.DUTCH)) {
    startSymbols=NL_START_SYMBOLS;
    endSymbols=NL_END_SYMBOLS;
  }
 else   if (language.equals(Language.SPANISH)) {
    startSymbols=ES_START_SYMBOLS;
    endSymbols=ES_END_SYMBOLS;
  }
 else   if (language.equals(Language.UKRAINIAN)) {
    startSymbols=UK_START_SYMBOLS;
    endSymbols=UK_END_SYMBOLS;
  }
 else   if (language.equals(Language.ITALIAN)) {
    startSymbols=IT_START_SYMBOLS;
    endSymbols=IT_END_SYMBOLS;
  }
 else {
    startSymbols=START_SYMBOLS;
    endSymbols=END_SYMBOLS;
  }
  symbolCounter=new int[startSymbols.length];
  ruleMatchArray=new int[startSymbols.length];
  for (int i=0; i < startSymbols.length; i++) {
    symbolCounter[i]=0;
    ruleMatchArray[i]=0;
  }
  ruleLang=language;
}
