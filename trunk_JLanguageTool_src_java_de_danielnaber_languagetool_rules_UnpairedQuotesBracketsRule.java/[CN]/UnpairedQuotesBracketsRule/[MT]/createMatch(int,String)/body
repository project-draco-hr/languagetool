{
  if (!ruleMatchStack.empty()) {
    final int index=findSymbolNum(symbol);
    if (index >= 0) {
      final RuleMatchLocator rLoc=ruleMatchStack.peek();
      if (rLoc.symbol.equals(startSymbols[index])) {
        if (ruleMatches.size() > rLoc.myIndex) {
          ruleMatches.remove(rLoc.myIndex);
          ruleMatchStack.pop();
          return null;
        }
        if (isInMatches(rLoc.index)) {
          setAsDeleted(rLoc.index);
          ruleMatchStack.pop();
          return null;
        }
      }
    }
  }
  ruleMatchStack.push(new RuleMatchLocator(symbol,ruleMatchIndex,ruleMatches.size()));
  ruleMatchIndex++;
  return new RuleMatch(this,startPos,startPos + symbol.length(),messages.getString("unpaired_brackets"));
}
