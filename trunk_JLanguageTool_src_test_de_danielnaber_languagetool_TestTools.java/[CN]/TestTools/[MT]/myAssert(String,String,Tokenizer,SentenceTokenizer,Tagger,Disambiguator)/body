{
  StringBuffer outputStr=new StringBuffer();
  List<String> sentences=sentenceTokenizer.tokenize(input);
  for (Iterator<String> iter=sentences.iterator(); iter.hasNext(); ) {
    String sentence=iter.next();
    List<String> tokens=tokenizer.tokenize(sentence);
    List<String> noWhitespaceTokens=new ArrayList<String>();
    for (    String token : tokens) {
      if (isWord(token)) {
        noWhitespaceTokens.add(token);
      }
    }
    List<AnalyzedTokenReadings> aTokens=tagger.tag(noWhitespaceTokens);
    AnalyzedTokenReadings[] tokenArray=new AnalyzedTokenReadings[tokens.size() + 1];
    AnalyzedToken[] startTokenArray=new AnalyzedToken[1];
    int toArrayCount=0;
    AnalyzedToken sentenceStartToken=new AnalyzedToken("","SENT_START",0);
    startTokenArray[0]=sentenceStartToken;
    tokenArray[toArrayCount++]=new AnalyzedTokenReadings(startTokenArray);
    int startPos=0;
    int noWhitespaceCount=0;
    for (    String tokenStr : tokens) {
      AnalyzedTokenReadings posTag=null;
      if (isWord(tokenStr)) {
        posTag=aTokens.get(noWhitespaceCount);
        posTag.setStartPos(startPos);
        noWhitespaceCount++;
      }
 else {
        posTag=(AnalyzedTokenReadings)tagger.createNullToken(tokenStr,startPos);
      }
      tokenArray[toArrayCount++]=posTag;
      startPos+=tokenStr.length();
    }
    AnalyzedSentence finalSentence=new AnalyzedSentence(tokenArray);
    finalSentence=disambiguator.disambiguate(finalSentence);
    AnalyzedTokenReadings[] output=finalSentence.getTokens();
    for (int i=0; i < output.length; i++) {
      AnalyzedTokenReadings token=output[i];
      int readingsNumber=token.getReadingsLength();
      for (int j=0; j < readingsNumber; j++) {
        outputStr.append(token.getAnalyzedToken(j).getToken());
        outputStr.append("/[");
        outputStr.append(token.getAnalyzedToken(j).getLemma());
        outputStr.append("]");
        outputStr.append(token.getAnalyzedToken(j).getPOSTag());
        if (readingsNumber > 1 && j < readingsNumber - 1) {
          outputStr.append("|");
        }
      }
      if (i < output.length - 1)       outputStr.append(" ");
    }
  }
  TestCase.assertEquals(expected,outputStr.toString());
}
