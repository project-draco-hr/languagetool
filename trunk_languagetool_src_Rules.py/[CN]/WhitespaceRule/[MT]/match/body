def match(self, tagged_words, chunks=None, position_fix=0, line_fix=0, column_fix=0):
    "Check if a sentence contains whitespace/token sequences\n\t\tthat are against the 'use a space after, but not before, a token'\n\t\trule."
    matches = []
    text_length = 0
    line_breaks = 1
    column = 0
    i = 0
    while 1:
        if (i >= (len(tagged_words) - 1)):
            break
        org_word = tagged_words[i][0]
        line_breaks_cur = Tools.Tools.countLinebreaks(org_word)
        if (line_breaks_cur > 0):
            column = 0
        line_breaks = (line_breaks + line_breaks_cur)
        org_word_next = self.getNextTriple(tagged_words, (i + 1))
        if org_word_next:
            org_word_next = org_word_next[0]
        text_length = (text_length + len(org_word))
        if (tagged_words[i][1] == None):
            if (line_breaks_cur == 0):
                column = (column + len(org_word))
            i = (i + 1)
            continue
        whitespace_length = len(tagged_words[(i + 1)][0])
        if (line_breaks_cur == 0):
            column = (column + len(org_word))
        if (self.punct_regex.match(org_word) and (not (org_word.endswith('\n') or org_word.endswith('\r')))):
            word_next = tagged_words[(i + 1)][1]
            word_next = self.getNextTriple(tagged_words, (i + 1))
            if word_next:
                word_next = word_next[1]
                if (word_next and self.number_regex.match(word_next)):
                    i = (i + 1)
                    continue
            if (word_next and (not self.after_punct_regex.match(org_word_next)) and (not self.whitespace_regex.match(org_word_next))):
                matches.append(RuleMatch(self.rule_id, text_length, (text_length + len(org_word)), (line_breaks + line_fix), (column + column_fix), 'Usually a space character is inserted after punctuation.'))
        elif self.whitespace_regex.match(org_word):
            if self.punct_regex.match(org_word_next):
                matches.append(RuleMatch(self.rule_id, text_length, (text_length + len(org_word)), (line_breaks + line_fix), (column + column_fix), 'Usually no space character is inserted before punctuation.'))
        i = (i + 1)
    return matches
