{
  if (qName.equals("rule")) {
    PatternRule rule=new PatternRule(id,language,elementList,description,message.toString());
    rule.setStartPositionCorrection(startPositionCorrection);
    rule.setEndPositionCorrection(endPositionCorrection);
    startPositionCorrection=0;
    endPositionCorrection=0;
    rule.setCorrectExamples(correctExamples);
    rule.setIncorrectExamples(incorrectExamples);
    rule.setCaseSensitive(caseSensitive);
    caseSensitive=false;
    rules.add(rule);
    if (elementList != null) {
      elementList.clear();
    }
  }
 else   if (qName.equals("token")) {
    if (inToken) {
      StringElement stringElement=new StringElement(elements.toString(),caseSensitive,regExpression,tokenInflected);
      stringElement.setNegation(tokenNegated);
      if (skipPos != 0) {
        stringElement.setSkipNext(skipPos);
        skipPos=0;
      }
      elementList.add(stringElement);
      tokenNegated=false;
      tokenInflected=false;
    }
    inToken=false;
    regExpression=false;
  }
 else   if (qName.equals("pattern")) {
    inPattern=false;
  }
 else   if (qName.equals("example")) {
    if (inCorrectExample) {
      correctExamples.add(correctExample.toString());
    }
 else     if (inIncorrectExample) {
      incorrectExamples.add(incorrectExample.toString());
    }
    inCorrectExample=false;
    inIncorrectExample=false;
    correctExample=new StringBuffer();
    incorrectExample=new StringBuffer();
  }
 else   if (qName.equals("message")) {
    inMessage=false;
  }
 else   if (qName.equals("rulegroup")) {
    inRuleGroup=false;
  }
 else   if (qName.equals("em") && inMessage) {
    message.append("</em>");
  }
}
