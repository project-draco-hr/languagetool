{
  if (qName.equals("rule")) {
    PatternRule rule=new PatternRule(id,language,elementList,description,message.toString());
    rule.setStartPositionCorrection(startPositionCorrection);
    rule.setEndPositionCorrection(endPositionCorrection);
    startPositionCorrection=0;
    endPositionCorrection=0;
    rule.setCorrectExamples(correctExamples);
    rule.setIncorrectExamples(incorrectExamples);
    rule.setCaseSensitive(caseSensitive);
    caseSensitive=false;
    rules.add(rule);
    if (elementList != null) {
      elementList.clear();
    }
  }
 else   if (qName.equals("exception")) {
    inException=false;
  }
 else   if (qName.equals("token")) {
    Element stringElement=new Element(elements.toString(),caseSensitive,stringRegExp,stringInflected);
    stringElement.setNegation(stringNegation);
    if (skipPos != 0) {
      stringElement.setSkipNext(skipPos);
      skipPos=0;
    }
    if (posToken != null) {
      stringElement.setPosElement(posToken,posRegExp,posNegation);
      posToken=null;
    }
    if (exceptionSet) {
      stringElement.setStringException(exceptions.toString(),caseSensitive,exceptionStringRegExp,exceptionStringInflected,exceptionStringNegation);
      exceptionSet=false;
    }
    if (exceptionPosToken != null) {
      stringElement.setPosException(exceptionPosToken,exceptionPosRegExp,exceptionPosNegation);
      exceptionPosToken=null;
    }
    elementList.add(stringElement);
    stringNegation=false;
    stringInflected=false;
    posNegation=false;
    posRegExp=false;
    inToken=false;
    stringRegExp=false;
    exceptionStringNegation=false;
    exceptionStringInflected=false;
    exceptionPosNegation=false;
    exceptionPosRegExp=false;
    exceptionStringRegExp=false;
  }
 else   if (qName.equals("pattern")) {
    inPattern=false;
  }
 else   if (qName.equals("example")) {
    if (inCorrectExample) {
      correctExamples.add(correctExample.toString());
    }
 else     if (inIncorrectExample) {
      incorrectExamples.add(incorrectExample.toString());
    }
    inCorrectExample=false;
    inIncorrectExample=false;
    correctExample=new StringBuffer();
    incorrectExample=new StringBuffer();
  }
 else   if (qName.equals("message")) {
    inMessage=false;
  }
 else   if (qName.equals("rulegroup")) {
    inRuleGroup=false;
  }
 else   if (qName.equals("em") && inMessage) {
    message.append("</em>");
  }
 else   if (qName.equals("em") && inCorrectExample) {
    correctExample.append("</em>");
  }
 else   if (qName.equals("em") && inIncorrectExample) {
    incorrectExample.append("</em>");
  }
}
