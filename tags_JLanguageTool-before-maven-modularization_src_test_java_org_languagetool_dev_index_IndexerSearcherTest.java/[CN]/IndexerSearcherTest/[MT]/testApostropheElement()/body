{
  createIndex("Daily Bleed's Anarchist Encyclopedia");
  final List<Element> elements1=Arrays.asList(new Element("Bleed",false,false,false),new Element("'",false,false,false),new Element("s",false,false,false));
  final PatternRule rule1=new PatternRule("RULE1",Language.ENGLISH,elements1,"desc","msg","shortMsg");
  final List<Element> elements2=Arrays.asList(new Element("Bleed",false,false,false),new Element("'",false,false,false),new Element("x",false,false,false));
  final PatternRule rule2=new PatternRule("RULE",Language.ENGLISH,elements2,"desc","msg","shortMsg");
  final DirectoryReader reader=DirectoryReader.open(directory);
  try {
    final IndexSearcher indexSearcher=new IndexSearcher(reader);
    final SearcherResult searcherResult1=errorSearcher.findRuleMatchesOnIndex(rule1,Language.ENGLISH,indexSearcher);
    assertEquals(1,searcherResult1.getMatchingSentences().size());
    final List<RuleMatch> ruleMatches=searcherResult1.getMatchingSentences().get(0).getRuleMatches();
    assertEquals(1,ruleMatches.size());
    final Rule rule=ruleMatches.get(0).getRule();
    assertEquals("RULE1",rule.getId());
    final SearcherResult searcherResult2=errorSearcher.findRuleMatchesOnIndex(rule2,Language.ENGLISH,indexSearcher);
    assertEquals(0,searcherResult2.getMatchingSentences().size());
  }
  finally {
    reader.close();
  }
}
