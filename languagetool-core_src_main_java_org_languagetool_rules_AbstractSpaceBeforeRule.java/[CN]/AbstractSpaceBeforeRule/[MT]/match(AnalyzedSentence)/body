{
  List<RuleMatch> ruleMatches=new ArrayList<>();
  AnalyzedTokenReadings[] tokens=sentence.getTokens();
  for (int i=1; i < tokens.length; i++) {
    String token=tokens[i].getToken();
    Matcher matcher=getConjunctions().matcher(token);
    if (matcher.matches()) {
      String previousToken=tokens[i - 1].getToken();
      if (!(previousToken.equals(" ") || previousToken.equals("("))) {
        String replacement=" " + token;
        String msg=getSuggestion();
        int pos=tokens[i].getStartPos();
        RuleMatch potentialRuleMatch=new RuleMatch(this,pos,pos + token.length(),msg,getShort());
        potentialRuleMatch.setSuggestedReplacement(replacement);
        ruleMatches.add(potentialRuleMatch);
      }
    }
  }
  return toRuleMatchArray(ruleMatches);
}
