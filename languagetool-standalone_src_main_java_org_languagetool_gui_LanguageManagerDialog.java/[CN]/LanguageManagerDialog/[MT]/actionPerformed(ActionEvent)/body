{
  if (e.getSource() == addButton) {
    Configuration config=null;
    try {
      config=new Configuration(null);
    }
 catch (    IOException e1) {
      throw new RuntimeException(e1);
    }
    File initialDir;
    File ruleFile;
    if (config.getExternalRuleDirectory() != null) {
      initialDir=new File(config.getExternalRuleDirectory());
      if (initialDir.isDirectory()) {
        ruleFile=Tools.openFileDialog(owner,new XMLFileFilter(),initialDir);
      }
 else {
        ruleFile=Tools.openFileDialog(owner,new XMLFileFilter());
      }
    }
 else {
      ruleFile=Tools.openFileDialog(owner,new XMLFileFilter());
    }
    if (ruleFile == null) {
      return;
    }
    if (config != null) {
      config.setExternalRuleDirectory(ruleFile.getParent());
      try {
        config.saveConfiguration(null);
      }
 catch (      IOException e1) {
        throw new RuntimeException(e1);
      }
    }
    if (!ruleFiles.contains(ruleFile)) {
      ruleFiles.add(ruleFile);
      list.setListData(ruleFiles.toArray(new File[ruleFiles.size()]));
    }
 else {
      final JOptionPane jop=new JOptionPane();
      JOptionPane.showMessageDialog(jop,messages.getString("guiDuplicate"),messages.getString("guiWarning"),JOptionPane.WARNING_MESSAGE);
    }
  }
 else   if (e.getSource() == removeButton) {
    if (list.getSelectedIndex() != -1) {
      ruleFiles.remove(list.getSelectedIndex());
      list.setListData(ruleFiles.toArray(new File[ruleFiles.size()]));
    }
  }
 else   if (e.getSource() == closeButton) {
    dialog.setVisible(false);
  }
 else {
    throw new IllegalArgumentException("Don't know how to handle " + e);
  }
}
