{
  boolean update=false;
  Set<String> disabledRules=config.getDisabledRuleIds();
  if (disabledRules == null) {
    disabledRules=Collections.emptySet();
  }
  Set<String> common=new HashSet<>(disabledRules);
  common.retainAll(languageTool.getDisabledRules());
  Set<String> toDisable=new HashSet<>(disabledRules);
  toDisable.removeAll(common);
  Set<String> toEnable=new HashSet<>(languageTool.getDisabledRules());
  toEnable.removeAll(common);
  for (  String ruleId : toDisable) {
    languageTool.disableRule(ruleId);
    update=true;
  }
  for (  String ruleId : toEnable) {
    languageTool.enableRule(ruleId);
    update=true;
  }
  Set<String> disabledCategories=config.getDisabledCategoryNames();
  if (disabledCategories == null) {
    disabledCategories=Collections.emptySet();
  }
  common=new HashSet<>(disabledCategories);
  common.retainAll(languageTool.getDisabledCategories());
  toDisable=new HashSet<>(disabledCategories);
  toDisable.removeAll(common);
  toEnable=new HashSet<>(languageTool.getDisabledCategories());
  toEnable.removeAll(common);
  if (!toDisable.isEmpty()) {
    languageTool.getDisabledCategories().addAll(toDisable);
    update=true;
  }
  if (!toEnable.isEmpty()) {
    languageTool.getDisabledCategories().removeAll(toEnable);
    update=true;
  }
  Set<String> enabledRules=config.getEnabledRuleIds();
  if (enabledRules == null) {
    enabledRules=Collections.emptySet();
  }
  for (  String ruleName : enabledRules) {
    languageTool.enableDefaultOffRule(ruleName);
    languageTool.enableRule(ruleName);
  }
  if (update) {
    checkImmediately(null);
    fireEvent(LanguageToolEvent.Type.RULE_ENABLED,null);
  }
}
