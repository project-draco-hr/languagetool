{
  if (documentSpans.isEmpty() && languageTool.getDisabledRules().isEmpty()) {
    return;
  }
  int offset=this.textComponent.viewToModel(event.getPoint());
  final Span span=getSpan(offset);
  JPopupMenu popup=new JPopupMenu("Grammar Menu");
  if (span != null) {
    JLabel msgItem=new JLabel("<html>" + span.msg.replace("<suggestion>","<b>").replace("</suggestion>","</b>") + "</html>");
    msgItem.setToolTipText(span.desc.replace("<suggestion>","").replace("</suggestion>",""));
    msgItem.setBorder(new JMenuItem().getBorder());
    popup.add(msgItem);
    popup.add(new JSeparator());
    for (    String r : span.replacement) {
      ReplaceMenuItem item=new ReplaceMenuItem(r,span);
      popup.add(item);
      item.addActionListener(actionListener);
    }
    popup.add(new JSeparator());
    JMenuItem moreItem=new JMenuItem(messages.getString("guiMore"));
    moreItem.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        showDialog(textComponent,span.msg,span.desc,span.rule);
      }
    }
);
    popup.add(moreItem);
    JMenuItem ignoreItem=new JMenuItem(messages.getString("guiOOoIgnoreButton"));
    ignoreItem.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        disableRule(span.rule.getId());
      }
    }
);
    popup.add(ignoreItem);
  }
  List<Rule> disabledRules=getDisabledRules();
  if (!disabledRules.isEmpty()) {
    JMenu activateRuleMenu=new JMenu(messages.getString("guiActivateRule"));
    addDisabledRulesToMenu(disabledRules,activateRuleMenu);
    popup.add(activateRuleMenu);
  }
  if (span != null) {
    textComponent.setCaretPosition(span.start);
    textComponent.moveCaretPosition(span.end);
  }
  popup.addPopupMenuListener(new PopupMenuListener(){
    @Override public void popupMenuWillBecomeVisible(    PopupMenuEvent e){
    }
    @Override public void popupMenuWillBecomeInvisible(    PopupMenuEvent e){
    }
    @Override public void popupMenuCanceled(    PopupMenuEvent e){
      if (span != null) {
        textComponent.setCaretPosition(span.start);
      }
    }
  }
);
  popup.show(textComponent,event.getPoint().x,event.getPoint().y);
}
