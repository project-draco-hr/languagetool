{
  File reversedFile=File.createTempFile(SynthDictionaryBuilder.class.getSimpleName() + "_reversed",".txt");
  String separator=getOption("fsa.dict.separator");
  if (separator == null || separator.trim().isEmpty()) {
    throw new IOException("A separator character (fsa.dict.separator) must be defined in the dictionary info file.");
  }
  String encoding=getOption("fsa.dict.encoding");
  int posIgnoreCount=0;
  Scanner scanner=new Scanner(plainTextDictFile,encoding);
  try (Writer out=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(reversedFile),encoding))){
    while (scanner.hasNextLine()) {
      String line=scanner.nextLine();
      if (itemsToBeIgnored.contains(line)) {
        System.out.println("Ignoring: " + line);
        continue;
      }
      String[] parts=line.split("\t");
      if (parts.length == 3) {
        String posTag=parts[2];
        if (ignorePosRegex != null && ignorePosRegex.matcher(posTag).find()) {
          posIgnoreCount++;
          continue;
        }
        out.write(parts[0] + separator + parts[1]+ "|"+ posTag);
        out.write("\n");
      }
 else {
        System.err.println("Invalid input, expected three tab-separated columns in " + plainTextDictFile + ": "+ line+ " => ignoring");
      }
    }
    scanner.close();
  }
   System.out.println("Number of lines ignored due to POS tag filter ('" + ignorePosRegex + "'): "+ posIgnoreCount);
  return reversedFile;
}
