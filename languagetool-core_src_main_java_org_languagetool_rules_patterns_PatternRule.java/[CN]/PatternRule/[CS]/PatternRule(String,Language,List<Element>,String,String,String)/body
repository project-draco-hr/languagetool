{
  super(id,description,language,elements,false);
  if (id == null)   throw new NullPointerException("id cannot be null");
  if (language == null)   throw new NullPointerException("language cannot be null");
  if (elements == null)   throw new NullPointerException("elements cannot be null");
  if (description == null)   throw new NullPointerException("description/name cannot be null");
  this.message=message;
  this.shortMessage=shortMessage;
  this.elementNo=new ArrayList<>();
  this.suggestionsOutMsg="";
  String prevName="";
  String curName="";
  int cnt=0;
  int loopCnt=0;
  for (  final Element e : patternElements) {
    if (e.isPartOfPhrase()) {
      curName=e.getPhraseName();
      if (prevName.equals(curName) || StringTools.isEmpty(prevName)) {
        cnt++;
        useList=true;
      }
 else {
        elementNo.add(cnt);
        curName="";
        cnt=0;
      }
      prevName=curName;
      loopCnt++;
      if (loopCnt == patternElements.size() && !StringTools.isEmpty(prevName)) {
        elementNo.add(cnt);
      }
    }
 else {
      if (cnt > 0) {
        elementNo.add(cnt);
      }
      elementNo.add(1);
      loopCnt++;
    }
  }
}
