def testRules(self):
    examples = self.loadRuleExamples()
    checker = TextChecker.TextChecker(grammar=None, falsefriends=None, words=None, builtin=None, textlanguage=None, mothertongue=None, max_sentence_length=99)
    err_count = 0
    for sentence_obj in examples:
        (rule_matches, xml_err, tagged_text) = checker.check(sentence_obj.sentence)
        tagged_clean = self.display(tagged_text)
        i = 1
        if (len(rule_matches) > 1):
            errs = ''
            for rule_match in rule_matches:
                errs = ((errs + rule_match.id) + ', ')
            msg = ("Error '%s' not found, found '%s' instead. Sentence:\n%s\nTagged sentence:\n%s" % (sentence_obj.expected_error_id, errs, sentence_obj.sentence, tagged_clean))
            print ('*** Error: %s' % msg)
        if (len(rule_matches) == 1):
            found_error_id = rule_matches[0].id
            msg = ("Error '%s' not found, found '%s' instead. Sentence:\n%s\nTagged sentence:\n%s" % (sentence_obj.expected_error_id, found_error_id, sentence_obj.sentence, tagged_clean))
            if (sentence_obj.expected_error_id != found_error_id):
                print ('*** Error: %s' % msg)
                print 
                err_count = (err_count + 1)
        else:
            msg = ("Error '%s' not found. Sentence:\n%s\nTagged sentence:\n%s" % (sentence_obj.expected_error_id, sentence_obj.sentence, tagged_clean))
            if (sentence_obj.expected_error_id != None):
                print ('*** Error: %s' % msg)
                print 
                err_count = (err_count + 1)
    print ('%d problems (errors not detected resp. wrong error detected' % err_count)
    return
