def testExampleSentences(self):
    checker = TextChecker.TextChecker(grammar=None, falsefriends=None, words=None, textlanguage=None, mothertongue=None, max_sentence_length=0)
    errors = self.loadExampleSentences()
    stat_corr_found = 0
    stat_found = 0
    stat_not_found = 0
    for err in errors:
        (rule_match, xml_err, tagged_text) = checker.check(err.sentence)
        found_err_from = re.compile('from="(\\d+)"', re.DOTALL).search(xml_err)
        found_err_to = re.compile('to="(\\d+)"', re.DOTALL).search(xml_err)
        error_found = None
        correctly_marked = None
        if (found_err_from and found_err_to):
            found_err_from = int(found_err_from.group(1))
            found_err_to = int(found_err_to.group(1))
            error_found = 1
            for (from_pos, to_pos) in err.span_list:
                if ((found_err_from <= from_pos) and (found_err_to >= to_pos)):
                    correctly_marked = 1
                    break
        if (error_found and correctly_marked):
            s_disp = self.addMarker(err.sentence, found_err_from, found_err_to, '*')
            print ("Found error at right position in '%s'" % s_disp)
            stat_corr_found = (stat_corr_found + 1)
        elif error_found:
            s_disp = self.addMarker(err.sentence, found_err_from, found_err_to, '*')
            print ("*** Error found at wrong position in '%s' (pos: %d-%d, expected: %s)" % (s_disp, found_err_from, found_err_to, str(err.span_list)))
            stat_found = (stat_found + 1)
        else:
            print ("*** Error NOT found in '%s'" % err.sentence)
            stat_not_found = (stat_not_found + 1)
    print ('Correctly found: %d' % stat_corr_found)
    print ('Found at wrong position: %d' % stat_found)
    print ('Not found at all: %d' % stat_not_found)
    return
