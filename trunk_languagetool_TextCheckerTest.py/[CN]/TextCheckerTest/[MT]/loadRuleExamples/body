def loadRuleExamples(self):
    reader = xml.dom.ext.reader.Sax2.Reader()
    doc = reader.fromStream(self.RULE_FILE)
    rule_nodes = doc.getElementsByTagName('rule')
    sentences = []
    for rule_node in rule_nodes:
        expected_error_id = rule_node.getAttribute('id')
        if (not expected_error_id):
            parent_node = rule_node.parentNode
            expected_error_id = parent_node.getAttribute('id')
        self.assert_((expected_error_id != ''), "No 'id' attribute found")
        example_nodes = rule_node.getElementsByTagName('example')
        for example_node in example_nodes:
            example_type = example_node.getAttribute('type')
            xml_sentence = Tools.Tools.getXML(example_node)
            xml_sentence = re.compile('\\s+').sub(' ', xml_sentence)
            s = None
            if (example_type == 'correct'):
                s = Sentence(xml_sentence, None)
            else:
                s = Sentence(xml_sentence, expected_error_id)
            sentences.append(s)
    return sentences
