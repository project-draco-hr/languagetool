{
  if (i < 1) {
    return true;
  }
  if (i == 1 && tokenStr.equals("??"))   return false;
  if (i > 1 && tokenStr.equals(")")) {
    boolean isThereOpeningParenthesis=false;
    int k=1;
    while (i - k > 0) {
      if (tokens[i - k].getToken().equals(")"))       break;
      if (tokens[i - k].getToken().equals("(")) {
        isThereOpeningParenthesis=true;
        break;
      }
      k++;
    }
    if (!isThereOpeningParenthesis) {
      final Matcher mValidBeforeClosingParenthesis=VALID_BEFORE_CLOSING_PARENTHESIS.matcher(tokens[i - 1].getToken());
      if (mValidBeforeClosingParenthesis.matches())       return false;
    }
  }
  return true;
}
