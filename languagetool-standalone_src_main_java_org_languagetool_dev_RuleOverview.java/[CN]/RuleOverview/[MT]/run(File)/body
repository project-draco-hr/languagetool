{
  System.out.println("<b>Rules in LanguageTool " + JLanguageTool.VERSION + "</b><br />");
  System.out.println("Date: " + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "<br /><br />\n");
  System.out.println("<table class=\"tablesorter sortable\">");
  System.out.println("<thead>");
  System.out.println("<tr>");
  System.out.println("  <th valign='bottom' width=\"70\">Language</th>");
  System.out.println("  <th valign='bottom' align=\"left\" width=\"60\">XML<br/>rules</th>");
  System.out.println("  <th width=\"120\"></th>");
  System.out.println("  <th align=\"left\" width=\"60\">Java<br/>rules</th>");
  System.out.println("  <th align=\"left\" width=\"60\">False<br/>friends</th>");
  System.out.println("  <th valign='bottom' align=\"left\">Rule Maintainers</th>");
  System.out.println("</tr>");
  System.out.println("</thead>");
  System.out.println("<tbody>");
  final List<String> sortedLanguages=getSortedLanguages();
  final String falseFriendFile=JLanguageTool.getDataBroker().getRulesDir() + File.separator + "false-friends.xml";
  final URL falseFriendUrl=this.getClass().getResource(falseFriendFile);
  final String falseFriendRules=StringTools.readStream(Tools.getStream(falseFriendFile),"utf-8").replaceAll("(?s)<!--.*?-->","").replaceAll("(?s)<rules.*?>","");
  int overallJavaCount=0;
  int langSpecificWebsiteCount=0;
  for (  final String langName : sortedLanguages) {
    final Language lang=Language.getLanguageForName(langName);
    if (lang.isVariant()) {
      continue;
    }
    System.out.print("<tr>");
    final String langCode=lang.getShortName();
    final File langSpecificWebsite=new File(webRoot,langCode);
    if (langSpecificWebsite.isDirectory()) {
      System.out.print("<td valign=\"top\"><a href=\"../" + langCode + "/\">"+ lang.getName()+ "</a></td>");
      langSpecificWebsiteCount++;
    }
 else {
      System.out.print("<td valign=\"top\">" + lang.getName() + "</td>");
    }
    final String xmlFile=JLanguageTool.getDataBroker().getRulesDir() + File.separator + langCode+ File.separator+ "grammar.xml";
    final URL url=this.getClass().getResource(xmlFile);
    if (url == null) {
      System.out.println("<td valign=\"top\" align=\"right\">0</td>");
    }
 else {
      String xmlRules=StringTools.readStream(Tools.getStream(xmlFile),"utf-8");
      xmlRules=xmlRules.replaceAll("(?s)<!--.*?-->","");
      xmlRules=xmlRules.replaceAll("(?s)<rules.*?>","");
      final int count=countXmlRules(xmlRules);
      final int countInRuleGroup=countXmlRuleGroupRules(xmlRules);
      final String ruleBase="http://svn.code.sf.net/p/languagetool/code/trunk/languagetool/languagetool-language-modules/" + langCode + "/src/main/resources/org/languagetool/rules/";
      System.out.print("<td valign=\"top\" align=\"right\">" + (count + countInRuleGroup) + "</td>");
      System.out.print("<td valign=\"top\" align=\"right\">" + "<a href=\"" + ruleBase + langCode+ "/grammar.xml?content-type=text%2Fplain"+ "\">XML</a> / "+ "<a href=\"http://community.languagetool.org/rule/list?lang="+ langCode+ "\">Browse</a>"+ "</td>");
    }
    final File dir=new File("../languagetool-language-modules/" + langCode + "/src/main/java"+ JLanguageTool.getDataBroker().getRulesDir()+ "/"+ langCode);
    if (!dir.exists()) {
      System.out.print("<td valign=\"top\" align=\"right\">0</td>");
    }
 else {
      final File[] javaRules=dir.listFiles(new JavaFilter(langName));
      final int javaCount=javaRules.length;
      if (javaCount > 0) {
        final String sourceCodeLink="http://svn.code.sf.net/p/languagetool/code/trunk/languagetool/languagetool-language-modules/" + langCode + "/src/main/java/org/languagetool/rules/"+ langCode+ "/";
        System.out.print("<td valign=\"top\" align=\"right\"><a href=\"" + sourceCodeLink + "\">"+ javaCount+ "</a></td>");
      }
 else {
        System.out.print("<td valign=\"top\" align=\"right\">" + javaCount + "</td>");
      }
      overallJavaCount++;
    }
    if (falseFriendUrl == null) {
      System.out.println("<td valign=\"top\" align=\"right\">0</td>");
    }
 else {
      final int count=countFalseFriendRules(falseFriendRules,lang);
      System.out.print("<td valign=\"top\" align=\"right\">" + count + "</td>");
      final StringBuilder maintainerInfo=getMaintainerInfo(lang);
      System.out.print("<td valign=\"top\" align=\"left\">" + maintainerInfo.toString() + "</td>");
    }
    System.out.println("</tr>");
  }
  if (overallJavaCount == 0) {
    throw new RuntimeException("No Java rules found - start this script from the LanguageTool directory so " + "that the sources are at 'src/main/java/org/languagetool/rules'");
  }
  if (langSpecificWebsiteCount == 0) {
    throw new RuntimeException("No language specific websites found - please let the web root parameter " + "point to the 'www' directory (current value: '" + webRoot + "')");
  }
  System.out.println("</tbody>");
  System.out.println("</table>");
}
