{
  List<String> parts=splitter.tokenize(token.getToken());
  String firstPart=String.join("",parts.subList(0,parts.size() - 1));
  String lastPart=StringTools.uppercaseFirstChar(parts.get(parts.size() - 1));
  AnalyzedToken lastPartToken=new AnalyzedToken(lastPart,posTag,lastPart);
  String[] lastPartForms;
  if (posTagRegExp) {
    lastPartForms=super.synthesize(lastPartToken,posTag,true);
  }
 else {
    lastPartForms=super.synthesize(lastPartToken,posTag);
  }
  Set<String> results=new LinkedHashSet<>();
  for (  String part : lastPartForms) {
    results.add(firstPart + StringTools.lowercaseFirstChar(part));
  }
  return results.toArray(new String[results.size()]);
}
