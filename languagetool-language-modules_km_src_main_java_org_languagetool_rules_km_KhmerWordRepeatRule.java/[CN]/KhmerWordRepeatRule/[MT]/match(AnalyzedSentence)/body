{
  List<RuleMatch> ruleMatches=new ArrayList<>();
  AnalyzedTokenReadings[] tokens=sentence.getTokensWithoutWhitespace();
  AnalyzedTokenReadings[] tokensWithWS=sentence.getTokens();
  String prevToken="";
  for (int i=1; i < tokens.length; i++) {
    String token=tokens[i].getToken();
    if (isWord(token) && prevToken.equalsIgnoreCase(token) && !ignore(sentence,tokensWithWS,i)) {
      int prevPos=tokens[i - 1].getStartPos();
      int pos=tokens[i].getStartPos();
      RuleMatch ruleMatch=new RuleMatch(this,prevPos,pos + prevToken.length(),messages.getString("repetition"),messages.getString("desc_repetition_short"));
      List<String> replacements=new ArrayList<>();
      replacements.add(prevToken + " " + token);
      replacements.add(prevToken);
      replacements.add(prevToken + "???");
      ruleMatch.setSuggestedReplacements(replacements);
      ruleMatches.add(ruleMatch);
    }
    prevToken=token;
  }
  return toRuleMatchArray(ruleMatches);
}
