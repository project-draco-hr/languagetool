{
  final PatternToken patternToken=new PatternToken("",false,false,false);
  patternToken.setPosElement(PatternToken.UNKNOWN_TAG,false,false);
  final PatternToken patternToken2=new PatternToken("",false,false,false);
  patternToken2.setPosElement(PatternToken.UNKNOWN_TAG,false,true);
  final PatternToken patternToken3=new PatternToken("",false,false,false);
  patternToken3.setPosElement(PatternToken.UNKNOWN_TAG + "|VBG",true,false);
  final PatternToken patternToken4=new PatternToken("",false,false,false);
  patternToken4.setPosElement(PatternToken.UNKNOWN_TAG + "|VBG",true,true);
  final PatternToken patternToken5=new PatternToken("\\p{Ll}+",false,true,false);
  patternToken5.setPosElement(PatternToken.UNKNOWN_TAG,false,false);
  final AnalyzedToken an=new AnalyzedToken("schword",null,null);
  assertTrue(patternToken.isMatched(an));
  assertFalse(patternToken2.isMatched(an));
  assertTrue(patternToken3.isMatched(an));
  assertFalse(patternToken4.isMatched(an));
  assertTrue(patternToken5.isMatched(an));
  an.setNoPOSTag(false);
  assertFalse(patternToken.isMatched(an));
  assertTrue(patternToken2.isMatched(an));
  assertFalse(patternToken3.isMatched(an));
  assertTrue(patternToken4.isMatched(an));
  assertFalse(patternToken5.isMatched(an));
  final AnalyzedToken anSentEnd=new AnalyzedToken("schword",JLanguageTool.SENTENCE_END_TAGNAME,null);
  assertTrue(patternToken.isMatched(anSentEnd));
  assertFalse(patternToken2.isMatched(anSentEnd));
  assertTrue(patternToken3.isMatched(anSentEnd));
  assertFalse(patternToken4.isMatched(anSentEnd));
  assertTrue(patternToken5.isMatched(anSentEnd));
  final PatternToken patternToken6=new PatternToken("\\p{Ll}+",false,true,false);
  patternToken6.setPosElement(JLanguageTool.SENTENCE_END_TAGNAME,false,false);
  assertTrue(patternToken6.isMatched(anSentEnd));
  final PatternToken patternToken7=new PatternToken("\\p{Ll}+",false,true,false);
  patternToken7.setPosElement(JLanguageTool.SENTENCE_END_TAGNAME + "|BLABLA",true,false);
  assertTrue(patternToken7.isMatched(anSentEnd));
  anSentEnd.setNoPOSTag(false);
  assertFalse(patternToken.isMatched(anSentEnd));
  assertTrue(patternToken2.isMatched(anSentEnd));
  assertFalse(patternToken3.isMatched(anSentEnd));
  assertTrue(patternToken4.isMatched(anSentEnd));
  assertFalse(patternToken5.isMatched(anSentEnd));
  final AnalyzedToken anParaEnd=new AnalyzedToken("schword",JLanguageTool.PARAGRAPH_END_TAGNAME,null);
  assertTrue(patternToken.isMatched(anParaEnd));
  assertFalse(patternToken2.isMatched(anParaEnd));
  assertTrue(patternToken3.isMatched(anParaEnd));
  assertFalse(patternToken4.isMatched(anParaEnd));
  assertTrue(patternToken5.isMatched(anParaEnd));
  anParaEnd.setNoPOSTag(false);
  assertFalse(patternToken.isMatched(anParaEnd));
  assertTrue(patternToken2.isMatched(anParaEnd));
  assertFalse(patternToken3.isMatched(anParaEnd));
  assertTrue(patternToken4.isMatched(anParaEnd));
  assertFalse(patternToken5.isMatched(anParaEnd));
  final AnalyzedToken anWithPOS=new AnalyzedToken("schword","POS",null);
  assertFalse(patternToken.isMatched(anWithPOS));
  assertTrue(patternToken2.isMatched(anWithPOS));
  assertFalse(patternToken3.isMatched(anWithPOS));
  assertTrue(patternToken4.isMatched(anWithPOS));
  assertFalse(patternToken5.isMatched(anWithPOS));
}
