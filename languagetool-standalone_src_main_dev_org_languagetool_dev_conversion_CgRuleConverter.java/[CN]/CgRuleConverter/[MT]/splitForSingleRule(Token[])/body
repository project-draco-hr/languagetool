{
  ArrayList<List<Token>> list=new ArrayList<List<Token>>();
  ArrayList<Token> tokenList=new ArrayList<Token>(Arrays.asList(tokens));
  list.add(tokenList);
  boolean notdone=true;
  while (notdone) {
    for (int i=0; i < list.size(); i++) {
      List<Token> insideList=list.get(i);
      if (singleRuleCompatible(insideList.toArray(new Token[insideList.size()]))) {
        if (i == list.size() - 1)         notdone=false;
        continue;
      }
 else {
        list.remove(i);
        ArrayList<List<Token>> splitTokens=splitListForSingleRule(insideList);
        for (        List<Token> ind : splitTokens) {
          list.add(ind);
        }
        break;
      }
    }
  }
  return list;
}
