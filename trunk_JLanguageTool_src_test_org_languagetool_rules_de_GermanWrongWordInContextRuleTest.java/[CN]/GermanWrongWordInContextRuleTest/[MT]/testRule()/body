{
  GermanWrongWordInContextRule rule=new GermanWrongWordInContextRule(null);
  JLanguageTool langTool=new JLanguageTool(Language.GERMAN);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Ihre Lider sind entz??ndet.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Er hat entz??ndete Lider.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Wir singen gemeinsam Lieder.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Lieder singen wir.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Lider singen wir."))[0].getFromPos());
  assertEquals(11,rule.match(langTool.getAnalyzedSentence("Ihre Lieder sind entz??ndet."))[0].getToPos());
  assertEquals("Lider",rule.match(langTool.getAnalyzedSentence("Er hat entz??ndete Lieder."))[0].getSuggestedReplacements().get(0));
  assertEquals("Lieder",rule.match(langTool.getAnalyzedSentence("Wir singen gemeinsam Lider."))[0].getSuggestedReplacements().get(0));
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Ich soll Bilder einer M??hle malen.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Ich male ein Bild einer M??hle.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Das Bild zeigt eine mahlende M??hle.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Eine mahlende M??hle zeigt das Bild.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Weizen ausmalen.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Ich mahle das Bild aus.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Eine M??hle wird zum Malen verwendet.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Das gemalene Korn aus der M??hle ist gut.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Zum Malen verwendet man eine M??hle.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Du musst das Bild ausmahlen.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Wir haben das im Kunstunterricht gemahlt.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Er hat ein sch??nes Selbstportr??t gemahlt.")).length);
  assertEquals("gemahlen",rule.match(langTool.getAnalyzedSentence("Das Korn wird in den M??hlen gemalen."))[0].getSuggestedReplacements().get(0));
  assertEquals("malten",rule.match(langTool.getAnalyzedSentence("Wir mahlten im Kunstunterricht."))[0].getSuggestedReplacements().get(0));
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Er verzieht keine Miene.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Die Explosion der Mine.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Die Mine ist explodiert.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Er versucht, keine Miene zu verziehen.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Sie sollen weiter Minen eingesetzt haben.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Er verzieht sich nach Bekanntgabe der Mineral??lsteuerverordnung.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Er verzieht keine Mine.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Mit unbewegter Mine.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Er setzt eine kalte Mine auf.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Er sagt, die unterirdische Miene sei zusammengest??rzt.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Die Miene ist eingest??rzt.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Die Sprengung mit Mienen ist toll.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Der Bleistift hat eine Miene.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Die Mienen sind gestern Abend explodiert.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Die Miene des Kugelschreibers ist leer.")).length);
  assertEquals("Minen",rule.match(langTool.getAnalyzedSentence("Er hat das mit den Mienen weggesprengt."))[0].getSuggestedReplacements().get(0));
  assertEquals("Miene",rule.match(langTool.getAnalyzedSentence("Er versucht, keine Mine zu verziehen."))[0].getSuggestedReplacements().get(0));
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Die Seiten des Buches sind beschrieben.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Dieses Buch ??ber die Gitarre hat nur sechs Seiten.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Diese Gitarre hat sechs Saiten.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Die UNO muss andere Saiten aufziehen.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Eine Gitarre hat Saiten, aber keine Seiten.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Die Saiten des Violoncellos sind kurz.")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("Dieses Buch ??ber die Gitarre hat nur sechs Seiten.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Die Saiten des Buches sind beschrieben.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Die Seiten des Kontrabasses sind gerissen.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Bei der UNO m??ssen andere Seiten aufgezogen werden.")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("Die Seiten des Violoncellos sind kurz.")).length);
  assertEquals("Saite",rule.match(langTool.getAnalyzedSentence("Die E-Gitarre hat eine sechste Seite."))[0].getSuggestedReplacements().get(0));
  assertEquals("Seiten",rule.match(langTool.getAnalyzedSentence("Dieses Buch hat sechs Saiten."))[0].getSuggestedReplacements().get(0));
}
