{
  assertEmptyMatch("???????????????? ????");
  assertEmptyMatch("?????????????? ??????????????");
  assertEmptyMatch("????'?? ??????????????, ???????? ???????? ?????? ????????????????????");
  assertEmptyMatch("?? ???? ?????????? ?????????? ?? ????????, ?????? ???????????????????? ?????????????? ?? ????????????????????.");
  assertEmptyMatch("???????????????????????????? ?????????????? ??????????????????");
  assertEmptyMatch("???????????????????????? ???????????? ????????????.");
  assertEmptyMatch("???????????????? ??????????.");
  assertEmptyMatch("(?????????????? ?????????????? ???????? ????????????");
  assertEmptyMatch("?????????????? ??????????");
  assertEmptyMatch("???????????????? ????????????");
  assertEmptyMatch("?????????? ?????????????????????? ????????????????");
  assertEmptyMatch("?????????????? ??????????????????");
  assertEmptyMatch("???????????????????? ??????????????????");
  assertEmptyMatch("?????????? ???????????? ??????????");
  assertEmptyMatch("?????? ??????????");
  assertEmptyMatch("?????????? ?????? ???????? ??????????");
  assertEmptyMatch("?????? ?????????? ????????????????????");
  assertEmptyMatch("???????????? ?? ?????????? ????????????????????");
  assertEmptyMatch("????????????????????, ???????? ????????????");
  assertEmptyMatch("?????????????? ?????????????????????? ??????????????");
  assertEmptyMatch("?????????????? ?????????????? ????????????????");
  assertEmptyMatch("?????? ????????");
  assertEmptyMatch("?????????? ?????? ????????????");
  assertEmptyMatch("???????????? ???????????? ????????");
  assertEmptyMatch("?????????? ?????????????????? ????????????");
  assertEmptyMatch("???????????????????????????????? ???????????? ???????????????????? ??????????????????");
  assertEmptyMatch("???????????????? ???? ???????????????? ????????????????????");
  assertEmptyMatch("?????????? ???????????????????? ??????????????????");
  assertEmptyMatch("???????????? ???????????? ????????");
  assertEmptyMatch("?????????????????? ?????? ???????????????????? ??????????????");
  assertEmptyMatch("???? ?????????????????????? ?????????????? ?????????????? ????????????????");
  assertEmptyMatch("???????????? ???????????? ??????????????");
  assertEmptyMatch("???????????? ???????????????????????? ???????????????? ?????????????? ????????");
  assertEmptyMatch("?? ???????????? ??????????");
  assertEmptyMatch("???????????????????? ??????");
  assertEmptyMatch("???????????? 2003-???? ???????????????????");
  assertEmptyMatch("???? ???????? ????????");
  assertEmptyMatch("?????? ???????? ??????????? ???? ??????????????");
  assertEmptyMatch("???? ??????????????????, ?????????? ???????????? ???????? ????????????????");
  assertEmptyMatch("???????????????????? ?????????? ???? ??????");
  assertEmptyMatch("?????????????? ???????? ??????????????");
  assertEmptyMatch("?????? ???????? ???????? ?? ????????????");
  assertEmptyMatch("?????????????????? ???????????????????? ???? ?????????????????? ????????");
  assertEmptyMatch("?????????? ?????????????? ???? ??????");
  assertEmptyMatch("?????????????????? ????'??, ???????????????? ???? ??????????");
  assertEmptyMatch("??????????????????????, ???????????????????????????? ??????????????");
  assertEmptyMatch("?????? ????????????, ?????? ?????????????????????????? ??????????????");
  assertEmptyMatch("?? ?????????? ???????????????? ??????????????");
  assertEmptyMatch("?????? ?? ???? ???????????????????????? ????????????");
  assertEmptyMatch("?? ?? ????????????, ?? ?? ???????????? ????????????????????");
  assertEmptyMatch("?????????????? ?????????????????? ????????????????, ???????????? ????????????????, ?????????????? ??????????????????");
  assertEmptyMatch("?????????????? ???????????????? ????????????");
  assertEmptyMatch("?????? ?????????? ????????????????");
  assertEmptyMatch("?????????????????????? ???? 11-???? ??????????");
  assertEmptyMatch("?? 1990-?? ???????????? ??????????????");
  assertEmptyMatch("?????????????? ???????????? ????????????????????");
  assertEmptyMatch("33 ???????????????? ??????????????");
  assertEmptyMatch("???????? ???????? ???????????? ????????????????");
  assertEmptyMatch("??? ???????????? ?????????????? ???????????????????????? ????????????????");
  assertEmptyMatch("?? ???????????? ?????????????????????? ????????????????????");
  assertEmptyMatch("???????????????????? ????. ??. ????????????????????????????");
  assertEmptyMatch("?????????????? ???????????????? ??????????");
  assertEmptyMatch("?????? ??????-?????????????? ????????-??????????????.");
  assertEmptyMatch("?????????????? ?????????????????? ????????????");
  assertEmptyMatch("???????????????? ?????????????????????????? ??????????????");
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("???????????????? ???????????????????????? ??????????????")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("?????????????? ????????????")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("?????????? ?????????????????????? ??????")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("???? ?????????? ???????????? ????????????????")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("???? ???????????? ???????? ????????????????????")).length);
  RuleMatch[] matches=rule.match(langTool.getAnalyzedSentence("?????????????????? ????????????????????"));
  assertEquals(1,matches.length);
  matches=rule.match(langTool.getAnalyzedSentence("???????????? ????????????."));
  assertEquals(1,matches.length);
}
