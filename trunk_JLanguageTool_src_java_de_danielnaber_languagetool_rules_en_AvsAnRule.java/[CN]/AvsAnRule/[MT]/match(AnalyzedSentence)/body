{
  List ruleMatches=new ArrayList();
  AnalyzedToken[] tokens=text.getTokens();
  String prevToken="";
  int pos=0;
  int prevPos=0;
  for (int i=0; i < tokens.length; i++) {
    String token=tokens[i].getToken();
    if (token.trim().equals("")) {
    }
 else {
      char tokenFirstChar=token.charAt(0);
      boolean doesRequireA=false;
      boolean doesRequireAn=false;
      boolean isException=false;
      String[] parts=token.split("[-']");
      if (parts.length >= 1) {
        token=parts[0];
      }
      if (requiresA.contains(token.toLowerCase())) {
        isException=true;
        doesRequireA=true;
      }
      if (requiresAn.contains(token.toLowerCase())) {
        if (isException) {
          throw new IllegalStateException(token + " is listed in both det_a.txt and det_an.txt");
        }
        isException=true;
        doesRequireAn=true;
      }
      if (!isException) {
        if (isVowel(tokenFirstChar)) {
          doesRequireAn=true;
        }
 else {
          doesRequireA=true;
        }
      }
      String msg=null;
      if (prevToken.toLowerCase().equals("a") && doesRequireAn) {
        msg="Use <suggestion>an</suggestion> instead of <old>a</old> if the following " + "word starts with a vowel sound, e.g. <i>an article</i>, " + "<i>an hour</i>";
      }
 else       if (prevToken.toLowerCase().equals("an") && doesRequireA) {
        msg="Use <suggestion>a</suggestion> instead of <old>an</old> if the following " + "word doesn't start with a vowel sound, e.g. <i>a sentence</i>, " + "<i>a university</i>";
      }
      if (msg != null) {
        RuleMatch ruleMatch=new RuleMatch(this,prevPos,prevPos + prevToken.length(),msg);
        ruleMatches.add(ruleMatch);
      }
      prevToken=token;
      prevPos=pos;
    }
    pos+=token.length();
  }
  return toRuleMatchArray(ruleMatches);
}
