{
  final List<String> sentences;
  if (tokenizeText) {
    sentences=sentenceTokenize(text);
  }
 else {
    sentences=new ArrayList<>();
    sentences.add(text);
  }
  final List<Rule> allRules=getAllRules();
  printIfVerbose(allRules.size() + " rules activated for language " + language);
  sentenceCount=sentences.size();
  unknownWords=new HashSet<>();
  final List<AnalyzedSentence> analyzedSentences=this.analyzeSentences(sentences);
  List<RuleMatch> ruleMatches=performCheck(analyzedSentences,sentences,allRules,paraMode);
  if (!ruleMatches.isEmpty() && !paraMode.equals(ParagraphHandling.ONLYNONPARA)) {
    for (    final Rule rule : allRules) {
      if (rule.isParagraphBackTrack() && (rule.getMatches() != null)) {
        final List<RuleMatch> rm=rule.getMatches();
        for (        final RuleMatch r : rm) {
          if (rule.isInRemoved(r)) {
            ruleMatches.remove(r);
          }
        }
      }
    }
  }
  Collections.sort(ruleMatches);
  return ruleMatches;
}
