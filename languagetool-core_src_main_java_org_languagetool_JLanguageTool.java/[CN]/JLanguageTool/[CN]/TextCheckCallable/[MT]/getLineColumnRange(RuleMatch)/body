{
  LineColumnPosition fromPos=new LineColumnPosition(-1,-1);
  LineColumnPosition toPos=new LineColumnPosition(-1,-1);
  LineColumnPosition pos=new LineColumnPosition(0,0);
  int charCount=0;
  for (  AnalyzedSentence analyzedSentence : analyzedSentences) {
    for (    AnalyzedTokenReadings readings : analyzedSentence.getTokens()) {
      String token=readings.getToken();
      if ("\n".equals(token)) {
        pos.line++;
        pos.column=0;
      }
      pos.column+=token.length();
      charCount+=token.length();
      if (charCount == match.getFromPos()) {
        fromPos=new LineColumnPosition(pos.line,pos.column);
      }
      if (charCount == match.getToPos()) {
        toPos=new LineColumnPosition(pos.line,pos.column);
      }
    }
  }
  return new LineColumnRange(fromPos,toPos);
}
