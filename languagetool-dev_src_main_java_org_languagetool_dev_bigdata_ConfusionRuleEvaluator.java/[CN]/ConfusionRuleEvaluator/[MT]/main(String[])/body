{
  if (args.length < 3 || args.length > 4) {
    System.err.println("Usage: " + ConfusionRuleEvaluator.class.getSimpleName() + " <langCode> <languageModelTopDir> <wikipediaXml|tatoebaFile|plainTextFile|dir>...");
    System.err.println("   <languageModelTopDir> is a directory with sub-directories like 'en' which then again contain '1grams',");
    System.err.println("                      '2grams', and '3grams' sub directories with Lucene indexes");
    System.err.println("                      See http://wiki.languagetool.org/finding-errors-using-n-gram-data");
    System.err.println("   <wikipediaXml|tatoebaFile|plainTextFile|dir> either a Wikipedia XML dump, or a Tatoeba file, or");
    System.err.println("                      a plain text file with one sentence per line, or a directory with");
    System.err.println("                      example sentences (where <word>.txt contains only the sentences for <word>).");
    System.err.println("                      You can specify both a Wikipedia file and a Tatoeba file.");
    System.exit(1);
  }
  long startTime=System.currentTimeMillis();
  String langCode=args[0];
  Language lang;
  if ("en".equals(langCode)) {
    lang=new EnglishLight();
  }
 else {
    lang=Languages.getLanguageForShortName(langCode);
  }
  LanguageModel languageModel=new LuceneLanguageModel(new File(args[1],lang.getShortName()));
  List<String> inputsFiles=new ArrayList<>();
  inputsFiles.add(args[2]);
  if (args.length >= 4) {
    inputsFiles.add(args[3]);
  }
  ConfusionRuleEvaluator generator=new ConfusionRuleEvaluator(lang,languageModel,CASE_SENSITIVE);
  generator.run(inputsFiles,TOKEN,TOKEN_HOMOPHONE,MAX_SENTENCES,EVAL_FACTORS);
  long endTime=System.currentTimeMillis();
  System.out.println("\nTime: " + (endTime - startTime) + "ms");
}
