{
  MatchState startUpper=getMatchState(Match.CaseConversion.STARTUPPER);
  assertNull(startUpper.convertCase(null,"Y",new FakeLanguage("en")));
  assertThat(startUpper.convertCase("","Y",new FakeLanguage("en")),is(""));
  assertThat(startUpper.convertCase("x","Y",new FakeLanguage("en")),is("X"));
  assertThat(startUpper.convertCase("xxx","Yyy",new FakeLanguage("en")),is("Xxx"));
  assertThat(startUpper.convertCase("ijsselmeer","Uppercase",new FakeLanguage("nl")),is("IJsselmeer"));
  assertThat(startUpper.convertCase("ijsselmeer","lowercase",new FakeLanguage("nl")),is("IJsselmeer"));
  assertThat(startUpper.convertCase("ij","Uppercase",new FakeLanguage("nl")),is("IJ"));
  MatchState preserve=getMatchState(Match.CaseConversion.PRESERVE);
  assertThat(preserve.convertCase("xxx","Yyy",new FakeLanguage("en")),is("Xxx"));
  assertThat(preserve.convertCase("xxx","yyy",new FakeLanguage("en")),is("xxx"));
  assertThat(preserve.convertCase("xxx","YYY",new FakeLanguage("en")),is("XXX"));
  assertThat(preserve.convertCase("ijsselmeer","Uppercase",new FakeLanguage("nl")),is("IJsselmeer"));
  assertThat(preserve.convertCase("ijsselmeer","lowercase",new FakeLanguage("nl")),is("ijsselmeer"));
  assertThat(preserve.convertCase("ijsselmeer","ALLUPPER",new FakeLanguage("nl")),is("IJSSELMEER"));
  MatchState startLower=getMatchState(Match.CaseConversion.STARTLOWER);
  assertThat(startLower.convertCase("xxx","YYY",new FakeLanguage("en")),is("xxx"));
  assertThat(startLower.convertCase("xxx","yyy",new FakeLanguage("en")),is("xxx"));
  assertThat(startLower.convertCase("xxx","Yyy",new FakeLanguage("en")),is("xxx"));
  assertThat(startLower.convertCase("XXX","Yyy",new FakeLanguage("en")),is("xXX"));
  assertThat(startLower.convertCase("Xxx","Yyy",new FakeLanguage("en")),is("xxx"));
}
