{
  long[] workTime=new long[10];
  int matchCount=0;
  List<Rule> rules=lt.getAllRules();
  for (  Rule rule : rules) {
    lt.disableRule(rule.getId());
  }
  int ruleCount=rules.size();
  System.out.printf("Testing %d rules\n",ruleCount);
  System.out.println("Rule ID\tTime\tSentences\tMatches\tSentences per sec.");
  for (int i=0; i < ruleCount; i++) {
    if (i > 0) {
      lt.disableRule(rules.get(i - 1).getId());
    }
    lt.enableRule(rules.get(i).getId());
    for (int k=0; k < 10; k++) {
      final long startTime=System.currentTimeMillis();
      matchCount=lt.check(contents).size();
      final long endTime=System.currentTimeMillis();
      workTime[k]=endTime - startTime;
    }
    Arrays.sort(workTime);
    final long time=median(workTime);
    final float timeInSeconds=time / 1000.0f;
    final float sentencesPerSecond=lt.getSentenceCount() / timeInSeconds;
    System.out.printf(Locale.ENGLISH,"%s\t%d\t%d\t%d\t%.1f",rules.get(i).getId(),time,lt.getSentenceCount(),matchCount,sentencesPerSecond);
    System.out.println();
  }
}
