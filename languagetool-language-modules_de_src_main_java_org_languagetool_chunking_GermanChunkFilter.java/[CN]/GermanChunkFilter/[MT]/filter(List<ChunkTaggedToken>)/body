{
  if (DEBUG) {
    System.out.println("=============== FILTER INPUT ===============");
    System.out.println(getDebugString(tokens));
  }
  apply("<chunk=B-NP & !regex=jede[rs]?> <chunk=I-NP>* <und|sowie> <NP>",NPP,tokens);
  apply("<pos=ADJ> <und|sowie> <chunk=B-NP & !pos=PLU> <chunk=I-NP>*",NPS,tokens,true);
  apply("<deren> <chunk=B-NP & !pos=PLU> <und|sowie> <chunk=B-NP>*",NPS,tokens,true);
  apply("<pos=EIG> <und> <pos=EIG>",NPP,tokens);
  apply("<pos=ART> <pos=ADJ> <und|sowie> (<pos=ADJ>|<pos=PA2>) <chunk=I-NP & !pos=PLU>+",NPS,tokens,true);
  apply("<chunk=B-NP & !pos=PLU> <chunk=I-NP>* <und|sowie> <keine> <chunk=I-NP>+",NPS,tokens,true);
  apply("(<eins>|<eines>) <chunk=B-NP> <chunk=I-NP>+",NPS,tokens);
  apply("<ich|du|er|sie|es|wir|ihr|sie> <und|oder|sowie> <NP>",NPP,tokens);
  apply("<sowohl> <NP> <als> <auch> <NP>",NPP,tokens);
  apply("<sowohl> <pos=EIG> <als> <auch> <pos=EIG>",NPP,tokens);
  apply("<sowohl> <ich|du|er|sie|es|wir|ihr|sie> <als> <auch> <NP>",NPP,tokens);
  apply("<pos=SUB> <und|oder|sowie> <chunk=B-NP & !ihre> <chunk=I-NP>*",NPP,tokens);
  apply("<weder> <pos=SUB> <noch> <pos=SUB>",NPP,tokens);
  apply("(<zwei|drei|vier|f??nf|sechs|sieben|acht|neun|zehn|elf|zw??lf>) <chunk=I-NP>",NPP,tokens);
  apply("<chunk=B-NP> <pos=PRP> <NP> <chunk=B-NP & pos=SIN> <chunk=I-NP>*",NPS,tokens);
  apply("<chunk=B-NP> <pos=PRP> <NP> <chunk=B-NP & pos=PLU> <chunk=I-NP>*",NPP,tokens);
  apply("<chunk=B-NP> <pos=PRP> <NP> <pos=PA2> <chunk=B-NP & !pos=PLU> <chunk=I-NP>*",NPS,tokens);
  apply("<chunk=B-NP> <pos=PRP> <NP> <pos=PA2> <chunk=B-NP & !pos=SIN> <chunk=I-NP>*",NPP,tokens);
  apply("<Herr|Frau> <und> <Herr|Frau> <pos=EIG>*",NPP,tokens);
  apply("<chunk=B-NP & !pos=ZAL & !pos=PLU & !chunk=NPP & !einige & !(regex=&prozent;)> <chunk=I-NP & !pos=PLU & !und>*",NPS,tokens);
  apply("<chunk=B-NP & !pos=SIN & !chunk=NPS & !Ellen> <chunk=I-NP & !pos=SIN>*",NPP,tokens);
  apply("<chunk=NPS> <pos=PRO> <pos=ADJ> <pos=ADJ> <NP>",NPS,tokens);
  apply("<regex=eine[rs]?> <der> <am> <pos=ADJ> <pos=PA2> <NP>",NPS,tokens);
  apply("<regex=[\\d,.]+> <&prozent;>",NPS,tokens);
  apply("<regex=[\\d,.]+> <&prozent;>",NPP,tokens);
  apply("<dass> <sie> <wie> <NP>",NPP,tokens);
  apply("<pos=PLU> <die> <Regel>",NPP,tokens);
  apply("<NP> <,> <die> <pos=ADV>+ <chunk=NPS>+",NPP,tokens);
  apply("<der|die|das> <pos=ADJ & !pos=PLU> <der> <pos=PRO>? <pos=SUB>",NPS,tokens);
  apply("<chunk=NPS & !einige> <chunk=NPP & (pos=GEN |pos=ZAL)>+",NPS,tokens,true);
  apply("<chunk=NPP> <chunk=NPS & pos=GEN>+",NPP,tokens,true);
  apply("<chunk=NPS>+ <und> <chunk=NP[SP] & pos=GEN>+",NPS,tokens,true);
  apply("<chunk=NPS>+ <der> <pos=ADV> <pos=PA2> <NP>",NPS,tokens,true);
  apply("<chunk=NPS>+ <der> <pos=ADJ> <pos=ADV> <pos=PA2> <NP>",NPS,tokens,true);
  apply("<chunk=NPS>+ <pos=PRO:POS> <pos=ADJ> <NP>",NPS,tokens,true);
  apply("<eine> <menge> <NP>+",NPP,tokens,true);
  apply("<pos=PRP> <pos=ART:> <pos=ADV>* <pos=ADJ> <NP>",PP,tokens,true);
  apply("<pos=PRP> <chunk=NPP>+ <,> <NP>",PP,tokens,true);
  apply("<pos=PRP> <chunk=NPP>+",PP,tokens,true);
  apply("<pos=PRP> <NP>",PP,tokens);
  apply("<pos=PRP> <NP> <pos=ADJ> (<und>|<oder>|<bzw.>) <NP>",PP,tokens);
  apply("<pos=PRP> (<NP>)+",PP,tokens);
  apply("<pos=PRP> <chunk=B-NP> <pos=ADV> <NP>",PP,tokens);
  apply("<pos=PRP> <pos=ADV> <pos=ZAL> <chunk=B-NP>",PP,tokens);
  apply("<pos=PRP> <pos=PRO> <NP>",PP,tokens);
  apply("<pos=PRP> <pos=ADJ> (<und|oder|sowie>) <NP>",PP,tokens);
  apply("<pos=PRP> <pos=ADV> <regex=\\d+> <NP>",PP,tokens);
  apply("<pos=PRP> <pos=PA1> <NP>",PP,tokens);
  apply("<pos=PRP> <NP> <NP> (<und|oder>) <NP>",PP,tokens);
  apply("<pos=PRP> <pos=ADV> <pos=ADJ> <NP>",PP,tokens);
  apply("<chunk=NPP> <zwischen> <pos=EIG> <und|sowie> <NP>",NPP,tokens);
  apply("<die> <pos=ADJ> <Sekunden|Minuten|Stunden|Tage|Wochen|Monate|Jahre|Jahrzehnte|Jahrhunderte> (<NP>)?",PP,tokens);
  apply("<die> <pos=ADJ> <pos=ZAL> <Sekunden|Minuten|Stunden|Tage|Wochen|Monate|Jahre|Jahrzehnte|Jahrhunderte> (<NP>)?",PP,tokens);
  apply("<regex=(vor)?letzte[sn]?> <Woche|Monat|Jahr|Jahrzehnt|Jahrhundert>",PP,tokens);
  apply("<,> <die|welche> <NP> <chunk=NPS & pos=GEN>+",NPP,tokens);
  apply("<NP> <,> <NP> <,> <NP>",NPP,tokens);
  return tokens;
}
