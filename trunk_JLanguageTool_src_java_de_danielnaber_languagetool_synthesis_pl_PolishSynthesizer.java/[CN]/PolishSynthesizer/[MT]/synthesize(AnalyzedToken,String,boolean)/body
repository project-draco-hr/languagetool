{
  if (posTagRegExp) {
    if (possibleTags == null) {
      possibleTags=loadWords(this.getClass().getResourceAsStream(TAGS_FILE_NAME));
    }
    if (synthesizer == null) {
      synthesizer=new Lametyzator(this.getClass().getResourceAsStream(RESOURCE_FILENAME),"iso8859-2",'+');
    }
    Pattern p=Pattern.compile(posTag);
    ArrayList<String> results=new ArrayList<String>();
    boolean isNegated=posTag.indexOf(":neg") > 0 || token.getPOSTag().indexOf(":neg") > 0;
    for (    String tag : possibleTags) {
      Matcher m=p.matcher(tag);
      if (m.matches()) {
        String[] wordForms=null;
        if (isNegated) {
          wordForms=synthesizer.stem(token.getLemma() + "|" + tag.replaceAll(":neg",":pneg"));
          if (wordForms != null) {
            String[] negForms=wordForms;
            for (int i=0; i < wordForms.length; i++) {
              negForms[i]="nie" + wordForms[i];
            }
            wordForms=negForms;
          }
        }
 else {
          wordForms=synthesizer.stem(token.getLemma() + "|" + tag);
        }
        if (wordForms != null) {
          results.addAll(Arrays.asList(wordForms));
        }
      }
    }
    return (String[])results.toArray(new String[results.size()]);
  }
 else {
    return synthesize(token,posTag);
  }
}
