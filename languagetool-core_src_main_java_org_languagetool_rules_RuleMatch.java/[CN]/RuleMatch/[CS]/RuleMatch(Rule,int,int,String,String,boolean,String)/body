{
  this.rule=Objects.requireNonNull(rule);
  if (toPos <= fromPos) {
    throw new RuntimeException("fromPos (" + fromPos + ") must be less than toPos ("+ toPos+ ")");
  }
  this.offsetPosition=new OffsetPosition(fromPos,toPos);
  this.message=Objects.requireNonNull(message);
  this.shortMessage=shortMessage;
  Matcher matcher=SUGGESTION_PATTERN.matcher(message + suggestionsOutMsg);
  int pos=0;
  while (matcher.find(pos)) {
    pos=matcher.end();
    String replacement=matcher.group(1);
    if (startWithUppercase) {
      replacement=StringTools.uppercaseFirstChar(replacement);
    }
    if (!suggestedReplacements.contains(replacement)) {
      suggestedReplacements.add(replacement);
    }
  }
}
