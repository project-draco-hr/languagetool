{
  if (ruleMatches.size() > 0) {
    int i=1;
    System.out.println("\nTitle: " + sentence.getTitle());
    for (    RuleMatch match : ruleMatches) {
      String output=i + ".) Line " + (match.getLine() + 1)+ ", column "+ match.getColumn()+ ", Rule ID: "+ match.getRule().getId();
      if (match.getRule() instanceof AbstractPatternRule) {
        final AbstractPatternRule pRule=(AbstractPatternRule)match.getRule();
        output+="[" + pRule.getSubId() + "]";
      }
      System.out.println(output);
      String msg=match.getMessage();
      msg=msg.replaceAll("<suggestion>","'");
      msg=msg.replaceAll("</suggestion>","'");
      System.out.println("Message: " + msg);
      final List<String> replacements=match.getSuggestedReplacements();
      if (!replacements.isEmpty()) {
        System.out.println("Suggestion: " + String.join("; ",replacements));
      }
      System.out.println(contextTools.getPlainTextContext(match.getFromPos(),match.getToPos(),sentence.getText()));
      i++;
      checkMaxErrors(++errorCount);
    }
  }
  checkMaxSentences(++sentenceCount);
}
