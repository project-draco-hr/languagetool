def aff_read(self):
    self.aff_file = os.path.join(sys.path[0], 'data', Tagger.affFile)
    condlist = []
    condlist_group = []
    alfab_condlist_group = []
    conddic = {}
    faff = codecs.open(self.aff_file, 'r', self.encoding)
    l = ' '
    for i in range(0, 256, 1):
        alfab_conddic[i] = []
    while (l != ''):
        l = faff.readline()
        ll = l.split()
        if (len(ll) <= 1):
            continue
        if (ll[0][0] in comment):
            continue
        if (ll[0][1:3] == 'FX'):
            arrname = ll[1]
            arrtype[arrname] = ll[0][0]
            yesno[arrname] = ll[2]
            count[arrname] = int(ll[3])
            for i in range(0, count[arrname]):
                l = faff.readline()
                bb = l.split()
                strip = bb[2]
                if (bb[2] == '0'):
                    strip = ''
                appnd = bb[3]
                if (bb[3] == '0'):
                    appnd = ''
                    appnd_last = '0'
                else:
                    appnd_last = appnd[(-1)]
                if (bb[4] != '.'):
                    jj = 0
                    while (jj < len(bb[4])):
                        condarr = array.array('B', range(256))
                        insbit = 1
                        for iii in range(0, 256, 1):
                            condarr[iii] = 0
                        if (bb[4][jj] == '['):
                            kk = 0
                            jj = (jj + 1)
                            if (bb[4][jj] == '^'):
                                jj = (jj + 1)
                                insbit = 0
                                for iii in range(0, 256, 1):
                                    condarr[iii] = 1
                            while (bb[4][jj] != ']'):
                                condarr[ord(bb[4][jj])] = insbit
                                jj = (jj + 1)
                            if (bb[4][jj] == ']'):
                                jj = (jj + 1)
                        else:
                            condarr[ord(bb[4][jj])] = insbit
                            jj = (jj + 1)
                        condlist.append(condarr)
                condlist_group.append(condlist)
                condlist_group.append(strip)
                condlist_group.append(appnd)
                alfab_condlist_group.append(condlist)
                alfab_condlist_group.append(strip)
                alfab_condlist_group.append(appnd)
                alfab_condlist_group.append(arrname)
                conddic[i] = condlist_group
                alfab_conddic[ord(appnd_last)].append(alfab_condlist_group)
                condlist = []
                condlist_group = []
                alfab_condlist_group = []
            condglob[arrname] = conddic
            conddic = {}
    faff.close()
