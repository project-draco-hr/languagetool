{
  TopScoreDocCollector topCollector=TopScoreDocCollector.create(maxHits);
  Counter clock=Counter.newCounter(true);
  int waitMillis=1000;
  TimeLimitingCollector collector=new TimeLimitingCollector(topCollector,clock,maxSearchTimeMillis / waitMillis);
  collector.setBaseline(0);
  Thread counterThread=new Thread(){
    @Override public void run(){
      long startTime=System.currentTimeMillis();
      while (true) {
        long runTimeMillis=System.currentTimeMillis() - startTime;
        if (runTimeMillis > maxSearchTimeMillis) {
          return;
        }
        clock.addAndGet(1);
        try {
          Thread.sleep(waitMillis);
        }
 catch (        InterruptedException e) {
          throw new RuntimeException(e);
        }
      }
    }
  }
;
  counterThread.setName("LuceneSearchTimeoutThread");
  counterThread.start();
  boolean timeLimitActivated=false;
  try {
    indexSearcher.search(query,collector);
  }
 catch (  TimeLimitingCollector.TimeExceededException e) {
    timeLimitActivated=true;
  }
  return new PossiblyLimitedTopDocs(topCollector.topDocs(),timeLimitActivated);
}
