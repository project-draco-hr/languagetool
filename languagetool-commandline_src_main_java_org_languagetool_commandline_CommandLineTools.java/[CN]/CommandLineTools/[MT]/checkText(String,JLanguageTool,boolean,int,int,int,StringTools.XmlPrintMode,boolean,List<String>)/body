{
  if (contextSize == -1) {
    contextSize=DEFAULT_CONTEXT_SIZE;
  }
  final long startTime=System.currentTimeMillis();
  final List<RuleMatch> ruleMatches=lt.check(contents);
  for (  RuleMatch r : ruleMatches) {
    r.setLine(r.getLine() + lineOffset);
    r.setEndLine(r.getEndLine() + lineOffset);
  }
  if (apiFormat) {
    if (listUnknownWords && xmlMode == StringTools.XmlPrintMode.NORMAL_XML) {
      unknownWords=lt.getUnknownWords();
    }
    final RuleAsXmlSerializer serializer=new RuleAsXmlSerializer();
    final String xml=serializer.ruleMatchesToXml(ruleMatches,contents,contextSize,xmlMode,lt.getLanguage(),unknownWords);
    final PrintStream out=new PrintStream(System.out,true,"UTF-8");
    out.print(xml);
  }
 else {
    printMatches(ruleMatches,prevMatches,contents,contextSize);
  }
  if (xmlMode == StringTools.XmlPrintMode.NORMAL_XML) {
    SentenceTokenizer sentenceTokenizer=lt.getLanguage().getSentenceTokenizer();
    int sentenceCount=sentenceTokenizer.tokenize(contents).size();
    displayTimeStats(startTime,sentenceCount,apiFormat);
  }
  return ruleMatches.size();
}
