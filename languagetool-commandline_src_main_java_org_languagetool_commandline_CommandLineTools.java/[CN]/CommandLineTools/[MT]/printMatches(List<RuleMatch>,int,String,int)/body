{
  int i=1;
  final ContextTools contextTools=new ContextTools();
  contextTools.setContextSize(contextSize);
  for (  final RuleMatch match : ruleMatches) {
    String output=i + prevMatches + ".) Line "+ (match.getLine() + 1)+ ", column "+ match.getColumn()+ ", Rule ID: "+ match.getRule().getId();
    if (match.getRule() instanceof PatternRule) {
      final PatternRule pRule=(PatternRule)match.getRule();
      output+="[" + pRule.getSubId() + "]";
    }
    System.out.println(output);
    String msg=match.getMessage();
    msg=msg.replaceAll("<suggestion>","'");
    msg=msg.replaceAll("</suggestion>","'");
    System.out.println("Message: " + msg);
    final List<String> replacements=match.getSuggestedReplacements();
    if (!replacements.isEmpty()) {
      System.out.println("Suggestion: " + StringTools.listToString(replacements,"; "));
    }
    System.out.println(contextTools.getPlainTextContext(match.getFromPos(),match.getToPos(),contents));
    if (match.getRule().getUrl() != null) {
      System.out.println("More info: " + match.getRule().getUrl().toString());
    }
    if (i < ruleMatches.size()) {
      System.out.println();
    }
    i++;
  }
}
