{
  Unifier uni=new Unifier();
  Element sgElement=new Element("",false,false,false);
  sgElement.setPosElement(".*[\\.:]sg:.*",true,false);
  uni.setEquivalence("number","singular",sgElement);
  Element plElement=new Element("",false,false,false);
  plElement.setPosElement(".*[\\.:]pl:.*",true,false);
  uni.setEquivalence("number","plural",plElement);
  Element femElement=new Element("",false,false,false);
  femElement.setPosElement(".*[\\.:]f:.*",true,false);
  uni.setEquivalence("gender","feminine",femElement);
  Element mascElement=new Element("",false,false,false);
  femElement.setPosElement(".*[\\.:]m:.*",true,false);
  uni.setEquivalence("gender","masculine",mascElement);
  AnalyzedToken sing1=new AnalyzedToken("ma??y","adj:sg:blahblah:m","ma??y");
  AnalyzedToken sing1a=new AnalyzedToken("ma??y","adj:pl:blahblah:f","ma??y");
  AnalyzedToken sing1b=new AnalyzedToken("ma??y","adj:pl:blahblah:f","ma??y");
  AnalyzedToken sing2=new AnalyzedToken("zgarbiony","adj:pl:blahblah:f","cz??owiek");
  AnalyzedToken sing3=new AnalyzedToken("cz??owiek","subst:sg:blahblah:m","cz??owiek");
  boolean satisfied=uni.isSatisfied(sing1,"number,gender","");
  satisfied|=uni.isSatisfied(sing1a,"number,gender","");
  satisfied|=uni.isSatisfied(sing1b,"number,gender","");
  uni.startUnify();
  satisfied&=uni.isSatisfied(sing2,"number,gender","");
  uni.startNextToken();
  satisfied&=uni.isSatisfied(sing3,"number,gender","");
  uni.startNextToken();
  assertEquals(false,satisfied);
  uni.reset();
}
