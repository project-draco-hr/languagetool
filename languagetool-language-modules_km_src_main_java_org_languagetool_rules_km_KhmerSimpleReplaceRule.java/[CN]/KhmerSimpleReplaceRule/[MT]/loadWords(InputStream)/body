{
  final List<Map<String,String>> list=new ArrayList<>();
  try (InputStreamReader isr=new InputStreamReader(stream,getEncoding());BufferedReader br=new BufferedReader(isr)){
    String line;
    while ((line=br.readLine()) != null) {
      line=line.trim();
      if (line.length() < 1 || line.charAt(0) == '#') {
        continue;
      }
      final String[] parts=line.split("=");
      if (parts.length != 2) {
        throw new IOException("Format error in file " + JLanguageTool.getDataBroker().getFromRulesDirAsUrl(getFileName()) + ", line: "+ line);
      }
      final String[] wrongForms=parts[0].split("\\|");
      for (      String wrongForm : wrongForms) {
        int wordCount=0;
        final List<String> tokens=getWordTokenizer().tokenize(wrongForm);
        for (        String token : tokens) {
          if (!StringTools.isWhitespace(token)) {
            wordCount++;
          }
        }
        for (int i=list.size(); i < wordCount; i++) {
          list.add(new HashMap<String,String>());
        }
        list.get(wordCount - 1).put(wrongForm,parts[1]);
      }
    }
  }
   List<Map<String,String>> result=new ArrayList<>();
  for (  Map<String,String> map : list) {
    result.add(Collections.unmodifiableMap(map));
  }
  return Collections.unmodifiableList(result);
}
