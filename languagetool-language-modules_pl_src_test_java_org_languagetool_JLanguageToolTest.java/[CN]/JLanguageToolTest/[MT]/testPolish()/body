{
  final Polish polish=new Polish();
  JLanguageTool tool=new JLanguageTool(polish);
  assertEquals("[PL]",Arrays.toString(polish.getCountries()));
  List<RuleMatch> matches=tool.check("To jest ca??kowicie prawid??owe zdanie.");
  assertEquals(0,matches.size());
  matches=tool.check("To jest jest problem.");
  assertEquals(1,matches.size());
  assertEquals(0,tool.check("Maj?? one niema??e znaczenie.").size());
  assertEquals(0,tool.check("Cz??sto wystarczy obr??ci?? na wspak wyroki ??wiata, aby trafnie os??dzi?? jak???? osob??.").size());
  assertEquals(0,tool.check("A teraz ka??cie mi da?? jaki b??d?? posi??ek.").size());
  assertEquals(0,tool.check("Kiedym w??z zobaczy??, by??bym przysi??g??, ??e wielka przygoda mnie czeka.").size());
  assertEquals(0,tool.check("Jurek wygl??da wypisz wymaluj babcia.").size());
  assertEquals(1,tool.check("Jurek wygl??da wypisz wypisz wymaluj babcia.").size());
  assertEquals(1,tool.check("Jurek wygl??da wypisz wymaluj wymaluj babcia.").size());
  assertEquals(0,tool.check("Zawar?? w niej, opr??cz swojej tw??rczo??ci, wybrane epigramaty czterdziestu o??miu innych greckich poet??w i poetek.").size());
  tool.activateDefaultPatternRules();
  assertEquals(0,tool.check("Nudne brednie tak zam??ci??y g??ow?? ch??opu, ??e kl???? na czym ziemia stoi, zmuszonym b??d??c s??ucha?? tego wszystkiego.").size());
  assertEquals(1,tool.check("Chc??c, nie chc??c zjad??em pstr??ga.").size());
  matches=tool.check("By?? on bowiem pi??knym strzelcem bowiem.");
  assertEquals(0,matches.size());
  tool.enableDefaultOffRule("PL_WORD_REPEAT");
  matches=tool.check("By?? on bowiem pi??knym strzelcem bowiem.");
  assertEquals(1,matches.size());
  tool.activateDefaultPatternRules();
  matches=tool.check("Premier drapie si?? w ucho co i rusz.");
  assertEquals(1,matches.size());
  matches=tool.check("I can give you more a detailed description");
  assertEquals(6,matches.size());
  tool.setListUnknownWords(true);
  matches=tool.check("This is not a Polish text.");
  assertEquals(3,matches.size());
  assertEquals("[Polish, This, is, text]",tool.getUnknownWords().toString());
  matches=tool.check("To jest tekst.\nTest 1. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(17,matches.get(0).getColumn());
  matches=tool.check("To jest tekst. \nTest 1. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(16,matches.get(0).getColumn());
  matches=tool.check("To jest tekst. Test 1. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(32,matches.get(0).getColumn());
  polish.getSentenceTokenizer().setSingleLineBreaksMarksParagraph(true);
  tool=new JLanguageTool(polish);
  tool.activateDefaultPatternRules();
  matches=tool.check("To jest tekst.\nTest 1. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(17,matches.get(0).getColumn());
  matches=tool.check("To jest tekst. \nTest 1. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(17,matches.get(0).getColumn());
  matches=tool.check("To jest tekst. To jest linia w kt??rej nie ma przecinka.");
  assertEquals(24,matches.get(0).getColumn());
  AnalyzedSentence sent=tool.getAnalyzedSentence("Z powodu pogody dobre buty s?? wskazane.");
  assertEquals("Disambiguator log: \n\n" + "prep_verb:2 Z[z/prep:acc:nwok*,z/prep:gen:nwok*,z/prep:inst:nwok*] -> Z[z/prep:gen:nwok*]\n" + "PREP_SUBST:1 Z[z/prep:gen:nwok*] -> Z[z/prep:gen:nwok*]\n"+ "PREP_SUBST_2:1 Z[z/prep:gen:nwok*] -> Z[z/prep:gen:nwok*]\n"+ "MULTIWORD_CHUNKER: Z[z/prep:gen:nwok*] -> Z[z/prep:gen:nwok*,Z powodu/<PREP:GEN>*]\n\n"+ "prep_verb:2 powodu[pow??d/subst:sg:gen:m3] -> powodu[pow??d/subst:sg:gen:m3]\n"+ "PREP_SUBST:1 powodu[pow??d/subst:sg:gen:m3] -> powodu[pow??d/subst:sg:gen:m3]\n"+ "PREP_SUBST_2:1 powodu[pow??d/subst:sg:gen:m3] -> powodu[pow??d/subst:sg:gen:m3]\n"+ "MULTIWORD_CHUNKER: powodu[pow??d/subst:sg:gen:m3] -> powodu[pow??d/subst:sg:gen:m3,Z powodu/</PREP:GEN>]\n"+ "\n"+ "PREP_SUBST:8 pogody[pogoda/subst:pl:acc:f,pogoda/subst:pl:nom:f,pogoda/subst:pl:voc:f,pogoda/subst:sg:gen:f] -> pogody[pogoda/subst:sg:gen:f]\n"+ "\n"+ "WIELKI_SWOJ_ADJ:1 dobre[dobre/subst:pl:acc:n2,dobre/subst:pl:nom:n2,dobre/subst:pl:voc:n2,dobre/subst:sg:acc:n2,dobre/subst:sg:nom:n2,dobre/subst:sg:voc:n2,dobry/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,dobry/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,dobry/adj:sg:acc:n1.n2:pos,dobry/adj:sg:nom.voc:n1.n2:pos,dobry/depr:pl:nom:m2,dobry/depr:pl:voc:m2,dobry/subst:pl:acc:m3,dobry/subst:pl:nom:m3,dobry/subst:pl:voc:m3] -> dobre[dobry/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,dobry/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,dobry/adj:sg:acc:n1.n2:pos,dobry/adj:sg:nom.voc:n1.n2:pos]\n"+ "unify_adj_subst:2 dobre[dobry/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,dobry/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,dobry/adj:sg:acc:n1.n2:pos,dobry/adj:sg:nom.voc:n1.n2:pos] -> dobre[dobry/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,dobry/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos]\n"+ "\n"+ "unify_adj_subst:2 buty[but/subst:pl:acc:m2,but/subst:pl:acc:m3,but/subst:pl:nom:m2,but/subst:pl:nom:m3,but/subst:pl:voc:m2,but/subst:pl:voc:m3,buta/subst:pl:acc:f,buta/subst:pl:nom:f,buta/subst:pl:voc:f,buta/subst:sg:gen:f] -> buty[but/subst:pl:acc:m2,but/subst:pl:acc:m3,but/subst:pl:nom:m2,but/subst:pl:nom:m3,but/subst:pl:voc:m2,but/subst:pl:voc:m3,buta/subst:pl:acc:f,buta/subst:pl:nom:f,buta/subst:pl:voc:f]\n"+ "SUBST_NOM_VOC_VERB:3 buty[but/subst:pl:acc:m2,but/subst:pl:acc:m3,but/subst:pl:nom:m2,but/subst:pl:nom:m3,but/subst:pl:voc:m2,but/subst:pl:voc:m3,buta/subst:pl:acc:f,buta/subst:pl:nom:f,buta/subst:pl:voc:f] -> buty[but/subst:pl:nom:m2,but/subst:pl:nom:m3,buta/subst:pl:nom:f]\n"+ "\n"+ "ppas_jest:1 s??[by??/verb:fin:pl:ter:imperf:nonrefl] -> s??[by??/verb:fin:pl:ter:imperf:nonrefl]\n"+ "SUBST_NOM_VOC_VERB:3 s??[by??/verb:fin:pl:ter:imperf:nonrefl] -> s??[by??/verb:fin:pl:ter:imperf:nonrefl]\n"+ "BYC_ADJ_ACC_NOM:1 s??[by??/verb:fin:pl:ter:imperf:nonrefl] -> s??[by??/verb:fin:pl:ter:imperf:nonrefl]\n"+ "\n"+ "ppas_jest:1 wskazane[wskazany/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,wskazany/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,wskazany/adj:sg:acc:n1.n2:pos,wskazany/adj:sg:nom.voc:n1.n2:pos,wskaza??/ppas:pl:nom.acc.voc:m2.m3.f.n1.n2.p2.p3:perf:aff,wskaza??/ppas:sg:nom.acc.voc:n1.n2:perf:aff] -> wskazane[wskaza??/ppas:pl:nom.acc.voc:m2.m3.f.n1.n2.p2.p3:perf:aff]\n"+ "BYC_ADJ_ACC_NOM:1 wskazane[wskaza??/ppas:pl:nom.acc.voc:m2.m3.f.n1.n2.p2.p3:perf:aff] -> wskazane[wskaza??/ppas:pl:nom.acc.voc:m2.m3.f.n1.n2.p2.p3:perf:aff]\n",sent.getAnnotations());
}
