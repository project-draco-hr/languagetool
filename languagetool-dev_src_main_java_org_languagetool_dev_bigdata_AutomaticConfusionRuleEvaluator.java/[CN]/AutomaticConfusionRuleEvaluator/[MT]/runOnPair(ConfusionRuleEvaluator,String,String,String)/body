{
  for (  Map.Entry<String,List<ConfusionSet>> entry : knownSets.entrySet()) {
    if (entry.getKey().equals(part1) || entry.getKey().equals(part2)) {
      System.out.println("Ignoring: " + part1 + "/"+ part2+ ", in active confusion sets already");
      return;
    }
  }
  System.out.println("Working on: " + line);
  File sentencesFile=writeExampleSentencesToTempFile(new String[]{part1,part2});
  List<String> input=Arrays.asList(sentencesFile.getAbsolutePath());
  Map<Long,ConfusionRuleEvaluator.EvalResult> results=evaluator.run(input,part1,part2,MAX_EXAMPLES,EVAL_FACTORS);
  Map<Long,ConfusionRuleEvaluator.EvalResult> bestResults=findBestFactor(results);
  if (bestResults.size() > 0) {
    for (    Map.Entry<Long,ConfusionRuleEvaluator.EvalResult> entry : bestResults.entrySet()) {
      String start=part1 + ";" + part2+ ";"+ entry.getKey();
      String spaces=StringUtils.repeat(" ",82 - start.length());
      System.out.println("=> " + start + spaces+ "    # "+ entry.getValue().getSummary());
    }
  }
 else {
    System.out.println("No good result found for " + part1 + "/"+ part2);
  }
}
