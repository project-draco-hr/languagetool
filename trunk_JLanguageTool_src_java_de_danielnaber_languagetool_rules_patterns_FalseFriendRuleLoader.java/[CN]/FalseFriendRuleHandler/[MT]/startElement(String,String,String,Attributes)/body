{
  if (qName.equals("rule")) {
    translations=new ArrayList<StringBuilder>();
    id=attrs.getValue("id");
    if (!(inRuleGroup && defaultOff)) {
      defaultOff="off".equals(attrs.getValue("default"));
    }
    if (inRuleGroup && id == null) {
      id=ruleGroupId;
    }
    correctExamples=new ArrayList<String>();
    incorrectExamples=new ArrayList<IncorrectExample>();
  }
 else   if (qName.equals("pattern")) {
    inPattern=true;
    final String languageStr=attrs.getValue("lang");
    language=Language.getLanguageForShortName(languageStr);
    if (language == null) {
      throw new SAXException("Unknown language '" + languageStr + "'");
    }
  }
 else   if (qName.equals("exception")) {
    inException=true;
    exceptions=new StringBuilder();
    if (attrs.getValue("negate") != null) {
      exceptionStringNegation=attrs.getValue("negate").equals("yes");
    }
    if (attrs.getValue("scope") != null) {
      exceptionValidNext=attrs.getValue("scope").equals("next");
      exceptionValidPrev=attrs.getValue("scope").equals("previous");
    }
    if (attrs.getValue("inflected") != null) {
      exceptionStringInflected=attrs.getValue("inflected").equals("yes");
    }
    if (attrs.getValue("postag") != null) {
      exceptionPosToken=attrs.getValue("postag");
      if (attrs.getValue("postag_regexp") != null) {
        exceptionPosRegExp=attrs.getValue("postag_regexp").equals("yes");
      }
      if (attrs.getValue("negate_pos") != null) {
        exceptionPosNegation=attrs.getValue("negate_pos").equals("yes");
      }
    }
    if (attrs.getValue("regexp") != null) {
      exceptionStringRegExp=attrs.getValue("regexp").equals("yes");
    }
  }
 else   if (qName.equals("token")) {
    inToken=true;
    if (attrs.getValue("negate") != null) {
      tokenNegated=attrs.getValue("negate").equals("yes");
    }
    if (attrs.getValue("inflected") != null) {
      tokenInflected=attrs.getValue("inflected").equals("yes");
    }
    if (attrs.getValue("skip") != null) {
      skipPos=Integer.parseInt(attrs.getValue("skip"));
    }
    elements=new StringBuilder();
    if (elementList == null) {
      elementList=new ArrayList<Element>();
    }
    if (attrs.getValue("postag") != null) {
      posToken=attrs.getValue("postag");
      if (attrs.getValue("postag_regexp") != null) {
        regular=attrs.getValue("postag_regexp").equals("yes");
      }
      if (attrs.getValue("negate_pos") != null) {
        posNegation=attrs.getValue("negate_pos").equals("yes");
      }
      if (elementList == null) {
        elementList=new ArrayList<Element>();
      }
    }
    if (attrs.getValue("regexp") != null) {
      regExpression=attrs.getValue("regexp").equals("yes");
    }
  }
 else   if (qName.equals("translation")) {
    inTranslation=true;
    final String languageStr=attrs.getValue("lang");
    final Language tmpLang=Language.getLanguageForShortName(languageStr);
    currentTranslationLanguage=tmpLang;
    if (tmpLang == motherTongue) {
      translationLanguage=tmpLang;
      if (translationLanguage == null) {
        throw new SAXException("Unknown language '" + languageStr + "'");
      }
    }
  }
 else   if (qName.equals("example") && attrs.getValue("type").equals("correct")) {
    inCorrectExample=true;
    correctExample=new StringBuilder();
  }
 else   if (qName.equals("example") && attrs.getValue("type").equals("incorrect")) {
    inIncorrectExample=true;
    incorrectExample=new StringBuilder();
  }
 else   if (qName.equals("message")) {
    inMessage=true;
    message=new StringBuilder();
  }
 else   if (qName.equals("rulegroup")) {
    ruleGroupId=attrs.getValue("id");
    inRuleGroup=true;
    defaultOff="off".equals(attrs.getValue("default"));
  }
}
