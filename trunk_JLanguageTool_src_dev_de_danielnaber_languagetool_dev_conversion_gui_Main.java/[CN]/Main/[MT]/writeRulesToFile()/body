{
  if (ruleStrings == null) {
    return;
  }
  boolean writeCovered=writeCoveredRules.isSelected();
  int numReg=0;
  int numDis=0;
  StringBuilder regWriteString=new StringBuilder();
  StringBuilder disWriteString=new StringBuilder();
  regWriteString.append("<category name=\"Auto-generated rules " + new File(filename).getName() + "\">\n");
  disWriteString.append("<category name=\"Auto-generated rules " + new File(filename).getName() + "\">\n");
  if (anyRegularRules()) {
    for (int i=0; i < ruleStrings.size(); i++) {
      if (!disambigRuleIndices[i] && (writeCovered || (!writeCovered && coveredByList.get(i).length == 0))) {
        regWriteString.append(ruleStrings.get(i));
        numReg++;
      }
    }
  }
  if (anyDisambiguationRules()) {
    for (int i=0; i < ruleStrings.size(); i++) {
      if (disambigRuleIndices[i]) {
        disWriteString.append(ruleStrings.get(i));
        numDis++;
      }
    }
  }
  regWriteString.append("</category>");
  disWriteString.append("</category>");
  String disString=disWriteString.toString();
  String regString=regWriteString.toString();
  if (editBeforeWriting.isSelected()) {
    writeWithEditing(disString,regString,numDis,numReg);
  }
 else {
    writeWithoutEditing(disString,regString,numDis,numReg);
  }
}
