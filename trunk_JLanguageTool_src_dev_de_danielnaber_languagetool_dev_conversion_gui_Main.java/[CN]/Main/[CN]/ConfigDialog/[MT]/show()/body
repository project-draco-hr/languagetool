{
  dialog=new JDialog(owner,true);
  dialog.setTitle("Rule Converter Options");
  final KeyStroke escStroke=KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0);
  final ActionListener actionListener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      dialog.setVisible(false);
    }
  }
;
  final JRootPane rootPane=dialog.getRootPane();
  rootPane.registerKeyboardAction(actionListener,escStroke,JComponent.WHEN_IN_FOCUSED_WINDOW);
  final KeyStroke enterStroke=KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,KeyEvent.CTRL_MASK);
  final ActionListener actionListener2=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      okButton.doClick();
    }
  }
;
  rootPane.registerKeyboardAction(actionListener2,enterStroke,JComponent.WHEN_IN_FOCUSED_WINDOW);
  ruleFilePane=new JTextPane();
  ruleFilePane.setText(new File(getCurrentFilename()).getAbsolutePath());
  final JLabel rfpLabel=new JLabel("Current rule file:");
  changeRuleFile=new JButton("Browse");
  changeRuleFile.addActionListener(this);
  optionsRuleType=new JComboBox();
  optionsRuleType.addItem(cgString);
  optionsRuleType.addItem(atdString);
  optionsRuleType.setSelectedItem(ruleType.getSelectedItem());
  optionsRuleType.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent arg0){
      populateSpecificRuleType();
    }
  }
);
  final JLabel ortLabel=new JLabel("Current rule type:");
  specificRuleTypeBox=new JComboBox();
  populateSpecificRuleType();
  try {
    specificRuleTypeBox.setSelectedItem(specificFileType);
  }
 catch (  Exception e) {
  }
  final JLabel srtLabel=new JLabel("Specific rule type");
  outFilePane=new JTextPane();
  outFilePane.setText(new File(outfilename).getAbsolutePath());
  final JLabel ofpLabel=new JLabel("Current output grammar file:");
  disambigOutFilePane=new JTextPane();
  disambigOutFilePane.setText(new File(disambigOutFile).getAbsolutePath());
  final JLabel dofpLabel=new JLabel("Current disambiguation file:");
  tieFilenamesButton=new JButton("Tie output filenames to input files");
  tieFilenamesButton.setMnemonic('t');
  tieFilenamesButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (e.getSource() == tieFilenamesButton) {
        String fn=ruleFilePane.getText();
        outfilename=fn + ".grammar.xml";
        disambigOutFile=fn + ".disambig.xml";
        outFilePane.setText(outfilename);
        disambigOutFilePane.setText(disambigOutFile);
      }
    }
  }
);
  okButton=new JButton("OK");
  okButton.addActionListener(this);
  okButton.setMnemonic('o');
  cancelButton=new JButton("Cancel");
  cancelButton.addActionListener(this);
  final Container contentPane=dialog.getContentPane();
  GridBagLayout layout=new GridBagLayout();
  layout.rowWeights=new double[]{10f,10f,10f,10f,10f,10f,10f};
  layout.rowHeights=new int[]{110,90,90,110,110,110,110};
  contentPane.setLayout(layout);
  GridBagConstraints cons=new GridBagConstraints();
  cons.fill=GridBagConstraints.BOTH;
  cons.gridx=0;
  cons.gridy=0;
  cons.anchor=GridBagConstraints.EAST;
  contentPane.add(rfpLabel,cons);
  cons.gridx=1;
  cons.gridy=0;
  cons.anchor=GridBagConstraints.WEST;
  contentPane.add(ruleFilePane,cons);
  cons.gridx=2;
  cons.gridy=0;
  cons.anchor=GridBagConstraints.CENTER;
  contentPane.add(changeRuleFile,cons);
  cons.gridx=0;
  cons.gridy=1;
  cons.anchor=GridBagConstraints.EAST;
  contentPane.add(ortLabel,cons);
  cons.gridx=1;
  cons.gridy=1;
  cons.anchor=GridBagConstraints.WEST;
  contentPane.add(optionsRuleType,cons);
  cons.gridx=0;
  cons.gridy=2;
  cons.anchor=GridBagConstraints.EAST;
  contentPane.add(srtLabel,cons);
  cons.gridx=1;
  cons.gridy=2;
  cons.anchor=GridBagConstraints.WEST;
  contentPane.add(specificRuleTypeBox,cons);
  cons.gridx=0;
  cons.gridy=3;
  cons.anchor=GridBagConstraints.EAST;
  contentPane.add(ofpLabel,cons);
  cons.gridx=1;
  cons.gridy=3;
  cons.gridwidth=2;
  cons.anchor=GridBagConstraints.WEST;
  contentPane.add(outFilePane,cons);
  cons.gridx=0;
  cons.gridy=4;
  cons.gridwidth=2;
  cons.anchor=GridBagConstraints.EAST;
  contentPane.add(dofpLabel,cons);
  cons.gridx=1;
  cons.gridy=4;
  cons.gridwidth=2;
  cons.anchor=GridBagConstraints.WEST;
  contentPane.add(disambigOutFilePane,cons);
  cons.gridx=0;
  cons.gridy=5;
  cons.gridwidth=2;
  contentPane.add(tieFilenamesButton,cons);
  JPanel panel=new JPanel();
  panel.setLayout(new GridBagLayout());
  GridBagConstraints panelCons=new GridBagConstraints();
  panelCons.gridx=0;
  panelCons.gridy=0;
  panelCons.anchor=GridBagConstraints.SOUTHWEST;
  panel.add(cancelButton,panelCons);
  panelCons.gridx=1;
  panelCons.anchor=GridBagConstraints.SOUTHEAST;
  panel.add(okButton,panelCons);
  cons.gridx=0;
  cons.gridy=6;
  cons.gridwidth=3;
  cons.ipady=300;
  contentPane.add(panel,cons);
  dialog.pack();
  dialog.setSize(500,500);
  final Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
  final Dimension frameSize=dialog.getSize();
  dialog.setLocation(screenSize.width / 2 - frameSize.width / 2,screenSize.height / 2 - frameSize.height / 2);
  dialog.setVisible(true);
}
