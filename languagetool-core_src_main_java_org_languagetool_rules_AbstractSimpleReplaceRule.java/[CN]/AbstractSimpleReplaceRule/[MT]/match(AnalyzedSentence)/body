{
  List<RuleMatch> ruleMatches=new ArrayList<RuleMatch>();
  AnalyzedTokenReadings[] tokens=text.getTokensWithoutWhitespace();
  List<String> replacements=new ArrayList<String>();
  for (  AnalyzedTokenReadings tokenReadings : tokens) {
    String originalTokenStr=tokenReadings.getToken();
    String tokenString=cleanup(originalTokenStr);
    if (!wrongWords.containsKey(tokenString)) {
      for (      AnalyzedToken analyzedToken : tokenReadings.getReadings()) {
        String lemma=analyzedToken.getLemma();
        if (lemma != null) {
          lemma=cleanup(lemma);
          if (wrongWords.containsKey(lemma)) {
            tokenString=lemma;
            break;
          }
        }
      }
    }
    List<String> possibleReplacements=wrongWords.get(tokenString);
    if (possibleReplacements != null && possibleReplacements.size() > 0) {
      replacements.clear();
      replacements.addAll(possibleReplacements);
      if (replacements.contains(originalTokenStr)) {
        replacements.remove(originalTokenStr);
      }
      if (replacements.size() > 0) {
        RuleMatch potentialRuleMatch=createRuleMatch(tokenReadings,replacements);
        ruleMatches.add(potentialRuleMatch);
      }
    }
  }
  return toRuleMatchArray(ruleMatches);
}
