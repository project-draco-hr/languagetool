{
  if (bitextMode) {
    final TabBitextReader reader=new TabBitextReader(filename,encoding);
    if (options.isApplySuggestions()) {
      CommandLineTools.correctBitext(reader,srcLt,lt,bRules);
    }
 else {
      CommandLineTools.checkBitext(reader,srcLt,lt,bRules,options.isApiFormat());
    }
  }
 else {
    final String text=getFilteredText(filename,encoding,xmlFiltering);
    if (isStdIn(filename)) {
      System.err.println("Working on STDIN...");
    }
 else {
      System.err.println("Working on " + filename + "...");
    }
    if (options.isAutoDetect()) {
      Language language=detectLanguageOfString(text);
      if (language == null) {
        System.err.println("Could not detect language well enough, using English");
        language=new English();
      }
      changeLanguage(language,options.getMotherTongue(),options.getDisabledRules(),options.getEnabledRules());
      System.err.println("Using " + language.getName() + " for file "+ filename);
    }
    if (options.isApplySuggestions()) {
      System.out.print(Tools.correctText(text,lt));
    }
 else     if (profileRules) {
      CommandLineTools.profileRulesOnText(text,lt);
    }
 else     if (!options.isTaggerOnly()) {
      CommandLineTools.checkText(text,lt,options.isApiFormat(),0,options.isListUnknown());
    }
 else {
      CommandLineTools.tagText(text,lt);
    }
    if (options.isListUnknown() && !options.isApiFormat()) {
      System.out.println("Unknown words: " + lt.getUnknownWords());
    }
  }
}
