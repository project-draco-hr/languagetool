{
  bitextMode=true;
  final Language target=lt.getLanguage();
  lt=new MultiThreadedJLanguageTool(target,null);
  srcLt=new MultiThreadedJLanguageTool(sourceLang);
  lt.activateDefaultPatternRules();
  Tools.selectRules(lt,disabledRules,enabledRules);
  Tools.selectRules(srcLt,disabledRules,enabledRules);
  bRules=Tools.getBitextRules(sourceLang,lt.getLanguage());
  List<BitextRule> bRuleList=new ArrayList<>(bRules);
  for (  final BitextRule bitextRule : bRules) {
    for (    final String disabledRule : disabledRules) {
      if (bitextRule.getId().equals(disabledRule)) {
        bRuleList.remove(bitextRule);
      }
    }
  }
  bRules=bRuleList;
  if (enabledRules.length > 0) {
    bRuleList=new ArrayList<>();
    for (    final String enabledRule : enabledRules) {
      for (      final BitextRule bitextRule : bRules) {
        if (bitextRule.getId().equals(enabledRule)) {
          bRuleList.add(bitextRule);
        }
      }
    }
    bRules=bRuleList;
  }
}
