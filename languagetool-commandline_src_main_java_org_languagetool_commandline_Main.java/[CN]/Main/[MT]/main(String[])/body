{
  JnaTools.setBugWorkaroundProperty();
  final CommandLineParser commandLineParser=new CommandLineParser();
  CommandLineOptions options=null;
  try {
    options=commandLineParser.parseOptions(args);
  }
 catch (  WrongParameterNumberException e) {
    commandLineParser.printUsage();
    System.exit(1);
  }
catch (  IllegalArgumentException e) {
    System.err.println(e.toString());
    System.exit(1);
  }
catch (  UnknownParameterException e) {
    if (e.getMessage() != null) {
      System.err.println(e.getMessage());
    }
 else {
      System.err.println(e.toString());
    }
    commandLineParser.printUsage(System.err);
    System.exit(1);
  }
  if (options.isPrintUsage()) {
    commandLineParser.printUsage();
    System.exit(1);
  }
  if (options.isPrintVersion()) {
    System.out.println("LanguageTool version " + JLanguageTool.VERSION + " ("+ JLanguageTool.BUILD_DATE+ ")");
    System.exit(0);
  }
  if (options.isPrintLanguages()) {
    printLanguages();
    System.exit(0);
  }
  if (options.getFilename() == null) {
    options.setFilename("-");
  }
  String languageHint=null;
  if (options.getLanguage() == null) {
    if (!options.isApiFormat() && !options.isAutoDetect()) {
      System.err.println("No language specified, using English (no spell checking active, " + "specify a language variant like 'en-GB' if available)");
    }
    options.setLanguage(new English());
  }
 else   if (!options.isApiFormat() && !options.isApplySuggestions()) {
    languageHint="Expected text language: " + options.getLanguage().getName();
  }
  options.getLanguage().getSentenceTokenizer().setSingleLineBreaksMarksParagraph(options.isSingleLineBreakMarksParagraph());
  final Main prg=new Main(options);
  if (options.getFalseFriendFile() != null) {
    List<AbstractPatternRule> ffRules=prg.lt.loadFalseFriendRules(options.getFalseFriendFile());
    for (    AbstractPatternRule ffRule : ffRules) {
      prg.lt.addRule(ffRule);
    }
  }
  if (prg.lt.getAllActiveRules().size() == 0) {
    throw new RuntimeException("WARNING: No rules are active. Please make sure your rule ids are correct: " + options.getEnabledRules());
  }
  if (languageHint != null) {
    String spellHint=prg.isSpellCheckingActive() ? "" : " (no spell checking active, specify a language variant like 'en-GB' if available)";
    System.err.println(languageHint + spellHint);
  }
  prg.setListUnknownWords(options.isListUnknown());
  if (options.isProfile()) {
    prg.setProfilingMode();
  }
  if (options.isBitext()) {
    if (options.getMotherTongue() == null) {
      throw new IllegalArgumentException("You have to set the source language (as mother tongue) in bitext mode");
    }
    File bitextRuleFile=options.getBitextRuleFile() != null ? new File(options.getBitextRuleFile()) : null;
    prg.setBitextMode(options.getMotherTongue(),options.getDisabledRules(),options.getEnabledRules(),bitextRuleFile);
  }
  if (options.isRecursive()) {
    prg.runRecursive(options.getFilename(),options.getEncoding(),options.isXmlFiltering());
  }
 else {
    if (options.isLineByLine()) {
      prg.runOnFileLineByLine(options.getFilename(),options.getEncoding());
    }
 else {
      prg.runOnFile(options.getFilename(),options.getEncoding(),options.isXmlFiltering());
    }
  }
  prg.cleanUp();
}
