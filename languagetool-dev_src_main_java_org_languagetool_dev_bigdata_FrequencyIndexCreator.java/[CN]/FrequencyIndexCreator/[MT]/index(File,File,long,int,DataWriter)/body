{
  System.out.println(file);
  String name=file.getName();
  if (IGNORE_POS && name.matches(".*_[A-Z]+_.*")) {
    System.out.println("Skipping POS tag file " + name);
    return;
  }
  File indexDir;
  boolean hiveMode;
  if (name.matches(NAME_REGEX1)) {
    indexDir=new File(indexBaseDir,name.replaceAll(NAME_REGEX1,"$1"));
    hiveMode=false;
    System.out.println("Running in corpus mode (i.e. aggregation of years)");
  }
 else   if (name.matches(NAME_REGEX2)) {
    indexDir=new File(indexBaseDir,name.replaceAll(NAME_REGEX2,"$1"));
    hiveMode=true;
    System.out.println("Running in Hive mode (i.e. no aggregation of years)");
  }
 else   if (name.matches(NAME_REGEX3) && file.isDirectory()) {
    file=new File(file,file.getName() + "-output.csv.gz");
    indexDir=new File(indexBaseDir,name.replaceAll(NAME_REGEX1,"$1"));
    hiveMode=true;
    System.out.println("Running in Hive/Text mode (i.e. no aggregation of years)");
  }
 else {
    System.out.println("Skipping " + name + " - doesn't match regex "+ NAME_REGEX1+ ", "+ NAME_REGEX2+ ", or "+ NAME_REGEX3);
    return;
  }
  if (indexDir.exists() && indexDir.isDirectory()) {
    if (isIndexComplete(indexDir)) {
      System.out.println("Skipping " + name + " - index dir '"+ indexDir+ "' already exists and is complete");
      bytesProcessed.addAndGet(file.length());
      return;
    }
 else {
      System.out.println("Not skipping " + name + " - index dir '"+ indexDir+ "' already exists but is not complete");
    }
  }
  System.out.println("Index dir: " + indexDir + " - "+ (++inputFileCount)+ " of "+ inputFiles);
  try {
    if (mode == Mode.PlainText) {
      if (globalDataWriter != null) {
        indexLinesFromGoogleFile(globalDataWriter,file,totalBytes,hiveMode);
      }
 else {
        try (DataWriter dw=new TextDataWriter(indexDir)){
          indexLinesFromGoogleFile(dw,file,totalBytes,hiveMode);
        }
         markIndexAsComplete(indexDir);
      }
    }
 else {
      if (globalDataWriter != null) {
        indexLinesFromGoogleFile(globalDataWriter,file,totalBytes,hiveMode);
      }
 else {
        try (DataWriter dw=new LuceneDataWriter(indexDir)){
          indexLinesFromGoogleFile(dw,file,totalBytes,hiveMode);
        }
         markIndexAsComplete(indexDir);
      }
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Could not index " + file,e);
  }
  bytesProcessed.addAndGet(file.length());
}
