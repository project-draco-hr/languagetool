{
  if (throwExceptionOnUnsupportedElement) {
    checkUnsupportedElement(element,position);
  }
  final List<SpanQuery> queries=new ArrayList<SpanQuery>();
  SpanQuery termQuery=null;
  final String str=element.getString();
  if (str != null && !str.isEmpty()) {
    if (element.isRegularExpression()) {
      termQuery=getWrappedRegexQuery(element,str);
    }
 else {
      if (element.getCaseSensitive()) {
        termQuery=new SpanTermQuery(new Term(FIELD_NAME,str));
      }
 else {
        termQuery=new SpanTermQuery(new Term(FIELD_NAME_LOWERCASE,str.toLowerCase()));
      }
    }
    queries.add(termQuery);
  }
  SpanQuery posQuery=null;
  final String pos=element.getPOStag();
  if (pos != null) {
    if (element.isPOStagRegularExpression()) {
      posQuery=getWrappedRegexQuery(element,POS_PREFIX + "(" + pos+ ")");
    }
 else {
      if (element.getCaseSensitive()) {
        posQuery=new SpanTermQuery(new Term(FIELD_NAME,POS_PREFIX + pos));
      }
 else {
        posQuery=new SpanTermQuery(new Term(FIELD_NAME_LOWERCASE,POS_PREFIX.toLowerCase() + pos.toLowerCase()));
      }
    }
    queries.add(posQuery);
  }
  if (termQuery == null && posQuery == null) {
    if (str != null && str.isEmpty() && pos == null) {
      return getMatchAllQuery(element);
    }
 else     if (throwExceptionOnUnsupportedElement) {
      throw new UnsupportedPatternRuleException("Internal error: both term and POS query are null for element '" + element + "'");
    }
    return getMatchAllQuery(element);
  }
  if (queries.size() > 1) {
    return new SpanNearQuery(queries.toArray(new SpanQuery[queries.size()]),0,false);
  }
 else {
    return queries.get(0);
  }
}
