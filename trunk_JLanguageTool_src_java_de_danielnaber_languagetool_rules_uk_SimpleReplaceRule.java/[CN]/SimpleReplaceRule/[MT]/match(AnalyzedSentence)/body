{
  List<RuleMatch> ruleMatches=new ArrayList<RuleMatch>();
  AnalyzedTokenReadings[] tokens=text.getTokens();
  int pos=0;
  for (int i=0; i < tokens.length; i++) {
    String token=tokens[i].getToken();
    if (token.trim().equals("")) {
    }
 else {
      String origToken=token;
      if (wrongWords.containsKey(token)) {
        String replacement=wrongWords.get(token);
        String msg=token + " is not valid, use " + replacement;
        RuleMatch potentialRuleMatch=new RuleMatch(this,pos,pos + origToken.length(),msg);
        potentialRuleMatch.setSuggestedReplacement(replacement);
        ruleMatches.add(potentialRuleMatch);
      }
    }
    pos+=tokens[i].getToken().length();
  }
  return toRuleMatchArray(ruleMatches);
}
