{
  Map<String,List<ConfusionSet>> map=new HashMap<>();
  try (InputStreamReader reader=new InputStreamReader(stream,CHARSET);BufferedReader br=new BufferedReader(reader)){
    String line;
    while ((line=br.readLine()) != null) {
      if (line.startsWith("#") || line.trim().isEmpty()) {
        continue;
      }
      String[] parts=line.replaceFirst("\\s*#.*","").split(";\\s*");
      if (parts.length != 3) {
        throw new RuntimeException("Unexpected format: '" + line + "' - expected three semicolon-separated values: word1; word2; factor");
      }
      List<ConfusionString> confusionStrings=new ArrayList<>();
      for (      String part : Arrays.asList(parts).subList(0,parts.length - 1)) {
        String[] subParts=part.split("\\|");
        String word=subParts[0];
        String description=subParts.length == 2 ? subParts[1] : null;
        confusionStrings.add(new ConfusionString(word,description));
      }
      ConfusionSet confusionSet=new ConfusionSet(Integer.parseInt(parts[parts.length - 1]),confusionStrings);
      for (      ConfusionString confusionString : confusionStrings) {
        String key=confusionString.getString();
        List<ConfusionSet> existingEntry=map.get(key);
        if (existingEntry != null) {
          existingEntry.add(confusionSet);
        }
 else {
          List<ConfusionSet> sets=new ArrayList<>();
          sets.add(confusionSet);
          map.put(key,sets);
        }
      }
    }
  }
   return map;
}
