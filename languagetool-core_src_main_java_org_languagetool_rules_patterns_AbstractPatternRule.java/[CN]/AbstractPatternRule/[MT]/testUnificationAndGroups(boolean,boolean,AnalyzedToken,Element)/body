{
  boolean thisMatched=matched;
  final boolean elemIsMatched=elem.isMatched(matchToken);
  if (testUnification) {
    if (matched && elem.isUnified()) {
      if (elem.isUniNegated()) {
        thisMatched=!(thisMatched && unifier.isUnified(matchToken,elem.getUniFeatures(),lastReading,elemIsMatched));
      }
 else {
        if (elem.isLastInUnification()) {
          thisMatched=thisMatched && unifier.isUnified(matchToken,elem.getUniFeatures(),lastReading,elemIsMatched);
        }
 else {
          unifier.isUnified(matchToken,elem.getUniFeatures(),lastReading,elemIsMatched);
        }
      }
    }
    if (thisMatched && getUnified) {
      unifiedTokens=unifier.getFinalUnified();
    }
    if (!elem.isUnified()) {
      unifier.reset();
    }
  }
  elem.addMemberAndGroup(matchToken);
  if (lastReading) {
    thisMatched&=elem.checkAndGroup(thisMatched);
  }
  return thisMatched;
}
