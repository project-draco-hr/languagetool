{
  this.id=Objects.requireNonNull(id,"id cannot be null");
  this.description=Objects.requireNonNull(description,"description cannot be null");
  this.patternElements=new ArrayList<>(Objects.requireNonNull(elements,"elements cannot be null"));
  this.language=Objects.requireNonNull(language,"language cannot be null");
  this.getUnified=getUnified;
  testUnification=initUnifier();
  sentStart=patternElements.size() > 0 && patternElements.get(0).isSentStart();
  if (!testUnification) {
    for (    Element elem : patternElements) {
      if (elem.hasAndGroup()) {
        groupsOrUnification=true;
        break;
      }
    }
  }
 else {
    groupsOrUnification=true;
  }
}
