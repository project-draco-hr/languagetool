{
  ChineseWordTokenizer wordTokenizer=new ChineseWordTokenizer();
  List<String> tokens=wordTokenizer.tokenize("????????????????????????????????????");
  assertEquals(tokens.size(),7);
  assertEquals("[??????/n, ??????/vd, ??????/v, ??????/a, ???/u, ??????/n, ???/w]",tokens.toString());
  List<String> tokens2=wordTokenizer.tokenize("????????????????????????????????????");
  assertEquals(tokens2.size(),10);
  assertEquals("[???/r, ??????/s, ???/v, ???/u, ???/m, ???/q, ??????/z, ???/u, ???/n, ???/w]",tokens2.toString());
  List<String> tokens3=wordTokenizer.tokenize("?????????????????????????????????????????????");
  assertEquals(tokens3.size(),11);
  assertEquals("[???/w, ???/x, ???/x, ???/w, ???/u, ??????/vn, ??????/n, ???/v, ??????/r, ??????/an, ???/w]",tokens3.toString());
  List<String> tokens4=wordTokenizer.tokenize("????????????????????????????????????????????????");
  assertEquals(tokens4.size(),11);
  assertEquals("[??????/r, ???/u, ???/b, ??????/n, ???/d, ???/v, ???/ng, ???/ng, ???/n, ????????????/l, ???/w]",tokens4.toString());
  List<String> tokens5=wordTokenizer.tokenize("???????????????????????????????????????????????????????????????");
  assertEquals(tokens5.size(),12);
  assertEquals("[?????????/nt, ???/w, ???/h, ??????/n, ??????/vn, ??????/n, ??????/v, ??????/ad, ??????/v, ???/u, ??????/n, ???/w]",tokens5.toString());
  List<String> tokens6=wordTokenizer.tokenize("???????????????????????????????????????????????????????????????");
  assertEquals(tokens6.size(),13);
  assertEquals("[???/w, ???/y, ???/w, ???/w, ???/w, ??????/ns, ?????????/j, ??????/n, ???/f, ???/u, ??????/n, ????????????/i, ???/w]",tokens6.toString());
  List<String> tokens7=wordTokenizer.tokenize("?????????????????????????????????????????????????????????????????????????????????");
  assertEquals(tokens7.size(),19);
  assertEquals("[???/p, ??????/a, ???/u, ??????/t, ???/f, ???/w, ???/r, ???/c, ??????/r, ??????/n, ???/k, ??????/v, ???/u, ???/n, ??????/n, ???/u, ??????/m, ??????/n, ???/w]",tokens7.toString());
  List<String> tokens8=wordTokenizer.tokenize("???????????????????????????ThinkPad T?????????????????????????????????????????????");
  assertEquals(tokens8.size(),20);
  assertEquals("[???/w, ??????/o, ???/w, ???/w, ???/m, ???/q, ??????/nz, ThinkPad/nx, , T/nx, ??????/q, ??????/n, ???/p, ??????/nr, ???/u, ??????/n, ???/v, ???/u, ??????/v, ???/w]",tokens8.toString());
}
