{
  final List<AnalyzedTokenReadings> tokenReadings=new ArrayList<>();
  int pos=0;
  final IStemmer morfologik=new DictionaryLookup(getDictionary());
  if (manualTagger == null && plaintextDictPath != null) {
    manualTagger=new ManualTagger(JLanguageTool.getDataBroker().getFromResourceDirAsStream(plaintextDictPath));
  }
  for (  final String word : sentenceTokens) {
    final List<AnalyzedToken> l=new ArrayList<>();
    final String lowerCaseWord=word.toLowerCase(RO_LOCALE);
    final List<WordData> taggerTokens=morfologik.lookup(lowerCaseWord);
    if (taggerTokens != null) {
      for (      WordData wd : taggerTokens) {
        final String[] tagsArr=wd.getStem().toString().split("\\+");
        for (        final String currTag : tagsArr) {
          l.add(new AnalyzedToken(word,wd.getTag().toString(),currTag));
        }
      }
    }
    if (manualTagger != null) {
      final List<TaggedWord> manualTags=manualTagger.tag(lowerCaseWord);
      for (      TaggedWord manualTag : manualTags) {
        l.add(new AnalyzedToken(word,manualTag.getPosTag(),manualTag.getLemma()));
      }
    }
    if (l.isEmpty()) {
      l.add(new AnalyzedToken(word,null,null));
    }
    tokenReadings.add(new AnalyzedTokenReadings(l,pos));
    pos+=word.length();
  }
  return tokenReadings;
}
