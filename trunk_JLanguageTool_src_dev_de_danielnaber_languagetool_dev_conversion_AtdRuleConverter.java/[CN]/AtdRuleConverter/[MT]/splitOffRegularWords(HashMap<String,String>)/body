{
  List<HashMap<String,String>> rulesList=new ArrayList<HashMap<String,String>>();
  String pattern=rule.get("pattern");
  String[] splitPattern=pattern.split("\\ +");
  String regularPattern="";
  String apostrophedPattern="";
  for (  String sp : splitPattern) {
    if (sp.contains("|") && sp.contains("'")) {
      List<String> apostrophedWords=new ArrayList<String>();
      List<String> regularWords=new ArrayList<String>();
      String[] temp=sp.split("\\|");
      for (      String sTemp : temp) {
        if (sTemp.contains("'")) {
          apostrophedWords.add(sTemp);
        }
 else {
          regularWords.add(sTemp);
        }
      }
      for (int i=0; i < regularWords.size() - 1; i++) {
        regularPattern=regularPattern + regularWords.get(i) + "|";
      }
      regularPattern=regularPattern + regularWords.get(regularWords.size() - 1);
      for (int i=0; i < apostrophedWords.size() - 1; i++) {
        apostrophedPattern=apostrophedPattern + apostrophedWords.get(i) + "|";
      }
      apostrophedPattern=apostrophedPattern + apostrophedWords.get(apostrophedWords.size() - 1);
      regularPattern=regularPattern + " ";
      apostrophedPattern=apostrophedPattern + " ";
    }
 else {
      regularPattern=regularPattern + sp + " ";
      apostrophedPattern=apostrophedPattern + sp + " ";
    }
  }
  regularPattern=regularPattern.trim();
  apostrophedPattern=apostrophedPattern.trim();
  HashMap<String,String> regularRule=new HashMap<String,String>();
  HashMap<String,String> apostrophedRule=new HashMap<String,String>();
  for (  String key : rule.keySet()) {
    regularRule.put(key,rule.get(key));
    apostrophedRule.put(key,rule.get(key));
  }
  regularRule.put("pattern",regularPattern);
  apostrophedRule.put("pattern",apostrophedPattern);
  rulesList.add(regularRule);
  rulesList.add(apostrophedRule);
  return rulesList;
}
