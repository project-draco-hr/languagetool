{
  Match match=getMatch("POS1","POS2",true);
  match.setSynthesizer(Language.POLISH.getSynthesizer());
  match.setToken(getAnalyzedTokenReadings("inflectedform11","POS1","Lemma1"));
  assertEquals("[]",Arrays.toString(match.toFinalString(Language.POLISH)));
  match=getMatch("POS1","POS2",false);
  match.setSynthesizer(Language.POLISH.getSynthesizer());
  match.setToken(getAnalyzedTokenReadings("inflectedform11","POS1","Lemma1"));
  assertEquals("[(inflectedform11)]",Arrays.toString(match.toFinalString(Language.POLISH)));
  match=getMatch("subst:sg:acc.nom:m3","subst:sg:gen:m3",true);
  match.setSynthesizer(Language.POLISH.getSynthesizer());
  match.setToken(getAnalyzedTokenReadings("AON","subst:sg:acc.nom:m3","AON"));
  assertEquals("[AON-u]",Arrays.toString(match.toFinalString(Language.POLISH)));
  match=getTextMatch("^(.*)$","$0-u",true);
  match.setSynthesizer(Language.POLISH.getSynthesizer());
  match.setLemmaString("AON");
  assertEquals("[AON-u]",Arrays.toString(match.toFinalString(Language.POLISH)));
  match.setLemmaString("batalion");
  assertEquals("[]",Arrays.toString(match.toFinalString(Language.POLISH)));
  match.setLemmaString("ASEAN");
  assertEquals("[ASEAN-u]",Arrays.toString(match.toFinalString(Language.POLISH)));
}
