{
  final Map<String,AbstractPatternRule> complexRules=new HashMap<>();
  for (  final AbstractPatternRule rule : rules) {
    testCorrectSentences(languageTool,allRulesLanguageTool,lang,rule);
    testBadSentences(languageTool,allRulesLanguageTool,lang,complexRules,rule);
  }
  if (!complexRules.isEmpty()) {
    final Set<String> set=complexRules.keySet();
    final List<AbstractPatternRule> badRules=new ArrayList<>();
    for (    String aSet : set) {
      final AbstractPatternRule badRule=complexRules.get(aSet);
      if (badRule != null && badRule instanceof PatternRule) {
        ((PatternRule)badRule).notComplexPhrase();
        badRule.setMessage("The rule contains a phrase that never matched any incorrect example.");
        badRules.add(badRule);
      }
    }
    if (!badRules.isEmpty()) {
      testGrammarRulesFromXML(badRules,languageTool,allRulesLanguageTool,lang);
    }
  }
}
