{
  final CommandLineParser commandLineParser=new CommandLineParser();
  CommandLineOptions options=null;
  try {
    options=commandLineParser.parseOptions(args);
  }
 catch (  IllegalArgumentException e) {
    System.out.println("Usage: java org.languagetool.Main " + "[-r|--recursive] [-v|--verbose] [-l|--language LANG] [-m|--mothertongue LANG] [-d|--disable RULES] [-adl|--autoDetect] " + "[-e|--enable RULES] [-c|--encoding] [-u|--list-unknown] [-t|--taggeronly] [-b] [--api] [-a|--apply] "+ "[-b2|--bitext] <file>");
    System.exit(1);
  }
  if (options.getFilename() == null) {
    options.setFilename("-");
  }
  if (options.getLanguage() == null) {
    if (!options.isApiFormat() && !options.isAutoDetect()) {
      System.err.println("No language specified, using English");
    }
    options.setLanguage(Language.ENGLISH);
  }
 else   if (!options.isApiFormat() && !options.isApplySuggestions()) {
    System.out.println("Expected text language: " + options.getLanguage().getName());
  }
  options.getLanguage().getSentenceTokenizer().setSingleLineBreaksMarksParagraph(options.isSingleLineBreakMarksParagraph());
  final Main prg=new Main(options.isVerbose(),options.isTaggerOnly(),options.getLanguage(),options.getMotherTongue(),options.getDisabledRules(),options.getEnabledRules(),options.isApiFormat(),options.isApplySuggestions(),options.isAutoDetect(),options.isSingleLineBreakMarksParagraph());
  prg.setListUnknownWords(options.isListUnknown());
  if (options.isProfile()) {
    prg.setProfilingMode();
  }
  if (options.isBitext()) {
    if (options.getMotherTongue() == null) {
      throw new IllegalArgumentException("You have to set the source language (as mother tongue) in bitext mode.");
    }
    prg.setBitextMode(options.getMotherTongue(),options.getDisabledRules(),options.getEnabledRules());
  }
  if (options.isRecursive()) {
    prg.runRecursive(options.getFilename(),options.getEncoding(),options.isListUnknown());
  }
 else {
    prg.runOnFile(options.getFilename(),options.getEncoding(),options.isListUnknown());
  }
}
