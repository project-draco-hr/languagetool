{
  String agreedPosTag=null;
  if (leftMasterSet.contains(leftLemma)) {
    if (leftPosTag.contains(TAG_ANIM)) {
      rightPosTag=rightPosTag.replace(TAG_INANIM,TAG_ANIM);
    }
 else {
      rightPosTag=rightPosTag.replace(TAG_ANIM,TAG_INANIM);
    }
    agreedPosTag=getAgreedPosTag(leftPosTag,rightPosTag,leftNv);
    if (agreedPosTag == null) {
      if (!leftPosTag.contains(TAG_ANIM)) {
        if (MNP_ZNA_REGEX.matcher(leftPosTag).matches() && MNP_NAZ_REGEX.matcher(rightPosTag).matches() && !leftNv&& !rightNv) {
          agreedPosTag=leftPosTag;
        }
      }
 else {
        if (MNP_ZNA_REGEX.matcher(leftPosTag).matches() && MNP_ROD_REGEX.matcher(rightPosTag).matches() && !leftNv&& !rightNv) {
          agreedPosTag=leftPosTag;
        }
      }
    }
  }
 else   if (slaveSet.contains(rightLemma)) {
    rightPosTag=rightPosTag.replace(":anim",":inanim");
    agreedPosTag=getAgreedPosTag(leftPosTag,rightPosTag,false);
    if (agreedPosTag == null) {
      if (leftPosTag.contains(TAG_INANIM)) {
        if (MNP_ZNA_REGEX.matcher(leftPosTag).matches() && MNP_NAZ_REGEX.matcher(rightPosTag).matches() && PosTagHelper.getNum(leftPosTag).equals(PosTagHelper.getNum(rightPosTag))&& !leftNv&& !rightNv) {
          agreedPosTag=leftPosTag;
        }
      }
    }
  }
 else   if (slaveSet.contains(leftLemma)) {
    leftPosTag=leftPosTag.replace(":anim",":inanim");
    agreedPosTag=getAgreedPosTag(rightPosTag,leftPosTag,false);
    if (agreedPosTag == null) {
      if (rightPosTag.contains(TAG_INANIM)) {
        if (MNP_ZNA_REGEX.matcher(rightPosTag).matches() && MNP_NAZ_REGEX.matcher(leftPosTag).matches() && PosTagHelper.getNum(leftPosTag).equals(PosTagHelper.getNum(rightPosTag))&& !leftNv&& !rightNv) {
          agreedPosTag=rightPosTag;
        }
      }
    }
  }
  return agreedPosTag;
}
