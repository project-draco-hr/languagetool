def __init__(self, max_sentence_length, grammar_rules, word_rules, builtin_rules, false_friend_rules, textlang, mothertongue):
    'Parse all rules and put them in the self.rules list, together\n\t\twith built-in rules like the SentenceLengthRule.'
    self.rules = []
    sys.path.append(self.python_rules_dir)
    dyn_files = os.listdir(self.python_rules_dir)
    for filename in dyn_files:
        if ((not filename.endswith('.py')) or filename.endswith('Test.py')):
            continue
        filename = filename[:(-3)]
        exec ('import %s' % filename)
        try:
            exec ('dynamic_rule = %s.%s()' % (filename, filename))
        except AttributeError:
            raise InvalidFilename(filename)
        if (not hasattr(dynamic_rule, 'match')):
            raise MissingMethod('match', ('%s.py' % filename))
        if ((dynamic_rule.rule_id == 'SENTENCE_LENGTH') and (max_sentence_length != None)):
            dynamic_rule.setMaxLength(max_sentence_length)
        if ((not builtin_rules) or (dynamic_rule.rule_id in builtin_rules)):
            self.rules.append(dynamic_rule)
    for filename in self.rule_files:
        dir_temp = os.getcwd()
        os.chdir(os.path.dirname(filename))
        doc = xml.dom.minidom.parse(os.path.basename(filename))
        os.chdir(dir_temp)
        if filename.endswith('grammar.xml'):
            rule_nodes = doc.getElementsByTagName('rule')
            for rule_node in rule_nodes:
                rule = PatternRule(rule_node)
                lang_ok = 0
                if ((textlang == None) or (textlang == rule.language)):
                    lang_ok = 1
                if (lang_ok and ((grammar_rules == None) or (rule.rule_id in grammar_rules))):
                    self.rules.append(rule)
        elif filename.endswith('words.xml'):
            rule_nodes = doc.getElementsByTagName('rule')
            for rule_node in rule_nodes:
                rule = PatternRule(rule_node)
                lang_ok = 0
                if ((textlang == None) or (textlang == rule.language)):
                    lang_ok = 1
                if (lang_ok and ((word_rules == None) or (rule.rule_id in word_rules))):
                    self.rules.append(rule)
        elif filename.endswith('false_friends.xml'):
            pattern_nodes = doc.getElementsByTagName('pattern')
            for pattern_node in pattern_nodes:
                lang = pattern_node.getAttribute('lang')
                if ((textlang == None) or (lang == textlang)):
                    rule = PatternRule(pattern_node.parentNode, 1, mothertongue, textlang)
                    if (rule.valid and ((false_friend_rules == None) or (rule.rule_id in false_friend_rules))):
                        self.rules.append(rule)
    return
