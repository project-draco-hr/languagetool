{
  for (  final Language lang : Languages.getWithDemoLanguage()) {
    if (ignoredLanguages != null && ignoredLanguages.contains(lang)) {
      continue;
    }
    if (lang.isVariant()) {
      System.out.println("Skipping variant: " + lang);
      continue;
    }
    System.out.println("Running disambiguation tests for " + lang.getName() + "...");
    final DisambiguationRuleLoader ruleLoader=new DisambiguationRuleLoader();
    final JLanguageTool languageTool=new JLanguageTool(lang);
    if (!(languageTool.getLanguage().getDisambiguator() instanceof DemoDisambiguator)) {
      long startTime=System.currentTimeMillis();
      final String name=JLanguageTool.getDataBroker().getResourceDir() + "/" + lang.getShortName()+ "/disambiguation.xml";
      validateRuleFile(name);
      final List<DisambiguationPatternRule> rules=ruleLoader.getRules(ruleLoader.getClass().getResourceAsStream(name));
      for (      DisambiguationPatternRule rule : rules) {
        PatternTestTools.warnIfRegexpSyntaxNotKosher(rule.getPatternTokens(),rule.getId(),rule.getSubId(),lang);
      }
      testDisambiguationRulesFromXML(rules,languageTool,lang);
      long endTime=System.currentTimeMillis();
      System.out.println(rules.size() + " rules tested (" + (endTime - startTime)+ "ms)");
    }
  }
}
