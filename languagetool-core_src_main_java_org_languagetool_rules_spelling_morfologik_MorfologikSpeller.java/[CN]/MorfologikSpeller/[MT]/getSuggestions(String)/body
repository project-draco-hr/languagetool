{
  final List<String> suggestions=new ArrayList<>();
  suggestions.addAll(speller.findReplacements(word));
  suggestions.addAll(speller.replaceRunOnWords(word));
  if (dictionary.metadata.isConvertingCase() && StringTools.startsWithUppercase(word)) {
    for (int i=0; i < suggestions.size(); i++) {
      String uppercaseFirst=StringTools.uppercaseFirstChar(suggestions.get(i));
      int auxIndex=suggestions.indexOf(uppercaseFirst);
      if (auxIndex > i) {
        suggestions.remove(auxIndex);
      }
      if (auxIndex > -1 && auxIndex < i) {
        suggestions.remove(i);
        i--;
      }
 else {
        suggestions.set(i,uppercaseFirst);
      }
    }
  }
  return suggestions;
}
