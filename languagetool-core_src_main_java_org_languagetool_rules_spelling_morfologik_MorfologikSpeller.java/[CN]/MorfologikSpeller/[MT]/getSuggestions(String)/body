{
  final List<String> suggestions=new ArrayList<>();
  try {
    suggestions.addAll(speller.findReplacements(word));
    if (suggestions.isEmpty() && !word.toLowerCase(conversionLocale).equals(word)) {
      suggestions.addAll(speller.findReplacements(word.toLowerCase(conversionLocale)));
    }
    suggestions.addAll(speller.replaceRunOnWords(word));
  }
 catch (  CharacterCodingException e) {
    throw new RuntimeException(e);
  }
  if (dictionary.metadata.isConvertingCase() && StringTools.startsWithUppercase(word)) {
    for (int i=0; i < suggestions.size(); i++) {
      suggestions.set(i,StringTools.uppercaseFirstChar(suggestions.get(i)));
    }
  }
  return suggestions;
}
