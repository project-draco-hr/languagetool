{
  System.out.println("<b>Rules in LanguageTool " + JLanguageTool.VERSION + "</b><br />");
  System.out.println("Date: " + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "<br /><br />\n");
  System.out.println("<table class=\"tablesorter sortable\">");
  System.out.println("<thead>");
  System.out.println("<tr>");
  System.out.println("  <th valign='bottom' width=\"70\">Language</th>");
  System.out.println("  <th valign='bottom' align=\"left\" width=\"60\">XML<br/>rules</th>");
  System.out.println("  <th></th>");
  System.out.println("  <th align=\"left\" width=\"60\">Java<br/>rules</th>");
  System.out.println("  <th align=\"left\" width=\"60\">False<br/>friends</th>");
  System.out.println("  <th valign='bottom' width=\"65\">Auto-<br/>detected</th>");
  System.out.println("  <th valign='bottom' align=\"left\">Rule Maintainers</th>");
  System.out.println("</tr>");
  System.out.println("</thead>");
  System.out.println("<tbody>");
  final List<String> sortedLanguages=getSortedLanguages();
  final String falseFriendFile=JLanguageTool.getDataBroker().getRulesDir() + File.separator + "false-friends.xml";
  final URL falseFriendUrl=this.getClass().getResource(falseFriendFile);
  final String falseFriendRules=StringTools.readFile(Tools.getStream(falseFriendFile)).replaceAll("(?s)<!--.*?-->","").replaceAll("(?s)<rules.*?>","");
  int overallJavaCount=0;
  for (  final String langName : sortedLanguages) {
    final Language lang=Language.getLanguageForName(langName);
    System.out.print("<tr>");
    final File webDir=new File("website","www");
    final File langSpecificWebsite=new File(webDir,lang.getShortName());
    if (langSpecificWebsite.isDirectory()) {
      System.out.print("<td valign=\"top\"><a href=\"../" + lang.getShortName() + "/\">"+ lang.getName()+ "</a></td>");
    }
 else {
      System.out.print("<td valign=\"top\">" + lang.getName() + "</td>");
    }
    final String xmlFile=JLanguageTool.getDataBroker().getRulesDir() + File.separator + lang.getShortName()+ File.separator+ "grammar.xml";
    final URL url=this.getClass().getResource(xmlFile);
    if (url == null) {
      System.out.println("<td valign=\"top\" align=\"right\">0</td>");
    }
 else {
      String xmlRules=StringTools.readFile(Tools.getStream(xmlFile));
      xmlRules=xmlRules.replaceAll("(?s)<!--.*?-->","");
      xmlRules=xmlRules.replaceAll("(?s)<rules.*?>","");
      final int count=countXmlRules(xmlRules);
      final int countInRuleGroup=countXmlRuleGroupRules(xmlRules);
      System.out.print("<td valign=\"top\" align=\"right\">" + (count + countInRuleGroup) + "</td>");
      System.out.print("<td valign=\"top\" align=\"right\">" + "<a href=\"http://languagetool.svn.sourceforge.net/viewvc/languagetool/trunk/JLanguageTool/src/rules/" + lang.getShortName() + "/grammar.xml?content-type=text%2Fplain"+ "\">show</a>/"+ "<a href=\"http://community.languagetool.org/rule/list?lang="+ lang.getShortName()+ "\">browse</a>"+ "</td>");
    }
    final File dir=new File("src/java/org/languagetool" + JLanguageTool.getDataBroker().getRulesDir() + "/"+ lang.getShortName());
    if (!dir.exists()) {
      System.out.print("<td valign=\"top\" align=\"right\">0</td>");
    }
 else {
      final File[] javaRules=dir.listFiles(new JavaFilter());
      final int javaCount=javaRules.length - 1;
      System.out.print("<td valign=\"top\" align=\"right\">" + javaCount + "</td>");
      overallJavaCount++;
    }
    if (falseFriendUrl == null) {
      System.out.println("<td valign=\"top\" align=\"right\">0</td>");
    }
 else {
      final int count=countFalseFriendRules(falseFriendRules,lang);
      System.out.print("<td valign=\"top\" align=\"right\">" + count + "</td>");
      System.out.print("<td valign=\"top\">" + (isAutoDetected(lang.getShortName()) ? "yes" : "-") + "</td>");
      final StringBuilder maintainerInfo=getMaintainerInfo(lang);
      System.out.print("<td valign=\"top\" align=\"left\">" + maintainerInfo.toString() + "</td>");
    }
    System.out.println("</tr>");
  }
  if (overallJavaCount == 0) {
    throw new RuntimeException("No Java rules found");
  }
  System.out.println("</tbody>");
  System.out.println("</table>");
}
