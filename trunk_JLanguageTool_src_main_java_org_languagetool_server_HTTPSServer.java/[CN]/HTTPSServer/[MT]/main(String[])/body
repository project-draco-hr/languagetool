{
  if (args.length > 7 || usageRequested(args)) {
    System.out.println("Usage: " + HTTPSServer.class.getSimpleName() + " --config propertyFile [--port|-p port] [--public]");
    System.out.println("  --config file  a Java property file with values for:");
    System.out.println("                 'keystore'  - a Java keystore with an SSL certificate");
    System.out.println("                 'password' -  the keystore's password");
    printCommonOptions();
    System.exit(1);
  }
  final boolean runInternal=false;
  final HTTPSServerConfig config=new HTTPSServerConfig(args);
  try {
    final HTTPSServer server;
    if (config.isPublicAccess()) {
      System.out.println("WARNING: running in public mode, LanguageTool API can be accessed without restrictions!");
      server=new HTTPSServer(config,runInternal,null,null);
    }
 else {
      server=new HTTPSServer(config,runInternal,DEFAULT_HOST,DEFAULT_ALLOWED_IPS);
    }
    server.run();
  }
 catch (  Exception e) {
    throw new RuntimeException("Could not start LanguageTool HTTPS server on " + HTTPServerConfig.DEFAULT_HOST + ", port "+ config.getPort(),e);
  }
}
