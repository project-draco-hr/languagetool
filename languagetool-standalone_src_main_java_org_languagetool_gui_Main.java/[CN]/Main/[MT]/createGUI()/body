{
  frame=new JFrame("LanguageTool " + JLanguageTool.VERSION);
  setLookAndFeel();
  checkAction=new CheckAction();
  frame.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
  frame.addWindowListener(new CloseListener());
  final URL iconUrl=JLanguageTool.getDataBroker().getFromResourceDirAsUrl(TRAY_ICON);
  frame.setIconImage(new ImageIcon(iconUrl).getImage());
  textArea=new JTextArea(messages.getString("guiDemoText"));
  textArea.setLineWrap(true);
  textArea.setWrapStyleWord(true);
  textArea.addKeyListener(new ControlReturnTextCheckingListener());
  resultArea=new ResultArea(messages,textArea,config);
  undoRedo=new UndoRedoSupport(this.textArea);
  frame.setJMenuBar(createMenuBar());
  checkTextButton=new JButton(checkAction);
  final JPanel panel=new JPanel();
  panel.setOpaque(false);
  panel.setLayout(new GridBagLayout());
  final GridBagConstraints buttonCons=new GridBagConstraints();
  final JPanel insidePanel=new JPanel();
  insidePanel.setOpaque(false);
  insidePanel.setLayout(new GridBagLayout());
  buttonCons.gridx=0;
  buttonCons.gridy=0;
  buttonCons.anchor=GridBagConstraints.WEST;
  insidePanel.add(new JLabel(" " + messages.getString("textLanguage") + " "),buttonCons);
  languageBox=new LanguageComboBox(messages,config);
  languageBox.setRenderer(new LanguageComboBoxRenderer(messages));
  languageBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      if (e.getStateChange() == ItemEvent.SELECTED) {
        langTool=null;
        currentLanguage=(Language)languageBox.getSelectedItem();
        ltSupport.setLanguageTool(getCurrentLanguageTool(currentLanguage));
      }
    }
  }
);
  buttonCons.gridx=1;
  buttonCons.gridy=0;
  insidePanel.add(languageBox,buttonCons);
  buttonCons.gridx=0;
  buttonCons.gridy=0;
  panel.add(insidePanel);
  buttonCons.gridx=2;
  buttonCons.gridy=0;
  insidePanel.add(checkTextButton,buttonCons);
  autoDetectBox=new JCheckBox(messages.getString("atd"),config.getAutoDetect());
  autoDetectBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      boolean selected=(e.getStateChange() == ItemEvent.SELECTED);
      languageBox.setEnabled(!selected);
      config.setAutoDetect(selected);
      if (selected) {
        Language detected=autoDetectLanguage(textArea.getText());
        languageBox.selectLanguage(detected);
      }
    }
  }
);
  languageBox.setEnabled(!autoDetectBox.isSelected());
  buttonCons.gridx=1;
  buttonCons.gridy=1;
  buttonCons.gridwidth=2;
  buttonCons.anchor=GridBagConstraints.WEST;
  insidePanel.add(autoDetectBox,buttonCons);
  final Container contentPane=frame.getContentPane();
  final GridBagLayout gridLayout=new GridBagLayout();
  contentPane.setLayout(gridLayout);
  final GridBagConstraints cons=new GridBagConstraints();
  cons.insets=new Insets(5,5,5,5);
  cons.fill=GridBagConstraints.BOTH;
  cons.weightx=10.0f;
  cons.weighty=10.0f;
  cons.gridx=0;
  cons.gridy=1;
  cons.weighty=5.0f;
  final JSplitPane splitPane=new JSplitPane(JSplitPane.VERTICAL_SPLIT,new JScrollPane(textArea),new JScrollPane(resultArea));
  splitPane.setDividerLocation(200);
  contentPane.add(splitPane,cons);
  cons.fill=GridBagConstraints.NONE;
  cons.gridx=0;
  cons.gridy=2;
  cons.weighty=0.0f;
  cons.insets=new Insets(1,10,10,1);
  cons.gridy=3;
  contentPane.add(panel,cons);
  currentLanguage=getDefaultLanguage();
  warmUpChecker();
  ltSupport=new LanguageToolSupport(this.langTool,this.textArea);
  if (config.getAutoDetect()) {
    languageBox.selectLanguage(autoDetectLanguage(textArea.getText()));
  }
  frame.pack();
  frame.setSize(WINDOW_WIDTH,WINDOW_HEIGHT);
  frame.setLocationByPlatform(true);
}
