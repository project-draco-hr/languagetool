{
  List<RuleMatch> ruleMatches=new ArrayList<RuleMatch>();
  AnalyzedTokenReadings[] tokens=text.getTokens();
  String tkns="";
  for (int i=0; i < tokens.length; i++) {
    String tokenStr=tokens[i].getToken();
    if (isPunctuation(tokenStr)) {
      tkns+=tokenStr;
      if (i < tokens.length - 1)       continue;
    }
    if (tkns.length() >= 2) {
      if (!isPunctsJoinOk(tkns)) {
        String msg="bad duplication or combination of puctuation signs";
        RuleMatch ruleMatch=new RuleMatch(this,tokens[i].getStartPos() - tkns.length(),tokens[i].getStartPos(),msg);
        ruleMatch.setSuggestedReplacement(tkns.substring(0,1));
        ruleMatches.add(ruleMatch);
      }
    }
    tkns="";
  }
  return toRuleMatchArray(ruleMatches);
}
