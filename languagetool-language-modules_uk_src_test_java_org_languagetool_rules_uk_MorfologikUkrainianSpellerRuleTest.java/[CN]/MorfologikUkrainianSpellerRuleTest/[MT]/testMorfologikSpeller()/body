{
  MorfologikUkrainianSpellerRule rule=new MorfologikUkrainianSpellerRule(TestTools.getMessages("uk"),new Ukrainian());
  JLanguageTool langTool=new JLanguageTool(new Ukrainian());
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("???? ?????? ???????????? ????????????????????!")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence(",")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("123454")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("???? ?????? ???????????? The Beatles!")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("??????\u00AD????")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("??????\u00AD???? ??????\u00AD????")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("??????\u2011??????")).length);
  RuleMatch[] matches=rule.match(langTool.getAnalyzedSentence("??????????????????"));
  assertEquals(1,matches.length);
  matches=rule.match(langTool.getAnalyzedSentence("??????????????"));
  assertEquals(1,matches.length);
  assertEquals("??????????????",matches[0].getSuggestedReplacements().get(0));
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("??")).length);
  matches=rule.match(langTool.getAnalyzedSentence("????????????????i??"));
  assertEquals(1,matches.length);
  assertEquals("????????????????????",matches[0].getSuggestedReplacements().get(0));
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("?????????? ?????? ??????????-?????????????? ??????????????")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("?????? ???????????? ?????????? ???? ????????????????-??????????????")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("?????? ???????????? ?????????? ???? ????????????????-??????????????")).length);
  assertEquals(0,rule.match(langTool.getAnalyzedSentence("??????-????????????????")).length);
  assertEquals(1,rule.match(langTool.getAnalyzedSentence("????????-????????????????????.")).length);
  RuleMatch[] match=rule.match(langTool.getAnalyzedSentence("?????????????? ???????????? ??.??.???????????????? ?? ??.??????????????????"));
  assertEquals(new ArrayList<RuleMatch>(),Arrays.asList(match));
  match=rule.match(langTool.getAnalyzedSentence("?????????????? ???????????? ??. ??. ???????????????? ?? ??. ??????????????????"));
  assertEquals(new ArrayList<RuleMatch>(),Arrays.asList(match));
  match=rule.match(langTool.getAnalyzedSentence("?????????????????????? ???????? (????????. English language, English) ???????????????? ???? ?????????????????????? ??????????"));
  assertEquals(new ArrayList<RuleMatch>(),Arrays.asList(match));
  match=rule.match(langTool.getAnalyzedSentence("?????????????????????? ???????? (???????? English language, English) ???????????????? ???? ?????????????????????? ??????????"));
  assertEquals(1,match.length);
  match=rule.match(langTool.getAnalyzedSentence("100 ??????. ??????????????"));
  assertEquals(new ArrayList<RuleMatch>(),Arrays.asList(match));
  match=rule.match(langTool.getAnalyzedSentence("100 ????. ??"));
  assertEquals(new ArrayList<RuleMatch>(),Arrays.asList(match));
  match=rule.match(langTool.getAnalyzedSentence("100 ??????"));
  assertEquals(new ArrayList<RuleMatch>(),Arrays.asList(match));
  match=rule.match(langTool.getAnalyzedSentence("100 ???? ??"));
  assertEquals(1,Arrays.asList(match).size());
}
