{
  for (  String line : lines) {
    if (!line.contains("<ERR ")) {
      System.out.println("No error markup found, ignoring: " + line);
      continue;
    }
    ErrorSentence sentence=getIncorrectSentence(line);
    List<RuleMatch> matches=langTool.check(sentence.annotatedText);
    sentenceCount++;
    errorsInCorpusCount+=sentence.errors.size();
    System.out.println(sentence.markupText + " => " + matches.size());
    List<Span> detectedErrorPositions=new ArrayList<>();
    for (    RuleMatch match : matches) {
      boolean alreadyCounted=errorAlreadyCounted(match,detectedErrorPositions);
      if (!alreadyCounted && sentence.hasErrorCoveredByMatchAndGoodFirstSuggestion(match)) {
        goodMatches++;
        perfectMatches++;
        System.out.println("    [++] " + match + ": "+ match.getSuggestedReplacements());
      }
 else       if (!alreadyCounted && sentence.hasErrorCoveredByMatch(match)) {
        goodMatches++;
        System.out.println("    [+ ] " + match + ": "+ match.getSuggestedReplacements());
      }
 else {
        System.out.println("    [  ] " + match + ": "+ match.getSuggestedReplacements());
      }
      detectedErrorPositions.add(new Span(match.getFromPos(),match.getToPos()));
    }
  }
}
