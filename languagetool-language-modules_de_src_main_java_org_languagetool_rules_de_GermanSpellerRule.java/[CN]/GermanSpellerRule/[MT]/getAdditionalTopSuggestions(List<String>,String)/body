{
  String w=word.replaceFirst("\\.$","");
  if ("unzwar".equals(w)) {
    return Collections.singletonList("und zwar");
  }
 else   if ("desweiteren".equals(w)) {
    return Collections.singletonList("des Weiteren");
  }
 else   if ("wieviel".equals(w)) {
    return Collections.singletonList("wie viel");
  }
 else   if ("wieviele".equals(w)) {
    return Collections.singletonList("wie viele");
  }
 else   if ("wievielen".equals(w)) {
    return Collections.singletonList("wie vielen");
  }
 else   if ("vorteilen".equals(w)) {
    return Collections.singletonList("Vorteilen");
  }
 else   if ("Trons".equals(w)) {
    return Collections.singletonList("Trance");
  }
 else   if ("einzigste".equals(w)) {
    return Collections.singletonList("einzige");
  }
 else   if (word.endsWith("standart")) {
    return Collections.singletonList(word.replaceFirst("standart$","standard"));
  }
 else   if (word.endsWith("standarts")) {
    return Collections.singletonList(word.replaceFirst("standarts$","standards"));
  }
 else   if (word.equals("Rolladen")) {
    return Collections.singletonList("Rollladen");
  }
 else   if (word.equals("Ma??name")) {
    return Collections.singletonList("Ma??nahme");
  }
 else   if (word.equals("Ma??namen")) {
    return Collections.singletonList("Ma??nahmen");
  }
 else   if (!StringTools.startsWithUppercase(word)) {
    String ucWord=StringTools.uppercaseFirstChar(word);
    if (!suggestions.contains(ucWord) && !hunspellDict.misspelled(ucWord)) {
      return Collections.singletonList(ucWord);
    }
  }
  String verbSuggestion=getPastTenseVerbSuggestion(word);
  if (verbSuggestion != null) {
    return Collections.singletonList(verbSuggestion);
  }
  String participleSuggestion=getParticipleSuggestion(word);
  if (participleSuggestion != null) {
    return Collections.singletonList(participleSuggestion);
  }
  return Collections.emptyList();
}
