{
  final XComponent xComponent=getXComponent();
  if (xComponent == null) {
    return Language.ENGLISH;
  }
  final Locale charLocale;
  final XPropertySet xCursorProps;
  try {
    final XModel model=(XModel)UnoRuntime.queryInterface(XModel.class,xComponent);
    final XTextViewCursorSupplier xViewCursorSupplier=(XTextViewCursorSupplier)UnoRuntime.queryInterface(XTextViewCursorSupplier.class,model.getCurrentController());
    final XTextViewCursor xCursor=xViewCursorSupplier.getViewCursor();
    if (xCursor.isCollapsed()) {
      xCursorProps=(XPropertySet)UnoRuntime.queryInterface(XPropertySet.class,xCursor);
    }
 else {
      xCursorProps=(XPropertySet)UnoRuntime.queryInterface(XPropertySet.class,xCursor.getText().createTextCursorByRange(xCursor.getStart()));
    }
    final KhmerDetector khmerDetector=new KhmerDetector();
    if (khmerDetector.isKhmer(xCursor.getText().getString())) {
      return Language.KHMER;
    }
    final Object obj=xCursorProps.getPropertyValue("CharLocale");
    if (obj == null) {
      return Language.ENGLISH;
    }
    charLocale=(Locale)obj;
    boolean langIsSupported=false;
    for (    Language element : Language.LANGUAGES) {
      if (element.getShortName().equals(charLocale.Language)) {
        langIsSupported=true;
        break;
      }
    }
    if (!langIsSupported) {
      JOptionPane.showMessageDialog(null,"Error: Sorry, the document language '" + charLocale.Language + "' is not supported by LanguageTool.");
      return null;
    }
  }
 catch (  final Throwable t) {
    showError(t);
    return null;
  }
  try {
    return Language.getLanguageForShortName(charLocale.Language + "-" + charLocale.Variant);
  }
 catch (  final Exception e) {
    return Language.getLanguageForShortName(charLocale.Language);
  }
}
