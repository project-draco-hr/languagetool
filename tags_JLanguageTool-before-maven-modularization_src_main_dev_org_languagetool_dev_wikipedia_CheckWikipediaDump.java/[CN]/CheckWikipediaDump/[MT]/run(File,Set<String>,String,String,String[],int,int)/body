{
  final File file=new File(xmlFileName);
  if (!file.exists() || !file.isFile()) {
    throw new IOException("File doesn't exist or isn't a file: " + xmlFileName);
  }
  final Language lang=Language.getLanguageForShortName(langCode);
  final JLanguageTool languageTool=new JLanguageTool(lang);
  languageTool.activateDefaultPatternRules();
  if (ruleIds != null) {
    enableSpecifiedRules(ruleIds,languageTool);
  }
 else {
    applyRuleDeactivation(languageTool,disabledRules);
  }
  disableSpellingRules(languageTool);
  final Date dumpDate=getDumpFileDate(file);
  System.out.println("Dump date: " + dumpDate + ", language: "+ langCode);
  System.out.println("Article limit: " + (maxArticles > 0 ? maxArticles : "no limit"));
  System.out.println("Error limit: " + (maxErrors > 0 ? maxErrors : "no limit"));
  BaseWikipediaDumpHandler xmlHandler=null;
  try {
    if (propFile != null) {
      xmlHandler=new DatabaseDumpHandler(languageTool,dumpDate,langCode,propFile,lang);
    }
 else {
      xmlHandler=new OutputDumpHandler(languageTool,dumpDate,langCode,lang);
    }
    xmlHandler.setMaximumArticles(maxArticles);
    xmlHandler.setMaximumErrors(maxErrors);
    final SAXParserFactory factory=SAXParserFactory.newInstance();
    final SAXParser saxParser=factory.newSAXParser();
    saxParser.parse(file,xmlHandler);
  }
 catch (  ErrorLimitReachedException e) {
    System.out.println(e);
  }
catch (  ArticleLimitReachedException e) {
    System.out.println(e);
  }
 finally {
    if (xmlHandler != null) {
      xmlHandler.close();
    }
    final float matchesPerDoc=(float)xmlHandler.getRuleMatchCount() / xmlHandler.getArticleCount();
    System.out.printf(lang + ": %d total matches\n",xmlHandler.getRuleMatchCount());
    System.out.printf(lang + ": ??%.2f rule matches per document\n",matchesPerDoc);
  }
}
