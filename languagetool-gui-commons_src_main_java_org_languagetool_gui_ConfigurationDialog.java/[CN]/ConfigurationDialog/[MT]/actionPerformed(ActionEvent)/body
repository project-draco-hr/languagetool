{
  if (e.getSource() == okButton) {
    int i=0;
    inactiveCategoryNames.clear();
    for (    final JCheckBox checkBox : categoryCheckBoxes) {
      if (!checkBox.isSelected()) {
        final String categoryName=checkBoxesCategoryNames.get(i);
        inactiveCategoryNames.add(categoryName);
      }
      i++;
    }
    i=0;
    inactiveRuleIds.clear();
    enabledRuleIds.clear();
    for (    final JCheckBox checkBox : checkBoxes) {
      if (!checkBox.isSelected()) {
        final String ruleId=checkBoxesRuleIds.get(i);
        if (!defaultOffRules.contains(ruleId)) {
          inactiveRuleIds.add(ruleId);
        }
      }
      if (checkBox.isSelected()) {
        final String ruleId=checkBoxesRuleIds.get(i);
        if (defaultOffRules.contains(ruleId)) {
          enabledRuleIds.add(ruleId);
        }
      }
      i++;
    }
    if (motherTongueBox.getSelectedItem() instanceof String) {
      motherTongue=getLanguageForLocalizedName(motherTongueBox.getSelectedItem().toString());
    }
 else {
      motherTongue=(Language)motherTongueBox.getSelectedItem();
    }
    if (serverCheckbox != null) {
      serverMode=serverCheckbox.isSelected();
      serverPort=Integer.parseInt(serverPortField.getText());
    }
    if (serverSettingsCheckbox != null) {
      useGUIConfig=serverSettingsCheckbox.isSelected();
    }
    dialog.setVisible(false);
  }
 else   if (e.getSource() == cancelButton) {
    dialog.setVisible(false);
  }
}
