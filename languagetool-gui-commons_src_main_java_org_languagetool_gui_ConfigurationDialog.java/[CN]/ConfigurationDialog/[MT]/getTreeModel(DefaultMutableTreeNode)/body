{
  DefaultTreeModel treeModel=new DefaultTreeModel(rootNode);
  treeModel.addTreeModelListener(new TreeModelListener(){
    @Override public void treeNodesChanged(    TreeModelEvent e){
      DefaultMutableTreeNode node=(DefaultMutableTreeNode)e.getTreePath().getLastPathComponent();
      int index=e.getChildIndices()[0];
      node=(DefaultMutableTreeNode)node.getChildAt(index);
      if (node instanceof RuleNode) {
        RuleNode o=(RuleNode)node;
        if (o.getRule().isDefaultOff() || o.getRule().getCategory().isDefaultOff()) {
          if (o.isEnabled()) {
            config.getEnabledRuleIds().add(o.getRule().getId());
            config.getDisabledRuleIds().remove(o.getRule().getId());
          }
 else {
            config.getEnabledRuleIds().remove(o.getRule().getId());
            config.getDisabledRuleIds().add(o.getRule().getId());
          }
        }
 else {
          if (o.isEnabled()) {
            config.getDisabledRuleIds().remove(o.getRule().getId());
          }
 else {
            config.getDisabledRuleIds().add(o.getRule().getId());
          }
        }
      }
      if (node instanceof CategoryNode) {
        CategoryNode o=(CategoryNode)node;
        if (o.isEnabled()) {
          config.getDisabledCategoryNames().remove(o.getCategory().getName());
        }
 else {
          config.getDisabledCategoryNames().add(o.getCategory().getName());
        }
      }
    }
    @Override public void treeNodesInserted(    TreeModelEvent e){
    }
    @Override public void treeNodesRemoved(    TreeModelEvent e){
    }
    @Override public void treeStructureChanged(    TreeModelEvent e){
    }
  }
);
  return treeModel;
}
