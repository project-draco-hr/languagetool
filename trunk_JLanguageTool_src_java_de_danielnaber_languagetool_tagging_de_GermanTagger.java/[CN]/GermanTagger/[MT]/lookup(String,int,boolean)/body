{
  initSearcher();
  Term term=null;
  if (makeLowercase)   term=new Term(FULLFORM_FIELD,word.toLowerCase());
 else   term=new Term(FULLFORM_FIELD,word);
  Query query=new TermQuery(term);
  Hits hits=searcher.search(query);
  if (hits.length() == 0) {
    return null;
  }
 else {
    List l=new ArrayList();
    for (int j=0; j < hits.length(); j++) {
      Document doc=hits.doc(j);
      Field[] fields=doc.getFields(CATEGORIES_FIELD);
      if (fields != null) {
        for (int i=0; i < fields.length; i++) {
          String val=fields[i].stringValue();
          if (!val.equals("")) {
            if (val.endsWith("O")) {
              String val1=val.replaceFirst("O$","M");
              GermanTokenReading tokenReading1=GermanTokenReading.createTokenReadingFromMorphyString(val1,word);
              l.add(tokenReading1);
              String val2=val.replaceFirst("O$","F");
              GermanTokenReading tokenReading2=GermanTokenReading.createTokenReadingFromMorphyString(val2,word);
              l.add(tokenReading2);
            }
 else {
              GermanTokenReading tokenReading=GermanTokenReading.createTokenReadingFromMorphyString(val,word);
              l.add(tokenReading);
            }
          }
        }
      }
    }
    AnalyzedGermanToken aToken=new AnalyzedGermanToken(word,l,startPos);
    return aToken;
  }
}
