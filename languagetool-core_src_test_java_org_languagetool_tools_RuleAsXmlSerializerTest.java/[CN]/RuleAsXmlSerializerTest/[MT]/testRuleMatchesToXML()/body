{
  final List<RuleMatch> matches=new ArrayList<>();
  final String text="This is an test sentence. Here's another sentence with more text.";
  final FakeRule rule=new FakeRule();
  final RuleMatch match=new RuleMatch(rule,8,10,"myMessage");
  match.setColumn(99);
  match.setEndColumn(100);
  match.setLine(44);
  match.setEndLine(45);
  matches.add(match);
  final String xml=SERIALIZER.ruleMatchesToXml(matches,text,5,Language.DEMO);
  assertTrue(xml.startsWith("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"));
  final Pattern matchesPattern=Pattern.compile(".*<matches software=\"LanguageTool\" version=\"" + JLanguageTool.VERSION + "\" buildDate=\".*?\">.*",Pattern.DOTALL);
  final Matcher matcher=matchesPattern.matcher(xml);
  assertTrue(matcher.matches());
  assertTrue(xml.contains(">\n" + "<error fromy=\"44\" fromx=\"98\" toy=\"45\" tox=\"99\" ruleId=\"FAKE_ID\" msg=\"myMessage\" " + "replacements=\"\" context=\"...s is an test...\" contextoffset=\"8\" offset=\"8\" errorlength=\"2\" "+ "locqualityissuetype=\"misspelling\"/>\n"+ "</matches>\n"));
}
