{
  checkUnsupportedElement(patternToken);
  final String termStr=patternToken.getString();
  final String pos=patternToken.getPOStag();
  final BooleanClause termQuery=getTermQueryOrNull(patternToken,termStr);
  final BooleanClause posQuery=getPosQueryOrNull(patternToken,pos);
  if (termQuery != null && posQuery != null) {
    if (mustOccur(termQuery) && mustOccur(posQuery)) {
      final SpanQuery spanQueryForTerm=asSpanQuery(termQuery);
      final SpanQuery spanQueryForPos=asSpanQuery(posQuery);
      final SpanQuery[] spanClauses={spanQueryForTerm,spanQueryForPos};
      return new BooleanClause(new SpanNearQuery(spanClauses,0,false),BooleanClause.Occur.MUST);
    }
 else {
      throw new UnsupportedPatternRuleException("Term/POS combination not supported yet: " + patternToken);
    }
  }
 else   if (termQuery != null) {
    return termQuery;
  }
 else   if (posQuery != null) {
    return posQuery;
  }
  throw new UnsupportedPatternRuleException("Neither POS tag nor term set for element: " + patternToken);
}
