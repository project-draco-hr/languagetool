{
  final List<RuleMatch> ruleMatches=new ArrayList<RuleMatch>();
  final String[] tokens=tokenizeText(getSentenceText(text));
  if (dictionary == null) {
    return toRuleMatchArray(ruleMatches);
  }
  int len=text.getTokens()[1].getStartPos();
  for (  final String word : tokens) {
    boolean isAlphabetic=true;
    if (word.length() == 1) {
      isAlphabetic=StringTools.isAlphabetic(word.charAt(0));
    }
    if (isAlphabetic && dictionary.misspelled(word)) {
      final RuleMatch ruleMatch=new RuleMatch(this,len,len + word.length(),messages.getString("spelling"),messages.getString("desc_spelling_short"));
      final List<String> suggestions=dictionary.suggest(word);
      if (suggestions != null) {
        ruleMatch.setSuggestedReplacements(suggestions);
      }
      ruleMatches.add(ruleMatch);
    }
    len+=word.length() + 1;
  }
  return toRuleMatchArray(ruleMatches);
}
