{
  if (tokSequence.isEmpty()) {
    return null;
  }
  if (!firstUnified) {
    AnalyzedTokenReadings tmpATR;
    int first=0;
    tmpFeaturesFound.add(true);
    while (!tmpFeaturesFound.get(first)) {
      first++;
    }
    tmpFeaturesFound.remove(tmpFeaturesFound.size() - 1);
    if (first >= tmpFeaturesFound.size()) {
      return null;
    }
    int numRead=tokSequence.get(0).getReadingsLength();
    if (first < numRead) {
      tmpATR=new AnalyzedTokenReadings(tokSequence.get(0).getAnalyzedToken(first),0);
      for (int i=first + 1; i <= Math.min(numRead - 1,tokCnt); i++) {
        if (tmpFeaturesFound.get(i)) {
          tmpATR.addReading(tokSequence.get(0).getAnalyzedToken(i));
        }
      }
      tokSequence.set(0,tmpATR);
    }
    firstUnified=true;
  }
  final AnalyzedTokenReadings[] atr=tokSequence.toArray(new AnalyzedTokenReadings[tokSequence.size()]);
  return atr;
}
