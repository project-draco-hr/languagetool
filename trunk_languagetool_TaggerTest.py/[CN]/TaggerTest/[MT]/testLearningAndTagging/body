def testLearningAndTagging(self):
    r = self.tag('The/AT0 fat/AJ0 man/NN1', 'The big man')
    self.assertEqual(r, [('The', 'AT0'), ('big', 'unknown'), ('man', 'NN1')])
    r = self.tag('The/AT0 fat/AJ0 man/NN1', 'the xxx')
    self.assertEqual(r, [('the', 'unknown'), ('xxx', 'unknown')])
    r = self.tag('The/AT0 fat/AJ0 man/NN1', 'The fat man')
    self.assertEqual(r, [('The', 'AT0'), ('fat', 'AJ0'), ('man', 'NN1')])
    r = self.tag('A/DET cool/AJ0 large/AJ0 car/NN1', 'A cool car')
    self.assertEqual(r, [('A', 'DET'), ('cool', 'AJ0'), ('car', 'NN1')])
    r = self.tag('The/DET fat/NN1 is/VB hot/AJ0\n\t\t\tThe/DET fat/AJ0 guy/NN1\n\t\t\tA/DET man/NN1 used/VBD fat/NN1', 'A fat man')
    self.assertEqual(r, [('A', 'DET'), ('fat', 'AJ0'), ('man', 'NN1')])
    r = self.tag('The/DET fat/NN1 is/VB hot/AJ0\n\t\t\tA/DET fat/NN1 man/NN1 . \n\t\t\tHe/PP used/VBD fat/NN1', 'A fat man')
    self.assertEqual(r, [('A', 'DET'), ('fat', 'NN1'), ('man', 'NN1')])
    r = self.tag('The/DET fat/AJ0 is/VB hot/AJ0\n\t\t\tA/DET fat/AJ0 man/NN1 . \n\t\t\tHe/PP used/VBD fat/NN1', 'A fat man')
    self.assertEqual(r, [('A', 'DET'), ('fat', 'AJ0'), ('man', 'NN1')])
    r = self.tag('The/DET fat/AJ0 man/NN is/VB fat/AJ0 ./PP', 'A fat man. He is fat.')
    self.assertEqual(r, [('A', 'unknown'), ('fat', 'AJ0'), ('man', 'NN'), ('He', 'unknown'), ('is', 'VB'), ('fat', 'AJ0')])
    return
