{
  if (posStack.size() > 0) {
    String pop=posStack.pop();
    restoreState(current);
    termAtt.append(pop);
    posIncrAtt.setPositionIncrement(0);
    typeAtt.setType("pos");
    return true;
  }
  if (tokenIter == null || !tokenIter.hasNext()) {
    if (input.incrementToken()) {
      String sentenceStr=termAtt.toString();
      collectedInput.append(sentenceStr);
      if (sentenceStr.length() >= 255) {
        return true;
      }
 else {
        sentenceStr=collectedInput.toString();
        collectedInput.setLength(0);
      }
      AnalyzedSentence sentence=languageTool.getAnalyzedSentence(sentenceStr);
      List<AnalyzedTokenReadings> tokenBuffer=Arrays.asList(sentence.getTokens());
      tokenIter=tokenBuffer.iterator();
      if (!tokenIter.hasNext()) {
        return false;
      }
    }
 else {
      return false;
    }
  }
  clearAttributes();
  AnalyzedTokenReadings tr=tokenIter.next();
  if (tr.isSentenceStart()) {
    typeAtt.setType("pos");
    String posTag=tr.getAnalyzedToken(0).getPOSTag();
    String lemma=tr.getAnalyzedToken(0).getLemma();
    if (toLowerCase) {
      termAtt.append(POS_PREFIX.toLowerCase()).append(posTag.toLowerCase());
      if (lemma != null) {
        termAtt.append(LEMMA_PREFIX.toLowerCase()).append(lemma.toLowerCase());
      }
    }
 else {
      termAtt.append(POS_PREFIX).append(posTag);
      if (lemma != null) {
        termAtt.append(LEMMA_PREFIX).append(lemma);
      }
    }
    return true;
  }
  if (tr.isWhitespace()) {
    return this.incrementToken();
  }
  offsetAtt.setOffset(tr.getStartPos(),tr.getEndPos());
  for (  AnalyzedToken token : tr) {
    if (token.getPOSTag() != null) {
      if (toLowerCase) {
        posStack.push(POS_PREFIX.toLowerCase() + token.getPOSTag().toLowerCase());
      }
 else {
        posStack.push(POS_PREFIX + token.getPOSTag());
      }
    }
    if (token.getLemma() != null) {
      if (toLowerCase) {
        posStack.push(LEMMA_PREFIX.toLowerCase() + token.getLemma().toLowerCase());
      }
 else {
        posStack.push(LEMMA_PREFIX + token.getLemma());
      }
    }
  }
  current=captureState();
  if (toLowerCase) {
    termAtt.append(tr.getAnalyzedToken(0).getToken().toLowerCase());
  }
 else {
    termAtt.append(tr.getAnalyzedToken(0).getToken());
  }
  return true;
}
