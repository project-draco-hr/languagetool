{
  dialog=new JDialog(owner,true);
  dialog.setTitle(messages.getString("guiConfigWindowTitle"));
  checkBoxes.clear();
  checkBoxesRuleIds.clear();
  Collections.sort(rules,new CategoryComparator());
  KeyStroke stroke=KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0);
  ActionListener actionListener=new ActionListener(){
    @SuppressWarnings("unused") public void actionPerformed(    ActionEvent actionEvent){
      isClosed=true;
      dialog.setVisible(false);
    }
  }
;
  JRootPane rootPane=dialog.getRootPane();
  rootPane.registerKeyboardAction(actionListener,stroke,JComponent.WHEN_IN_FOCUSED_WINDOW);
  JPanel checkBoxPanel=new JPanel();
  checkBoxPanel.setLayout(new GridBagLayout());
  GridBagConstraints cons=new GridBagConstraints();
  cons.anchor=GridBagConstraints.NORTHWEST;
  cons.gridx=0;
  int row=0;
  String prevID=null;
  String prevCategory=null;
  for (  Rule rule : rules) {
    if (prevID == null || (prevID != null && !prevID.equals(rule.getId()))) {
      cons.gridy=row;
      JCheckBox checkBox=new JCheckBox(rule.getDescription());
      if (inactiveRuleIds != null && inactiveRuleIds.contains(rule.getId()))       checkBox.setSelected(false);
 else       checkBox.setSelected(true);
      checkBoxes.add(checkBox);
      checkBoxesRuleIds.add(rule.getId());
      boolean showHeadline=(rule.getCategory() != null && !rule.getCategory().getName().equals(prevCategory));
      if ((showHeadline || prevCategory == null) && rule.getCategory() != null) {
        checkBoxPanel.add(new JLabel(rule.getCategory().getName()),cons);
        prevCategory=rule.getCategory().getName();
        cons.gridy++;
        row++;
      }
      checkBox.setMargin(new Insets(0,20,0,0));
      checkBoxPanel.add(checkBox,cons);
      row++;
    }
    prevID=rule.getId();
  }
  JPanel motherTonguePanel=new JPanel();
  motherTonguePanel.add(new JLabel(messages.getString("guiMotherTongue")),cons);
  motherTongueBox=new JComboBox(getPossibleMotherTongues());
  if (motherTongue != null)   motherTongueBox.setSelectedItem(motherTongue);
  motherTonguePanel.add(motherTongueBox,cons);
  JPanel portPanel=new JPanel();
  portPanel.setLayout(new GridBagLayout());
  cons=new GridBagConstraints();
  cons.insets=new Insets(0,4,0,0);
  cons.gridx=0;
  cons.gridy=0;
  cons.anchor=GridBagConstraints.WEST;
  cons.fill=GridBagConstraints.NONE;
  cons.weightx=0.0f;
  if (!insideOOo) {
    serverCheckbox=new JCheckBox(messages.getString("guiRunOnPort"));
    serverCheckbox.setMnemonic('r');
    serverCheckbox.setSelected(serverMode);
    portPanel.add(serverCheckbox,cons);
    serverPortField=new JTextField(serverPort + "");
    serverPortField.setEnabled(serverCheckbox.isSelected());
    serverPortField.setMinimumSize(new Dimension(200,15));
    cons.gridx=1;
    serverCheckbox.addActionListener(new ActionListener(){
      public void actionPerformed(      @SuppressWarnings("unused") ActionEvent e){
        serverPortField.setEnabled(serverCheckbox.isSelected());
      }
    }
);
    portPanel.add(serverPortField,cons);
  }
  JPanel buttonPanel=new JPanel();
  buttonPanel.setLayout(new GridBagLayout());
  okButton=new JButton(messages.getString("guiOKButton"));
  okButton.setMnemonic('o');
  okButton.addActionListener(this);
  cancelButton=new JButton(messages.getString("guiCancelButton"));
  cancelButton.setMnemonic('c');
  cancelButton.addActionListener(this);
  cons=new GridBagConstraints();
  cons.insets=new Insets(0,4,0,0);
  buttonPanel.add(okButton,cons);
  buttonPanel.add(cancelButton,cons);
  Container contentPane=dialog.getContentPane();
  contentPane.setLayout(new GridBagLayout());
  cons=new GridBagConstraints();
  cons.insets=new Insets(4,4,4,4);
  cons.gridx=0;
  cons.gridy=0;
  cons.weightx=10.0f;
  cons.weighty=10.0f;
  cons.fill=GridBagConstraints.BOTH;
  contentPane.add(new JScrollPane(checkBoxPanel),cons);
  cons.gridx=0;
  cons.gridy=1;
  cons.weightx=0.0f;
  cons.weighty=0.0f;
  cons.fill=GridBagConstraints.NONE;
  cons.anchor=GridBagConstraints.WEST;
  contentPane.add(motherTonguePanel,cons);
  cons.gridx=0;
  cons.gridy=2;
  cons.weightx=0.0f;
  cons.weighty=0.0f;
  cons.fill=GridBagConstraints.NONE;
  cons.anchor=GridBagConstraints.WEST;
  contentPane.add(portPanel,cons);
  cons.gridx=0;
  cons.gridy=3;
  cons.weightx=0.0f;
  cons.weighty=0.0f;
  cons.fill=GridBagConstraints.NONE;
  cons.anchor=GridBagConstraints.EAST;
  contentPane.add(buttonPanel,cons);
  dialog.pack();
  dialog.setSize(500,500);
  isClosed=false;
  Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
  Dimension frameSize=dialog.getSize();
  dialog.setLocation(screenSize.width / 2 - (frameSize.width / 2),screenSize.height / 2 - (frameSize.height / 2));
  dialog.setVisible(true);
}
