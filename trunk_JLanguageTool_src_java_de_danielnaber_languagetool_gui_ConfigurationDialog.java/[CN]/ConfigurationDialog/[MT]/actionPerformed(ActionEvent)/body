{
  if (e.getSource() == okButton) {
    int i=0;
    inactiveCategoryNames.clear();
    for (    JCheckBox checkBox : categoryCheckBoxes) {
      if (!checkBox.isSelected()) {
        final String categoryName=checkBoxesCategoryNames.get(i);
        inactiveCategoryNames.add(categoryName);
      }
      i++;
    }
    i=0;
    inactiveRuleIds.clear();
    enabledRuleIds.clear();
    for (    JCheckBox checkBox : checkBoxes) {
      if (!checkBox.isSelected()) {
        final String ruleId=checkBoxesRuleIds.get(i);
        if (!defaultOffRules.contains(ruleId)) {
          inactiveRuleIds.add(ruleId);
        }
      }
      if (checkBox.isSelected()) {
        final String ruleId=checkBoxesRuleIds.get(i);
        if (defaultOffRules.contains(ruleId)) {
          enabledRuleIds.add(ruleId);
        }
      }
      i++;
    }
    if (motherTongueBox.getSelectedItem() instanceof String)     motherTongue=getLanguageForLocalizedName(motherTongueBox.getSelectedItem().toString());
 else     motherTongue=(Language)motherTongueBox.getSelectedItem();
    if (serverCheckbox != null) {
      serverMode=serverCheckbox.isSelected();
      serverPort=Integer.parseInt(serverPortField.getText());
    }
    isClosed=true;
    dialog.setVisible(false);
  }
 else   if (e.getSource() == cancelButton) {
    isClosed=true;
    dialog.setVisible(false);
  }
}
