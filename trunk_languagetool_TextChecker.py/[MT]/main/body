def main():
    options = None
    rest = None
    config = ConfigParser.ConfigParser()
    try:
        (options, rest) = getopt.getopt(sys.argv[1:], 'hcg:f:w:b:m:t:l:', ['help', 'check', 'grammar=', 'falsefriends=', 'words=', 'builtin=', 'mothertongue=', 'textlanguage=', 'sentencelength='])
    except getopt.GetoptError as e:
        print  >> sys.stderr, 'Error: ', e
        usage()
        sys.exit(2)
    grammar = None
    falsefriends = None
    words = None
    builtin = None
    textlanguage = mothertongue = None
    max_sentence_length = None
    textlanguage = 'de'
    for (o, a) in options:
        if (o in ('-g', '--grammar')):
            grammar = a.split(',')
        elif (o in ('-f', '--falsefriends')):
            falsefriends = a.split(',')
        elif (o in ('-w', '--words')):
            words = a.split(',')
        elif (o in ('-b', '--builtin')):
            builtin = a.split(',')
        elif (o in ('-m', '--mothertongue')):
            mothertongue = a
        elif (o in ('-t', '--textlanguage')):
            textlanguage = a
        elif (o in ('-l', '--sentencelength')):
            max_sentence_length = a
    Tagger.textlanguage = textlanguage
    Rules.textlanguage = textlanguage
    config.readfp(open('TextChecker.ini'))
    Tagger.dicFile = config.get(textlanguage, 'dicFile')
    Tagger.affFile = config.get(textlanguage, 'affFile')
    Rules.grammarFile = config.get(textlanguage, 'grammarFile')
    for (o, a) in options:
        if (o in ('-h', '--help')):
            usage()
            sys.exit(0)
        elif (o in ('-c', '--check')):
            checker = TextChecker(grammar, falsefriends, words, builtin, textlanguage, mothertongue, max_sentence_length)
            for filename in rest:
                checker.checkBNCFiles(filename, checker)
            print  >> sys.stderr, ('Checked %d sentences in %d paragraphs.' % (checker.bnc_sentences, checker.bnc_paras))
            sys.exit(0)
    if (len(rest) == 1):
        checker = TextChecker(grammar, falsefriends, words, builtin, textlanguage, mothertongue, max_sentence_length)
        (rule_matches, result, tagged_words) = checker.checkFile(rest[0])
        if (not result):
            print  >> sys.stderr, 'No errors found.'
        else:
            print result.encode('latin1')
    else:
        usage()
        sys.exit(1)
    return
