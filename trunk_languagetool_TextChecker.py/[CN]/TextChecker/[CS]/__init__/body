def __init__(self, grammar, falsefriends, words, builtin, textlanguage, mothertongue, max_sentence_length, debug_mode):
    self.grammar = grammar
    self.falsefriends = falsefriends
    self.words = words
    self.builtin = builtin
    self.textlanguage = textlanguage
    self.mothertongue = mothertongue
    self.max_sentence_length = max_sentence_length
    self.debug_mode = debug_mode
    config = ConfigParser.ConfigParser()
    config.readfp(open('TextChecker.ini'))
    Tagger.dicFile = config.get(textlanguage, 'dicFile')
    Tagger.affFile = config.get(textlanguage, 'affFile')
    if (self.max_sentence_length == None):
        self.max_sentence_length = config.get(textlanguage, 'maxSentenceLength')
    Rules.grammarFile = config.get(textlanguage, 'grammarFile')
    self.tagger = Tagger.Tagger(textlanguage)
    self.chunker = Chunker.Chunker()
    rules = Chunker.Rules()
    self.chunker.setRules(rules)
    self.tagger.bindData()
    self.rules = Rules.Rules(self.max_sentence_length, self.grammar, self.words, self.builtin, self.falsefriends, textlanguage, mothertongue)
    self.bnc_paras = 0
    self.bnc_sentences = 0
    self.xml_output = 0
    locale.setlocale(locale.LC_CTYPE, 'en_US.iso-8859-1')
    return
