{
  String text=contents.replace('\n',' ');
  int startContent=fromPos - contextSize;
  String prefix="...";
  String postfix="...";
  String markerPrefix="   ";
  if (startContent < 0) {
    prefix="";
    markerPrefix="";
    startContent=0;
  }
  int endContent=toPos + contextSize;
  int textLength=text.length();
  if (endContent > textLength) {
    postfix="";
    endContent=textLength;
  }
  StringBuilder marker=getMarker(fromPos,toPos,textLength + prefix.length());
  StringBuilder sb=new StringBuilder();
  sb.append(prefix);
  sb.append(text.substring(startContent,endContent));
  String markerStr=markerPrefix + marker.substring(startContent,endContent);
  sb.append(postfix);
  int startMark=markerStr.indexOf('^');
  int endMark=markerStr.lastIndexOf('^');
  String result=sb.toString();
  if (escapeHtml) {
    String escapedErrorPart=StringTools.escapeHTML(result.substring(startMark,endMark + 1)).replace(" ","&nbsp;");
    result=StringTools.escapeHTML(result.substring(0,startMark)) + errorMarkerStart + escapedErrorPart+ errorMarkerEnd+ StringTools.escapeHTML(result.substring(endMark + 1));
  }
 else {
    result=result.substring(0,startMark) + errorMarkerStart + result.substring(startMark,endMark + 1)+ errorMarkerEnd+ result.substring(endMark + 1);
  }
  return result;
}
