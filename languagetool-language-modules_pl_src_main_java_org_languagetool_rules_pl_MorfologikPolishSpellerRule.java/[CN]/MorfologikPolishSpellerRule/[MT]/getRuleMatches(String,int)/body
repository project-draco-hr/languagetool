{
  final List<RuleMatch> ruleMatches=new ArrayList<>();
  if (isMisspelled(speller,word) && isNotCompound(word)) {
    final RuleMatch ruleMatch=new RuleMatch(this,startPos,startPos + word.length(),messages.getString("spelling"),messages.getString("desc_spelling_short"));
    if (!isMisspelled(speller,word.toLowerCase(conversionLocale))) {
      List<String> suggestion=Arrays.asList(word.toLowerCase(conversionLocale));
      ruleMatch.setSuggestedReplacements(suggestion);
      ruleMatches.add(ruleMatch);
      return ruleMatches;
    }
    List<String> suggestions=speller.getSuggestions(word);
    suggestions.addAll(getAdditionalSuggestions(suggestions,word));
    if (!suggestions.isEmpty()) {
      ruleMatch.setSuggestedReplacements(pruneSuggestions(orderSuggestions(suggestions,word)));
    }
    ruleMatches.add(ruleMatch);
  }
  return ruleMatches;
}
