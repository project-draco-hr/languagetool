{
  ArrayList<CgSet> twoSets=new ArrayList<CgSet>();
  CgTag[] postags=target.getSingleTagPostags();
  CgTag[] baseforms=target.getSingleTagBaseforms();
  CgTag[] surfaceforms=target.getSingleTagSurfaceforms();
  CgCompositeTag[] compositePostags=target.getCompositePostags();
  CgCompositeTag[] compositeTags=target.getCompositeTags();
  if (postags.length > 0 && baseforms.length > 0) {
    CgSet set1=new CgSet(target);
    CgSet set2=new CgSet(set1);
    set1.single_tags.removeAll(Arrays.asList(postags));
    set1.tags.removeAll(Arrays.asList(compositePostags));
    set2.single_tags.removeAll(Arrays.asList(baseforms));
    twoSets.add(set1);
    twoSets.add(set2);
    return twoSets;
  }
  if (postags.length > 0 && surfaceforms.length > 0) {
    CgSet set1=new CgSet(target);
    CgSet set2=new CgSet(target);
    set1.single_tags.removeAll(Arrays.asList(postags));
    set1.tags.removeAll(Arrays.asList(compositePostags));
    set2.single_tags.removeAll(Arrays.asList(surfaceforms));
    twoSets.add(set1);
    twoSets.add(set2);
    return twoSets;
  }
  if (surfaceforms.length > 0 && baseforms.length > 0) {
    CgSet set1=new CgSet(target);
    CgSet set2=new CgSet(target);
    set1.single_tags.removeAll(Arrays.asList(surfaceforms));
    set2.single_tags.removeAll(Arrays.asList(baseforms));
    twoSets.add(set1);
    twoSets.add(set2);
    return twoSets;
  }
  for (  CgCompositeTag ctag : compositeTags) {
    CgSet set1=new CgSet(target);
    CgSet set2=new CgSet(target);
    set1.tags.remove(ctag);
    set2.tags.removeAll(Arrays.asList(compositeTags));
    set2.tags.removeAll(Arrays.asList(compositePostags));
    set2.single_tags=new HashSet<CgTag>();
    set2.tags.add(ctag);
    twoSets.add(set1);
    twoSets.add(set2);
    return twoSets;
  }
  return null;
}
