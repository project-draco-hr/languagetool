{
  ArrayList<List<Token>> list=new ArrayList<List<Token>>();
  ArrayList<Token> list1=new ArrayList<Token>();
  ArrayList<Token> list2=new ArrayList<Token>();
  int i=0;
  for (i=0; i < tokens.size(); i++) {
    if (isOrCompatible(tokens.get(i))) {
      list1.add(tokens.get(i));
      list2.add(tokens.get(i));
    }
 else {
      ArrayList<CgSet> twoSets=splitCgSet(tokens.get(i).target);
      Token token1=new Token(tokens.get(i));
      Token token2=new Token(tokens.get(i));
      token1.target=twoSets.get(0);
      token2.target=twoSets.get(1);
      token1.postags=getPostags(token1.target);
      token1.baseforms=getBaseForms(token1.target);
      token1.surfaceforms=getSurfaceForms(token1.target);
      token1.compositeTags=getCompositeTags(token1.target);
      token2.postags=getPostags(token2.target);
      token2.baseforms=getBaseForms(token2.target);
      token2.surfaceforms=getSurfaceForms(token2.target);
      token2.compositeTags=getCompositeTags(token2.target);
      list1.add(token1);
      list2.add(token2);
    }
  }
  for (int j=i + 1; j < tokens.size(); j++) {
    list1.add(tokens.get(j));
    list2.add(tokens.get(j));
  }
  list.add(list1);
  list.add(list2);
  return list;
}
