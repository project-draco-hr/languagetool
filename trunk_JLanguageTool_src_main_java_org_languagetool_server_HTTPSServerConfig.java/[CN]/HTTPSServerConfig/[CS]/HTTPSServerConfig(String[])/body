{
  super(args);
  File config=null;
  for (int i=0; i < args.length; i++) {
    if ("--config".equals(args[i])) {
      config=new File(args[++i]);
    }
  }
  if (config == null) {
    throw new IllegalArgumentException("Parameter --config must be set and point to a property file");
  }
  try {
    final Properties props=new Properties();
    final FileInputStream fis=new FileInputStream(config);
    try {
      props.load(fis);
      keystore=new File(getProperty(props,"keystore",config));
      keyStorePassword=getProperty(props,"password",config);
      requestLimit=Integer.parseInt(getOptionalProperty(props,"requestLimit","0"));
      requestLimitPeriodInSeconds=Integer.parseInt(getOptionalProperty(props,"requestLimitPeriodInSeconds","0"));
      maxTextLength=Integer.parseInt(getOptionalProperty(props,"maxTextLength",Integer.toString(Integer.MAX_VALUE)));
    }
  finally {
      fis.close();
    }
  }
 catch (  IOException e) {
    throw new RuntimeException("Could not load properties from '" + config + "'",e);
  }
}
