{
  this.prg=prg;
  initStrings();
  fileMenu.setMnemonic(0);
  editMenu.setMnemonic(0);
  navigateMenu.setMnemonic(0);
  helpMenu.setMnemonic(0);
  final JMenuItem openItem=new JMenuItem(openText);
  openItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O,Event.CTRL_MASK));
  openItem.setMnemonic(0);
  openItem.addActionListener(this);
  fileMenu.add(openItem);
  final JMenuItem writeItem=new JMenuItem(writeText);
  writeItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S,Event.CTRL_MASK | Event.SHIFT_MASK));
  writeItem.setMnemonic(0);
  writeItem.addActionListener(this);
  fileMenu.add(writeItem);
  final JMenuItem showRulesItem=new JMenuItem(showRulesText);
  showRulesItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_R,Event.CTRL_MASK));
  showRulesItem.setMnemonic(0);
  showRulesItem.addActionListener(this);
  fileMenu.add(showRulesItem);
  final JMenuItem showCoveringRulesItem=new JMenuItem(showCoveringRulesText);
  showCoveringRulesItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_L,Event.CTRL_MASK));
  showCoveringRulesItem.addActionListener(this);
  fileMenu.add(showCoveringRulesItem);
  final JMenuItem showOriginalFileItem=new JMenuItem(showOriginalFileText);
  showOriginalFileItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_W,Event.CTRL_MASK));
  showOriginalFileItem.addActionListener(this);
  fileMenu.add(showOriginalFileItem);
  final JMenuItem quitItem=new JMenuItem(quitText);
  quitItem.setMnemonic(0);
  quitItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Q,Event.CTRL_MASK));
  quitItem.addActionListener(this);
  fileMenu.add(quitItem);
  final JMenuItem saveRuleItem=new JMenuItem(saveRuleText);
  saveRuleItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S,Event.CTRL_MASK));
  saveRuleItem.addActionListener(this);
  editMenu.add(saveRuleItem);
  final JMenuItem removeCoveringRulesItem=new JMenuItem(removeCoveringRulesText);
  removeCoveringRulesItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_I,Event.CTRL_MASK));
  removeCoveringRulesItem.addActionListener(this);
  editMenu.add(removeCoveringRulesItem);
  final JMenuItem removeWarningsItem=new JMenuItem(removeWarningsText);
  removeWarningsItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_G,Event.CTRL_MASK));
  removeWarningsItem.addActionListener(this);
  editMenu.add(removeWarningsItem);
  final JMenuItem allRulesExclusiveItem=new JMenuItem(allRulesExclusiveText);
  allRulesExclusiveItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X,Event.CTRL_MASK | Event.ALT_MASK | Event.SHIFT_MASK));
  allRulesExclusiveItem.addActionListener(this);
  editMenu.add(allRulesExclusiveItem);
  final JMenuItem cutItem=new JMenuItem(cutText);
  cutItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X,Event.CTRL_MASK));
  cutItem.addActionListener(this);
  editMenu.add(cutItem);
  final JMenuItem copyItem=new JMenuItem(copyText);
  copyItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C,Event.CTRL_MASK));
  copyItem.addActionListener(this);
  editMenu.add(copyItem);
  final JMenuItem pasteItem=new JMenuItem(pasteText);
  pasteItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P,Event.CTRL_MASK));
  pasteItem.addActionListener(this);
  editMenu.add(pasteItem);
  final JMenuItem nextRuleItem=new JMenuItem(nextRuleText);
  nextRuleItem.setMnemonic(0);
  nextRuleItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN,Event.CTRL_MASK));
  nextRuleItem.addActionListener(this);
  navigateMenu.add(nextRuleItem);
  final JMenuItem prevRuleItem=new JMenuItem(prevRuleText);
  prevRuleItem.setMnemonic(0);
  prevRuleItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_UP,Event.CTRL_MASK));
  prevRuleItem.addActionListener(this);
  navigateMenu.add(prevRuleItem);
  final JMenuItem aboutItem=new JMenuItem(aboutText);
  aboutItem.addActionListener(this);
  aboutItem.setMnemonic(0);
  helpMenu.add(aboutItem);
  add(fileMenu);
  add(editMenu);
  add(navigateMenu);
  add(helpMenu);
}
