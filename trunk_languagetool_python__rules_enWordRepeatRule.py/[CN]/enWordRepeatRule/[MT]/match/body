def match(self, tagged_words, chunks, position_fix=0, line_fix=0, column_fix=0):
    matches = []
    text_length = 0
    i = 0
    line_breaks = 0
    column = 0
    while 1:
        org_word = tagged_words[i][0]
        line_breaks_cur = Tools.Tools.countLinebreaks(org_word)
        if (line_breaks_cur > 0):
            column = 0
        line_breaks = (line_breaks + line_breaks_cur)
        if (i >= (len(tagged_words) - 2)):
            break
        org_tag = tagged_words[i][2]
        if (org_tag == 'CRD'):
            i = (i + 1)
            continue
        if (org_word and self.punct.match(org_word)):
            i = (i + 1)
            continue
        org_word_next = tagged_words[(i + 2)][0]
        text_length = (text_length + len(org_word))
        if (tagged_words[i][1] == None):
            if (line_breaks_cur == 0):
                column = (column + len(org_word))
            i = (i + 1)
            continue
        whitespace_length = len(tagged_words[(i + 1)][0])
        if (line_breaks_cur == 0):
            column = (column + len(org_word))
        if (org_word.lower() == org_word_next.lower()):
            matches.append(Rules.RuleMatch(self.rule_id, (text_length + position_fix), (((text_length + whitespace_length) + len(org_word_next)) + position_fix), (line_breaks + line_fix), (column + column_fix), ('<message>You repeated a word. Maybe you should <em>remove</em> one ' + 'of the words?</message>'), org_word))
        i = (i + 1)
    return matches
