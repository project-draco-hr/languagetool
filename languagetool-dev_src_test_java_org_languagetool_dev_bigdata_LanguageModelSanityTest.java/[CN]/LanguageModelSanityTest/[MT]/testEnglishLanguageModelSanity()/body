{
  LuceneLanguageModel lm=new LuceneLanguageModel(new File(NGRAM_DIR));
  assertMatches(lm,"the");
  assertMatches(lm,"The");
  assertMatches(lm,",");
  assertMatches(lm,"0");
  assertMatches(lm,"1");
  assertMatches(lm,"2");
  assertMatches(lm,"3");
  assertMatches(lm,"4");
  assertMatches(lm,"5");
  assertMatches(lm,"6");
  assertMatches(lm,"7");
  assertMatches(lm,"8");
  assertMatches(lm,"9");
  assertMatches(lm,":");
  assertMatches(lm,"(");
  assertMatches(lm,")");
  assertMatches(lm,"??");
  assertMatches(lm,"the man");
  assertMatches(lm,"The man");
  assertMatches(lm,"_START_ the");
  assertMatches(lm,"_START_ The");
  assertMatches(lm,"it _END_");
  assertMatches(lm,"it .");
  assertMatches(lm,"Also ,");
  assertMatches(lm,"is 0");
  assertMatches(lm,": it");
  assertMatches(lm,"( it");
  assertMatches(lm,"it )");
  assertMatches(lm,"?? 5");
  assertMatches(lm,"the man who");
  assertMatches(lm,"The man who");
  assertMatches(lm,"_START_ The man");
  assertMatches(lm,"it was _END_");
  assertMatches(lm,"it was .");
  assertMatches(lm,"Also , it");
  assertMatches(lm,"it is 0");
  assertMatches(lm,": it is");
  assertMatches(lm,"( it is");
  assertMatches(lm,"it is )");
  assertMatches(lm,"five - pound");
  assertMatches(lm,"is ?? 5");
  assertMatches(lm,"it 's a");
  assertMatches(lm,"it ' s");
  assertMatches(lm,"the man who could");
  assertMatches(lm,"The man who could");
  assertMatches(lm,"five - pound note");
  assertMatches(lm,"_START_ The man who");
  assertMatches(lm,"which it was _END_");
  assertMatches(lm,"Also , it is");
  assertMatches(lm,"when it is 0");
  assertMatches(lm,"it is ?? 5");
}
