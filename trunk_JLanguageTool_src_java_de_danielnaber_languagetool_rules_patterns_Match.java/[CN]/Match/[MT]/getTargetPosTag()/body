{
  String targetPosTag=posTag;
  if (staticLemma) {
    final int numRead=matchedToken.getReadingsLength();
    for (int i=0; i < numRead; i++) {
      final String tst=matchedToken.getAnalyzedToken(i).getPOSTag();
      if (tst != null) {
        if (pPosRegexMatch.matcher(tst).matches()) {
          targetPosTag=matchedToken.getAnalyzedToken(i).getPOSTag();
          break;
        }
      }
    }
    if (pPosRegexMatch != null & posTagReplace != null) {
      targetPosTag=pPosRegexMatch.matcher(targetPosTag).replaceAll(posTagReplace);
    }
    if (targetPosTag.indexOf('?') > 0) {
      targetPosTag=targetPosTag.replaceAll("\\?","\\\\?");
    }
  }
 else {
    final int numRead=formattedToken.getReadingsLength();
    for (int i=0; i < numRead; i++) {
      String tst=formattedToken.getAnalyzedToken(i).getPOSTag();
      if (tst != null) {
        if (pPosRegexMatch.matcher(tst).matches()) {
          targetPosTag=formattedToken.getAnalyzedToken(i).getPOSTag();
          break;
        }
      }
    }
    if (pPosRegexMatch != null & posTagReplace != null) {
      targetPosTag=pPosRegexMatch.matcher(targetPosTag).replaceAll(posTagReplace);
      if (setPos) {
        targetPosTag=synthesizer.getPosTagCorrection(targetPosTag);
      }
    }
  }
  return targetPosTag;
}
